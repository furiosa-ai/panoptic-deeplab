nohup: ignoring input
Command Line Args: Namespace(config_file='configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', 'pretrained/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.pth'], resume=False)
[32m[05/27 15:39:17 detectron2]: [0mRank of current process: 0. World size: 1
[32m[05/27 15:39:18 detectron2]: [0mEnvironment info:
----------------------  -------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 | packaged by conda-forge | (default, Oct 12 2021, 21:59:51) [GCC 9.4.0]
numpy                   1.22.4
detectron2              0.6 @/pvc/ljh726/detectron2/detectron2
Compiler                GCC 9.3
CUDA compiler           CUDA 11.6
detectron2 arch flags   5.2, 6.0, 6.1, 7.0, 7.5, 8.0, 8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.9.1+cu111 @/opt/conda/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA A100-SXM4-80GB (arch=8.0)
Driver version          470.82.01
CUDA_HOME               /usr/local/cuda
TORCH_CUDA_ARCH_LIST    5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX
Pillow                  8.2.0
torchvision             0.10.1+cu111 @/opt/conda/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     3.4.11
----------------------  -------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[32m[05/27 15:39:18 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', 'pretrained/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.pth'], resume=False)
[32m[05/27 15:39:18 detectron2]: [0mContents of args.config_file=configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39mBase-PanopticDeepLab-OS16.yaml
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pretrained/x65.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m128[39m,[38;5;15m [39m[38;5;15m128[39m,[38;5;15m [39m[38;5;15m128[39m]
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m128[39m,[38;5;15m [39m[38;5;15m128[39m,[38;5;15m [39m[38;5;15m128[39m]
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186md2_xception_65[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBN[39m[38;5;186m"[39m[38;5;15m [39m[38;5;242m#SyncBN: Multi-GPU[39m
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAM[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m60000
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mabsolute[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m(1025, 2049)
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/xception65_dsconv_61218_crop/[39m[38;5;186m"[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m1

[32m[05/27 15:39:18 detectron2]: [0mRunning with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcityscapes_fine_panoptic_val
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcityscapes_fine_panoptic_train
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m1025
[38;5;15m    [39m-[38;5;15m [39m2049
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mabsolute
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mRGB
[38;5;15m  [39m[38;5;197mGAUSSIAN_SIGMA[39m[38;5;15m:[39m[38;5;15m [39m10
[38;5;15m  [39m[38;5;197mIGNORE_CROWD_IN_SEMANTIC[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mIGNORE_STUFF_IN_OFFSET[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m512
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m832
[38;5;15m  [39m-[38;5;15m [39m896
[38;5;15m  [39m-[38;5;15m [39m1024
[38;5;15m  [39m-[38;5;15m [39m1152
[38;5;15m  [39m-[38;5;15m [39m1216
[38;5;15m  [39m-[38;5;15m [39m1344
[38;5;15m  [39m-[38;5;15m [39m1408
[38;5;15m  [39m-[38;5;15m [39m1536
[38;5;15m  [39m-[38;5;15m [39m1664
[38;5;15m  [39m-[38;5;15m [39m1728
[38;5;15m  [39m-[38;5;15m [39m1856
[38;5;15m  [39m-[38;5;15m [39m1920
[38;5;15m  [39m-[38;5;15m [39m2048
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m3
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m      [39m-[38;5;15m [39m64
[38;5;15m      [39m-[38;5;15m [39m128
[38;5;15m      [39m-[38;5;15m [39m256
[38;5;15m      [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39md2_xception_65
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mINS_EMBED_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCENTER_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m200.0
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabInsEmbedHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mBN
[38;5;15m    [39m[38;5;197mOFFSET_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLab
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBENCHMARK_NETWORK_SPEED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCENTER_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mNMS_KERNEL[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPREDICT_INSTANCES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mSTUFF_AREA[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m    [39m[38;5;197mTOP_K_INSTANCE[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m-[38;5;15m [39m2
[38;5;15m    [39m-[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39mdeeplab
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRes5ROIHeads
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mMaskRCNNConvUpsampleHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m6000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m12000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mLOSS_TOP_K[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39mhard_pixel_mining
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabSemSegHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mBN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m19
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39mpretrained/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m./output/xception65_dsconv_61218_crop/
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m5000
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupPolyLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m60000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39mADAM
[38;5;15m  [39m[38;5;197mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m30000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m100
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[32m[05/27 15:39:18 detectron2]: [0mFull config saved to ./output/xception65_dsconv_61218_crop/config.yaml
[32m[05/27 15:39:18 d2.utils.env]: [0mUsing a generated random seed 19274265
[32m[05/27 15:39:23 d2.engine.defaults]: [0mModel:
PanopticDeepLab(
  (backbone): d2_xception_65(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (block1): XceptionBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
          (bn_depth): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn_depth): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block2): XceptionBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (bn_depth): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block3): XceptionBlock(
      (conv): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block4): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block5): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block6): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block7): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block8): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block9): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block10): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block11): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block12): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block13): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block14): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block15): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block16): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block17): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block18): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block19): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block20): XceptionBlock(
      (conv): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (bn_depth): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block21): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1024, bias=False)
          (bn_depth): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False
            (norm): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            288, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AdaptiveAvgPool2d(output_size=1)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=256, bias=False
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False
            (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AdaptiveAvgPool2d(output_size=1)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128, bias=False
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[32m[05/27 15:39:23 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from pretrained/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.pth ...
[32m[05/27 15:39:24 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with model:
| Names in Model                                               | Names in Checkpoint                                                                                                                                   | Shapes                                          |
|:-------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------|
| backbone.block1.bn.*                                         | backbone.block1.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                         | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.conv.weight                                  | backbone.block1.conv.weight                                                                                                                           | (128, 64, 1, 1)                                 |
| backbone.block1.sep_conv1.block.bn_depth.*                   | backbone.block1.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (64,) () (64,) (64,) (64,)                      |
| backbone.block1.sep_conv1.block.bn_point.*                   | backbone.block1.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv1.block.depthwise.weight             | backbone.block1.sep_conv1.block.depthwise.weight                                                                                                      | (64, 1, 3, 3)                                   |
| backbone.block1.sep_conv1.block.pointwise.weight             | backbone.block1.sep_conv1.block.pointwise.weight                                                                                                      | (128, 64, 1, 1)                                 |
| backbone.block1.sep_conv2.block.bn_depth.*                   | backbone.block1.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv2.block.bn_point.*                   | backbone.block1.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv2.block.depthwise.weight             | backbone.block1.sep_conv2.block.depthwise.weight                                                                                                      | (128, 1, 3, 3)                                  |
| backbone.block1.sep_conv2.block.pointwise.weight             | backbone.block1.sep_conv2.block.pointwise.weight                                                                                                      | (128, 128, 1, 1)                                |
| backbone.block1.sep_conv3.block.bn_depth.*                   | backbone.block1.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv3.block.bn_point.*                   | backbone.block1.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv3.block.depthwise.weight             | backbone.block1.sep_conv3.block.depthwise.weight                                                                                                      | (128, 1, 3, 3)                                  |
| backbone.block1.sep_conv3.block.pointwise.weight             | backbone.block1.sep_conv3.block.pointwise.weight                                                                                                      | (128, 128, 1, 1)                                |
| backbone.block10.sep_conv1.block.bn_depth.*                  | backbone.block10.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv1.block.bn_point.*                  | backbone.block10.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv1.block.depthwise.weight            | backbone.block10.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block10.sep_conv1.block.pointwise.weight            | backbone.block10.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block10.sep_conv2.block.bn_depth.*                  | backbone.block10.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv2.block.bn_point.*                  | backbone.block10.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv2.block.depthwise.weight            | backbone.block10.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block10.sep_conv2.block.pointwise.weight            | backbone.block10.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block10.sep_conv3.block.bn_depth.*                  | backbone.block10.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv3.block.bn_point.*                  | backbone.block10.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv3.block.depthwise.weight            | backbone.block10.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block10.sep_conv3.block.pointwise.weight            | backbone.block10.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block11.sep_conv1.block.bn_depth.*                  | backbone.block11.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv1.block.bn_point.*                  | backbone.block11.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv1.block.depthwise.weight            | backbone.block11.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block11.sep_conv1.block.pointwise.weight            | backbone.block11.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block11.sep_conv2.block.bn_depth.*                  | backbone.block11.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv2.block.bn_point.*                  | backbone.block11.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv2.block.depthwise.weight            | backbone.block11.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block11.sep_conv2.block.pointwise.weight            | backbone.block11.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block11.sep_conv3.block.bn_depth.*                  | backbone.block11.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv3.block.bn_point.*                  | backbone.block11.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv3.block.depthwise.weight            | backbone.block11.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block11.sep_conv3.block.pointwise.weight            | backbone.block11.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block12.sep_conv1.block.bn_depth.*                  | backbone.block12.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv1.block.bn_point.*                  | backbone.block12.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv1.block.depthwise.weight            | backbone.block12.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block12.sep_conv1.block.pointwise.weight            | backbone.block12.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block12.sep_conv2.block.bn_depth.*                  | backbone.block12.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv2.block.bn_point.*                  | backbone.block12.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv2.block.depthwise.weight            | backbone.block12.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block12.sep_conv2.block.pointwise.weight            | backbone.block12.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block12.sep_conv3.block.bn_depth.*                  | backbone.block12.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv3.block.bn_point.*                  | backbone.block12.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv3.block.depthwise.weight            | backbone.block12.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block12.sep_conv3.block.pointwise.weight            | backbone.block12.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block13.sep_conv1.block.bn_depth.*                  | backbone.block13.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv1.block.bn_point.*                  | backbone.block13.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv1.block.depthwise.weight            | backbone.block13.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block13.sep_conv1.block.pointwise.weight            | backbone.block13.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block13.sep_conv2.block.bn_depth.*                  | backbone.block13.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv2.block.bn_point.*                  | backbone.block13.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv2.block.depthwise.weight            | backbone.block13.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block13.sep_conv2.block.pointwise.weight            | backbone.block13.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block13.sep_conv3.block.bn_depth.*                  | backbone.block13.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv3.block.bn_point.*                  | backbone.block13.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv3.block.depthwise.weight            | backbone.block13.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block13.sep_conv3.block.pointwise.weight            | backbone.block13.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block14.sep_conv1.block.bn_depth.*                  | backbone.block14.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv1.block.bn_point.*                  | backbone.block14.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv1.block.depthwise.weight            | backbone.block14.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block14.sep_conv1.block.pointwise.weight            | backbone.block14.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block14.sep_conv2.block.bn_depth.*                  | backbone.block14.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv2.block.bn_point.*                  | backbone.block14.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv2.block.depthwise.weight            | backbone.block14.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block14.sep_conv2.block.pointwise.weight            | backbone.block14.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block14.sep_conv3.block.bn_depth.*                  | backbone.block14.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv3.block.bn_point.*                  | backbone.block14.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv3.block.depthwise.weight            | backbone.block14.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block14.sep_conv3.block.pointwise.weight            | backbone.block14.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block15.sep_conv1.block.bn_depth.*                  | backbone.block15.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv1.block.bn_point.*                  | backbone.block15.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv1.block.depthwise.weight            | backbone.block15.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block15.sep_conv1.block.pointwise.weight            | backbone.block15.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block15.sep_conv2.block.bn_depth.*                  | backbone.block15.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv2.block.bn_point.*                  | backbone.block15.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv2.block.depthwise.weight            | backbone.block15.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block15.sep_conv2.block.pointwise.weight            | backbone.block15.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block15.sep_conv3.block.bn_depth.*                  | backbone.block15.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv3.block.bn_point.*                  | backbone.block15.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv3.block.depthwise.weight            | backbone.block15.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block15.sep_conv3.block.pointwise.weight            | backbone.block15.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block16.sep_conv1.block.bn_depth.*                  | backbone.block16.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv1.block.bn_point.*                  | backbone.block16.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv1.block.depthwise.weight            | backbone.block16.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block16.sep_conv1.block.pointwise.weight            | backbone.block16.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block16.sep_conv2.block.bn_depth.*                  | backbone.block16.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv2.block.bn_point.*                  | backbone.block16.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv2.block.depthwise.weight            | backbone.block16.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block16.sep_conv2.block.pointwise.weight            | backbone.block16.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block16.sep_conv3.block.bn_depth.*                  | backbone.block16.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv3.block.bn_point.*                  | backbone.block16.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv3.block.depthwise.weight            | backbone.block16.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block16.sep_conv3.block.pointwise.weight            | backbone.block16.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block17.sep_conv1.block.bn_depth.*                  | backbone.block17.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv1.block.bn_point.*                  | backbone.block17.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv1.block.depthwise.weight            | backbone.block17.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block17.sep_conv1.block.pointwise.weight            | backbone.block17.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block17.sep_conv2.block.bn_depth.*                  | backbone.block17.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv2.block.bn_point.*                  | backbone.block17.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv2.block.depthwise.weight            | backbone.block17.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block17.sep_conv2.block.pointwise.weight            | backbone.block17.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block17.sep_conv3.block.bn_depth.*                  | backbone.block17.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv3.block.bn_point.*                  | backbone.block17.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv3.block.depthwise.weight            | backbone.block17.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block17.sep_conv3.block.pointwise.weight            | backbone.block17.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block18.sep_conv1.block.bn_depth.*                  | backbone.block18.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv1.block.bn_point.*                  | backbone.block18.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv1.block.depthwise.weight            | backbone.block18.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block18.sep_conv1.block.pointwise.weight            | backbone.block18.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block18.sep_conv2.block.bn_depth.*                  | backbone.block18.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv2.block.bn_point.*                  | backbone.block18.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv2.block.depthwise.weight            | backbone.block18.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block18.sep_conv2.block.pointwise.weight            | backbone.block18.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block18.sep_conv3.block.bn_depth.*                  | backbone.block18.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv3.block.bn_point.*                  | backbone.block18.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv3.block.depthwise.weight            | backbone.block18.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block18.sep_conv3.block.pointwise.weight            | backbone.block18.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block19.sep_conv1.block.bn_depth.*                  | backbone.block19.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv1.block.bn_point.*                  | backbone.block19.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv1.block.depthwise.weight            | backbone.block19.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block19.sep_conv1.block.pointwise.weight            | backbone.block19.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block19.sep_conv2.block.bn_depth.*                  | backbone.block19.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv2.block.bn_point.*                  | backbone.block19.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv2.block.depthwise.weight            | backbone.block19.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block19.sep_conv2.block.pointwise.weight            | backbone.block19.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block19.sep_conv3.block.bn_depth.*                  | backbone.block19.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv3.block.bn_point.*                  | backbone.block19.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv3.block.depthwise.weight            | backbone.block19.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block19.sep_conv3.block.pointwise.weight            | backbone.block19.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block2.bn.*                                         | backbone.block2.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                         | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.conv.weight                                  | backbone.block2.conv.weight                                                                                                                           | (256, 128, 1, 1)                                |
| backbone.block2.sep_conv1.block.bn_depth.*                   | backbone.block2.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block2.sep_conv1.block.bn_point.*                   | backbone.block2.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv1.block.depthwise.weight             | backbone.block2.sep_conv1.block.depthwise.weight                                                                                                      | (128, 1, 3, 3)                                  |
| backbone.block2.sep_conv1.block.pointwise.weight             | backbone.block2.sep_conv1.block.pointwise.weight                                                                                                      | (256, 128, 1, 1)                                |
| backbone.block2.sep_conv2.block.bn_depth.*                   | backbone.block2.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv2.block.bn_point.*                   | backbone.block2.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv2.block.depthwise.weight             | backbone.block2.sep_conv2.block.depthwise.weight                                                                                                      | (256, 1, 3, 3)                                  |
| backbone.block2.sep_conv2.block.pointwise.weight             | backbone.block2.sep_conv2.block.pointwise.weight                                                                                                      | (256, 256, 1, 1)                                |
| backbone.block2.sep_conv3.block.bn_depth.*                   | backbone.block2.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv3.block.bn_point.*                   | backbone.block2.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv3.block.depthwise.weight             | backbone.block2.sep_conv3.block.depthwise.weight                                                                                                      | (256, 1, 3, 3)                                  |
| backbone.block2.sep_conv3.block.pointwise.weight             | backbone.block2.sep_conv3.block.pointwise.weight                                                                                                      | (256, 256, 1, 1)                                |
| backbone.block20.bn.*                                        | backbone.block20.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                        | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block20.conv.weight                                 | backbone.block20.conv.weight                                                                                                                          | (1024, 728, 1, 1)                               |
| backbone.block20.sep_conv1.block.bn_depth.*                  | backbone.block20.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block20.sep_conv1.block.bn_point.*                  | backbone.block20.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block20.sep_conv1.block.depthwise.weight            | backbone.block20.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block20.sep_conv1.block.pointwise.weight            | backbone.block20.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block20.sep_conv2.block.bn_depth.*                  | backbone.block20.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block20.sep_conv2.block.bn_point.*                  | backbone.block20.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block20.sep_conv2.block.depthwise.weight            | backbone.block20.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block20.sep_conv2.block.pointwise.weight            | backbone.block20.sep_conv2.block.pointwise.weight                                                                                                     | (1024, 728, 1, 1)                               |
| backbone.block20.sep_conv3.block.bn_depth.*                  | backbone.block20.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block20.sep_conv3.block.bn_point.*                  | backbone.block20.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block20.sep_conv3.block.depthwise.weight            | backbone.block20.sep_conv3.block.depthwise.weight                                                                                                     | (1024, 1, 3, 3)                                 |
| backbone.block20.sep_conv3.block.pointwise.weight            | backbone.block20.sep_conv3.block.pointwise.weight                                                                                                     | (1024, 1024, 1, 1)                              |
| backbone.block21.sep_conv1.block.bn_depth.*                  | backbone.block21.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block21.sep_conv1.block.bn_point.*                  | backbone.block21.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1536,) () (1536,) (1536,) (1536,)              |
| backbone.block21.sep_conv1.block.depthwise.weight            | backbone.block21.sep_conv1.block.depthwise.weight                                                                                                     | (1024, 1, 3, 3)                                 |
| backbone.block21.sep_conv1.block.pointwise.weight            | backbone.block21.sep_conv1.block.pointwise.weight                                                                                                     | (1536, 1024, 1, 1)                              |
| backbone.block21.sep_conv2.block.bn_depth.*                  | backbone.block21.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1536,) () (1536,) (1536,) (1536,)              |
| backbone.block21.sep_conv2.block.bn_point.*                  | backbone.block21.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1536,) () (1536,) (1536,) (1536,)              |
| backbone.block21.sep_conv2.block.depthwise.weight            | backbone.block21.sep_conv2.block.depthwise.weight                                                                                                     | (1536, 1, 3, 3)                                 |
| backbone.block21.sep_conv2.block.pointwise.weight            | backbone.block21.sep_conv2.block.pointwise.weight                                                                                                     | (1536, 1536, 1, 1)                              |
| backbone.block21.sep_conv3.block.bn_depth.*                  | backbone.block21.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1536,) () (1536,) (1536,) (1536,)              |
| backbone.block21.sep_conv3.block.bn_point.*                  | backbone.block21.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (2048,) () (2048,) (2048,) (2048,)              |
| backbone.block21.sep_conv3.block.depthwise.weight            | backbone.block21.sep_conv3.block.depthwise.weight                                                                                                     | (1536, 1, 3, 3)                                 |
| backbone.block21.sep_conv3.block.pointwise.weight            | backbone.block21.sep_conv3.block.pointwise.weight                                                                                                     | (2048, 1536, 1, 1)                              |
| backbone.block3.bn.*                                         | backbone.block3.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                         | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.conv.weight                                  | backbone.block3.conv.weight                                                                                                                           | (728, 256, 1, 1)                                |
| backbone.block3.sep_conv1.block.bn_depth.*                   | backbone.block3.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block3.sep_conv1.block.bn_point.*                   | backbone.block3.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv1.block.depthwise.weight             | backbone.block3.sep_conv1.block.depthwise.weight                                                                                                      | (256, 1, 3, 3)                                  |
| backbone.block3.sep_conv1.block.pointwise.weight             | backbone.block3.sep_conv1.block.pointwise.weight                                                                                                      | (728, 256, 1, 1)                                |
| backbone.block3.sep_conv2.block.bn_depth.*                   | backbone.block3.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv2.block.bn_point.*                   | backbone.block3.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv2.block.depthwise.weight             | backbone.block3.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block3.sep_conv2.block.pointwise.weight             | backbone.block3.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block3.sep_conv3.block.bn_depth.*                   | backbone.block3.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv3.block.bn_point.*                   | backbone.block3.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv3.block.depthwise.weight             | backbone.block3.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block3.sep_conv3.block.pointwise.weight             | backbone.block3.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block4.sep_conv1.block.bn_depth.*                   | backbone.block4.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv1.block.bn_point.*                   | backbone.block4.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv1.block.depthwise.weight             | backbone.block4.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block4.sep_conv1.block.pointwise.weight             | backbone.block4.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block4.sep_conv2.block.bn_depth.*                   | backbone.block4.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv2.block.bn_point.*                   | backbone.block4.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv2.block.depthwise.weight             | backbone.block4.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block4.sep_conv2.block.pointwise.weight             | backbone.block4.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block4.sep_conv3.block.bn_depth.*                   | backbone.block4.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv3.block.bn_point.*                   | backbone.block4.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv3.block.depthwise.weight             | backbone.block4.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block4.sep_conv3.block.pointwise.weight             | backbone.block4.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block5.sep_conv1.block.bn_depth.*                   | backbone.block5.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv1.block.bn_point.*                   | backbone.block5.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv1.block.depthwise.weight             | backbone.block5.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block5.sep_conv1.block.pointwise.weight             | backbone.block5.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block5.sep_conv2.block.bn_depth.*                   | backbone.block5.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv2.block.bn_point.*                   | backbone.block5.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv2.block.depthwise.weight             | backbone.block5.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block5.sep_conv2.block.pointwise.weight             | backbone.block5.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block5.sep_conv3.block.bn_depth.*                   | backbone.block5.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv3.block.bn_point.*                   | backbone.block5.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv3.block.depthwise.weight             | backbone.block5.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block5.sep_conv3.block.pointwise.weight             | backbone.block5.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block6.sep_conv1.block.bn_depth.*                   | backbone.block6.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv1.block.bn_point.*                   | backbone.block6.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv1.block.depthwise.weight             | backbone.block6.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block6.sep_conv1.block.pointwise.weight             | backbone.block6.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block6.sep_conv2.block.bn_depth.*                   | backbone.block6.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv2.block.bn_point.*                   | backbone.block6.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv2.block.depthwise.weight             | backbone.block6.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block6.sep_conv2.block.pointwise.weight             | backbone.block6.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block6.sep_conv3.block.bn_depth.*                   | backbone.block6.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv3.block.bn_point.*                   | backbone.block6.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv3.block.depthwise.weight             | backbone.block6.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block6.sep_conv3.block.pointwise.weight             | backbone.block6.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block7.sep_conv1.block.bn_depth.*                   | backbone.block7.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv1.block.bn_point.*                   | backbone.block7.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv1.block.depthwise.weight             | backbone.block7.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block7.sep_conv1.block.pointwise.weight             | backbone.block7.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block7.sep_conv2.block.bn_depth.*                   | backbone.block7.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv2.block.bn_point.*                   | backbone.block7.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv2.block.depthwise.weight             | backbone.block7.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block7.sep_conv2.block.pointwise.weight             | backbone.block7.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block7.sep_conv3.block.bn_depth.*                   | backbone.block7.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv3.block.bn_point.*                   | backbone.block7.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv3.block.depthwise.weight             | backbone.block7.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block7.sep_conv3.block.pointwise.weight             | backbone.block7.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block8.sep_conv1.block.bn_depth.*                   | backbone.block8.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv1.block.bn_point.*                   | backbone.block8.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv1.block.depthwise.weight             | backbone.block8.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block8.sep_conv1.block.pointwise.weight             | backbone.block8.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block8.sep_conv2.block.bn_depth.*                   | backbone.block8.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv2.block.bn_point.*                   | backbone.block8.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv2.block.depthwise.weight             | backbone.block8.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block8.sep_conv2.block.pointwise.weight             | backbone.block8.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block8.sep_conv3.block.bn_depth.*                   | backbone.block8.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv3.block.bn_point.*                   | backbone.block8.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv3.block.depthwise.weight             | backbone.block8.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block8.sep_conv3.block.pointwise.weight             | backbone.block8.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block9.sep_conv1.block.bn_depth.*                   | backbone.block9.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv1.block.bn_point.*                   | backbone.block9.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv1.block.depthwise.weight             | backbone.block9.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block9.sep_conv1.block.pointwise.weight             | backbone.block9.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block9.sep_conv2.block.bn_depth.*                   | backbone.block9.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv2.block.bn_point.*                   | backbone.block9.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv2.block.depthwise.weight             | backbone.block9.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block9.sep_conv2.block.pointwise.weight             | backbone.block9.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block9.sep_conv3.block.bn_depth.*                   | backbone.block9.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv3.block.bn_point.*                   | backbone.block9.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv3.block.depthwise.weight             | backbone.block9.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block9.sep_conv3.block.pointwise.weight             | backbone.block9.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.bn1.*                                               | backbone.bn1.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                               | (32,) () (32,) (32,) (32,)                      |
| backbone.bn2.*                                               | backbone.bn2.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                               | (64,) () (64,) (64,) (64,)                      |
| backbone.conv1.weight                                        | backbone.conv1.weight                                                                                                                                 | (32, 3, 3, 3)                                   |
| backbone.conv2.weight                                        | backbone.conv2.weight                                                                                                                                 | (64, 32, 3, 3)                                  |
| ins_embed_head.center_head.0.*                               | ins_embed_head.center_head.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                               | (128,) () (128,) (128,) (128,) (128,128,3,3)    |
| ins_embed_head.center_head.1.*                               | ins_embed_head.center_head.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                               | (32,) () (32,) (32,) (32,) (32,128,3,3)         |
| ins_embed_head.center_predictor.*                            | ins_embed_head.center_predictor.{bias,weight}                                                                                                         | (1,) (1,32,1,1)                                 |
| ins_embed_head.decoder.res2.fuse_conv.depthwise.*            | ins_embed_head.decoder.res2.fuse_conv.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (160,) () (160,) (160,) (160,) (160,1,5,5)      |
| ins_embed_head.decoder.res2.fuse_conv.pointwise.*            | ins_embed_head.decoder.res2.fuse_conv.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (128,) () (128,) (128,) (128,) (128,160,1,1)    |
| ins_embed_head.decoder.res2.project_conv.*                   | ins_embed_head.decoder.res2.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                   | (32,) () (32,) (32,) (32,) (32,256,1,1)         |
| ins_embed_head.decoder.res3.fuse_conv.depthwise.*            | ins_embed_head.decoder.res3.fuse_conv.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (320,) () (320,) (320,) (320,) (320,1,5,5)      |
| ins_embed_head.decoder.res3.fuse_conv.pointwise.*            | ins_embed_head.decoder.res3.fuse_conv.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (128,) () (128,) (128,) (128,) (128,320,1,1)    |
| ins_embed_head.decoder.res3.project_conv.*                   | ins_embed_head.decoder.res3.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                   | (64,) () (64,) (64,) (64,) (64,728,1,1)         |
| ins_embed_head.decoder.res5.project_conv.convs.0.*           | ins_embed_head.decoder.res5.project_conv.convs.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}           | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| ins_embed_head.decoder.res5.project_conv.convs.1.depthwise.* | ins_embed_head.decoder.res5.project_conv.convs.1.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| ins_embed_head.decoder.res5.project_conv.convs.1.pointwise.* | ins_embed_head.decoder.res5.project_conv.convs.1.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| ins_embed_head.decoder.res5.project_conv.convs.2.depthwise.* | ins_embed_head.decoder.res5.project_conv.convs.2.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| ins_embed_head.decoder.res5.project_conv.convs.2.pointwise.* | ins_embed_head.decoder.res5.project_conv.convs.2.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| ins_embed_head.decoder.res5.project_conv.convs.3.depthwise.* | ins_embed_head.decoder.res5.project_conv.convs.3.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| ins_embed_head.decoder.res5.project_conv.convs.3.pointwise.* | ins_embed_head.decoder.res5.project_conv.convs.3.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| ins_embed_head.decoder.res5.project_conv.convs.4.1.*         | ins_embed_head.decoder.res5.project_conv.convs.4.1.{bias,weight}                                                                                      | (256,) (256,2048,1,1)                           |
| ins_embed_head.decoder.res5.project_conv.project.*           | ins_embed_head.decoder.res5.project_conv.project.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}           | (256,) () (256,) (256,) (256,) (256,1280,1,1)   |
| ins_embed_head.offset_head.depthwise.*                       | ins_embed_head.offset_head.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                       | (128,) () (128,) (128,) (128,) (128,1,5,5)      |
| ins_embed_head.offset_head.pointwise.*                       | ins_embed_head.offset_head.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                       | (32,) () (32,) (32,) (32,) (32,128,1,1)         |
| ins_embed_head.offset_predictor.*                            | ins_embed_head.offset_predictor.{bias,weight}                                                                                                         | (2,) (2,32,1,1)                                 |
| sem_seg_head.decoder.res2.fuse_conv.depthwise.*              | sem_seg_head.decoder.res2.fuse_conv.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}              | (288,) () (288,) (288,) (288,) (288,1,5,5)      |
| sem_seg_head.decoder.res2.fuse_conv.pointwise.*              | sem_seg_head.decoder.res2.fuse_conv.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}              | (256,) () (256,) (256,) (256,) (256,288,1,1)    |
| sem_seg_head.decoder.res2.project_conv.*                     | sem_seg_head.decoder.res2.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                     | (32,) () (32,) (32,) (32,) (32,256,1,1)         |
| sem_seg_head.decoder.res3.fuse_conv.depthwise.*              | sem_seg_head.decoder.res3.fuse_conv.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}              | (320,) () (320,) (320,) (320,) (320,1,5,5)      |
| sem_seg_head.decoder.res3.fuse_conv.pointwise.*              | sem_seg_head.decoder.res3.fuse_conv.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}              | (256,) () (256,) (256,) (256,) (256,320,1,1)    |
| sem_seg_head.decoder.res3.project_conv.*                     | sem_seg_head.decoder.res3.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                     | (64,) () (64,) (64,) (64,) (64,728,1,1)         |
| sem_seg_head.decoder.res5.project_conv.convs.0.*             | sem_seg_head.decoder.res5.project_conv.convs.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}             | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| sem_seg_head.decoder.res5.project_conv.convs.1.depthwise.*   | sem_seg_head.decoder.res5.project_conv.convs.1.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| sem_seg_head.decoder.res5.project_conv.convs.1.pointwise.*   | sem_seg_head.decoder.res5.project_conv.convs.1.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| sem_seg_head.decoder.res5.project_conv.convs.2.depthwise.*   | sem_seg_head.decoder.res5.project_conv.convs.2.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| sem_seg_head.decoder.res5.project_conv.convs.2.pointwise.*   | sem_seg_head.decoder.res5.project_conv.convs.2.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| sem_seg_head.decoder.res5.project_conv.convs.3.depthwise.*   | sem_seg_head.decoder.res5.project_conv.convs.3.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| sem_seg_head.decoder.res5.project_conv.convs.3.pointwise.*   | sem_seg_head.decoder.res5.project_conv.convs.3.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| sem_seg_head.decoder.res5.project_conv.convs.4.1.*           | sem_seg_head.decoder.res5.project_conv.convs.4.1.{bias,weight}                                                                                        | (256,) (256,2048,1,1)                           |
| sem_seg_head.decoder.res5.project_conv.project.*             | sem_seg_head.decoder.res5.project_conv.project.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}             | (256,) () (256,) (256,) (256,) (256,1280,1,1)   |
| sem_seg_head.head.depthwise.*                                | sem_seg_head.head.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                                | (256,) () (256,) (256,) (256,) (256,1,5,5)      |
| sem_seg_head.head.pointwise.*                                | sem_seg_head.head.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                                | (256,) () (256,) (256,) (256,) (256,256,1,1)    |
| sem_seg_head.predictor.*                                     | sem_seg_head.predictor.{bias,weight}                                                                                                                  | (19,) (19,256,1,1)                              |
[5m[31mWARNING[0m [32m[05/27 15:39:24 fvcore.common.checkpoint]: [0mThe checkpoint state_dict contains keys that are not used by the model:
  [35mpixel_mean[0m
  [35mpixel_std[0m
[32m[05/27 15:39:24 d2.data.datasets.cityscapes_panoptic]: [0m3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[32m[05/27 15:39:24 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2048, sample_style='choice')]
[32m[05/27 15:39:24 d2.data.common]: [0mSerializing 500 elements to byte tensors and concatenating them all ...
[32m[05/27 15:39:24 d2.data.common]: [0mSerialized dataset takes 0.74 MiB
[32m[05/27 15:39:24 d2.evaluation.evaluator]: [0mStart inference on 500 batches
[32m[05/27 15:39:24 d2.evaluation.cityscapes_evaluation]: [0mWriting cityscapes results to temporary directory /tmp/cityscapes_eval_k63r0up4 ...
[32m[05/27 15:39:24 d2.evaluation.cityscapes_evaluation]: [0mWriting cityscapes results to temporary directory /tmp/cityscapes_eval_6der8t1a ...
[32m[05/27 15:39:36 d2.evaluation.evaluator]: [0mInference done 11/500. Dataloading: 0.0044 s/iter. Inference: 0.4916 s/iter. Eval: 0.5619 s/iter. Total: 1.0580 s/iter. ETA=0:08:37
[32m[05/27 15:39:42 d2.evaluation.evaluator]: [0mInference done 16/500. Dataloading: 0.0051 s/iter. Inference: 0.5107 s/iter. Eval: 0.5225 s/iter. Total: 1.0383 s/iter. ETA=0:08:22
[32m[05/27 15:39:47 d2.evaluation.evaluator]: [0mInference done 22/500. Dataloading: 0.0050 s/iter. Inference: 0.5091 s/iter. Eval: 0.5021 s/iter. Total: 1.0162 s/iter. ETA=0:08:05
[32m[05/27 15:39:53 d2.evaluation.evaluator]: [0mInference done 28/500. Dataloading: 0.0049 s/iter. Inference: 0.4900 s/iter. Eval: 0.4978 s/iter. Total: 0.9928 s/iter. ETA=0:07:48
[32m[05/27 15:39:58 d2.evaluation.evaluator]: [0mInference done 33/500. Dataloading: 0.0049 s/iter. Inference: 0.4769 s/iter. Eval: 0.5203 s/iter. Total: 1.0021 s/iter. ETA=0:07:47
[32m[05/27 15:40:04 d2.evaluation.evaluator]: [0mInference done 39/500. Dataloading: 0.0048 s/iter. Inference: 0.4742 s/iter. Eval: 0.5121 s/iter. Total: 0.9912 s/iter. ETA=0:07:36
[32m[05/27 15:40:09 d2.evaluation.evaluator]: [0mInference done 44/500. Dataloading: 0.0049 s/iter. Inference: 0.4685 s/iter. Eval: 0.5301 s/iter. Total: 1.0037 s/iter. ETA=0:07:37
[32m[05/27 15:40:15 d2.evaluation.evaluator]: [0mInference done 49/500. Dataloading: 0.0049 s/iter. Inference: 0.4687 s/iter. Eval: 0.5398 s/iter. Total: 1.0135 s/iter. ETA=0:07:37
[32m[05/27 15:40:21 d2.evaluation.evaluator]: [0mInference done 54/500. Dataloading: 0.0049 s/iter. Inference: 0.4651 s/iter. Eval: 0.5619 s/iter. Total: 1.0320 s/iter. ETA=0:07:40
[32m[05/27 15:40:26 d2.evaluation.evaluator]: [0mInference done 59/500. Dataloading: 0.0049 s/iter. Inference: 0.4639 s/iter. Eval: 0.5712 s/iter. Total: 1.0400 s/iter. ETA=0:07:38
[32m[05/27 15:40:31 d2.evaluation.evaluator]: [0mInference done 63/500. Dataloading: 0.0049 s/iter. Inference: 0.4667 s/iter. Eval: 0.5873 s/iter. Total: 1.0589 s/iter. ETA=0:07:42
[32m[05/27 15:40:37 d2.evaluation.evaluator]: [0mInference done 68/500. Dataloading: 0.0048 s/iter. Inference: 0.4703 s/iter. Eval: 0.5821 s/iter. Total: 1.0573 s/iter. ETA=0:07:36
[32m[05/27 15:40:42 d2.evaluation.evaluator]: [0mInference done 73/500. Dataloading: 0.0048 s/iter. Inference: 0.4716 s/iter. Eval: 0.5868 s/iter. Total: 1.0633 s/iter. ETA=0:07:34
[32m[05/27 15:40:48 d2.evaluation.evaluator]: [0mInference done 77/500. Dataloading: 0.0048 s/iter. Inference: 0.4737 s/iter. Eval: 0.5982 s/iter. Total: 1.0767 s/iter. ETA=0:07:35
[32m[05/27 15:40:53 d2.evaluation.evaluator]: [0mInference done 81/500. Dataloading: 0.0048 s/iter. Inference: 0.4740 s/iter. Eval: 0.6094 s/iter. Total: 1.0883 s/iter. ETA=0:07:35
[32m[05/27 15:40:59 d2.evaluation.evaluator]: [0mInference done 86/500. Dataloading: 0.0048 s/iter. Inference: 0.4722 s/iter. Eval: 0.6184 s/iter. Total: 1.0954 s/iter. ETA=0:07:33
[32m[05/27 15:41:04 d2.evaluation.evaluator]: [0mInference done 91/500. Dataloading: 0.0047 s/iter. Inference: 0.4704 s/iter. Eval: 0.6214 s/iter. Total: 1.0966 s/iter. ETA=0:07:28
[32m[05/27 15:41:10 d2.evaluation.evaluator]: [0mInference done 97/500. Dataloading: 0.0047 s/iter. Inference: 0.4702 s/iter. Eval: 0.6116 s/iter. Total: 1.0866 s/iter. ETA=0:07:17
[32m[05/27 15:41:15 d2.evaluation.evaluator]: [0mInference done 102/500. Dataloading: 0.0046 s/iter. Inference: 0.4685 s/iter. Eval: 0.6107 s/iter. Total: 1.0839 s/iter. ETA=0:07:11
[32m[05/27 15:41:21 d2.evaluation.evaluator]: [0mInference done 109/500. Dataloading: 0.0046 s/iter. Inference: 0.4654 s/iter. Eval: 0.5971 s/iter. Total: 1.0671 s/iter. ETA=0:06:57
[32m[05/27 15:41:27 d2.evaluation.evaluator]: [0mInference done 115/500. Dataloading: 0.0046 s/iter. Inference: 0.4625 s/iter. Eval: 0.5932 s/iter. Total: 1.0604 s/iter. ETA=0:06:48
[32m[05/27 15:41:33 d2.evaluation.evaluator]: [0mInference done 121/500. Dataloading: 0.0046 s/iter. Inference: 0.4635 s/iter. Eval: 0.5900 s/iter. Total: 1.0582 s/iter. ETA=0:06:41
[32m[05/27 15:41:38 d2.evaluation.evaluator]: [0mInference done 126/500. Dataloading: 0.0047 s/iter. Inference: 0.4644 s/iter. Eval: 0.5890 s/iter. Total: 1.0582 s/iter. ETA=0:06:35
[32m[05/27 15:41:44 d2.evaluation.evaluator]: [0mInference done 131/500. Dataloading: 0.0047 s/iter. Inference: 0.4644 s/iter. Eval: 0.5910 s/iter. Total: 1.0602 s/iter. ETA=0:06:31
[32m[05/27 15:41:50 d2.evaluation.evaluator]: [0mInference done 136/500. Dataloading: 0.0047 s/iter. Inference: 0.4656 s/iter. Eval: 0.5973 s/iter. Total: 1.0676 s/iter. ETA=0:06:28
[32m[05/27 15:41:55 d2.evaluation.evaluator]: [0mInference done 141/500. Dataloading: 0.0047 s/iter. Inference: 0.4650 s/iter. Eval: 0.5965 s/iter. Total: 1.0663 s/iter. ETA=0:06:22
[32m[05/27 15:42:01 d2.evaluation.evaluator]: [0mInference done 146/500. Dataloading: 0.0047 s/iter. Inference: 0.4653 s/iter. Eval: 0.5994 s/iter. Total: 1.0694 s/iter. ETA=0:06:18
[32m[05/27 15:42:07 d2.evaluation.evaluator]: [0mInference done 153/500. Dataloading: 0.0047 s/iter. Inference: 0.4631 s/iter. Eval: 0.5899 s/iter. Total: 1.0577 s/iter. ETA=0:06:07
[32m[05/27 15:42:12 d2.evaluation.evaluator]: [0mInference done 159/500. Dataloading: 0.0047 s/iter. Inference: 0.4620 s/iter. Eval: 0.5839 s/iter. Total: 1.0506 s/iter. ETA=0:05:58
[32m[05/27 15:42:17 d2.evaluation.evaluator]: [0mInference done 164/500. Dataloading: 0.0047 s/iter. Inference: 0.4612 s/iter. Eval: 0.5838 s/iter. Total: 1.0497 s/iter. ETA=0:05:52
[32m[05/27 15:42:22 d2.evaluation.evaluator]: [0mInference done 169/500. Dataloading: 0.0047 s/iter. Inference: 0.4607 s/iter. Eval: 0.5855 s/iter. Total: 1.0509 s/iter. ETA=0:05:47
[32m[05/27 15:42:28 d2.evaluation.evaluator]: [0mInference done 174/500. Dataloading: 0.0047 s/iter. Inference: 0.4612 s/iter. Eval: 0.5854 s/iter. Total: 1.0514 s/iter. ETA=0:05:42
[32m[05/27 15:42:33 d2.evaluation.evaluator]: [0mInference done 179/500. Dataloading: 0.0047 s/iter. Inference: 0.4608 s/iter. Eval: 0.5858 s/iter. Total: 1.0513 s/iter. ETA=0:05:37
[32m[05/27 15:42:39 d2.evaluation.evaluator]: [0mInference done 184/500. Dataloading: 0.0047 s/iter. Inference: 0.4604 s/iter. Eval: 0.5908 s/iter. Total: 1.0559 s/iter. ETA=0:05:33
[32m[05/27 15:42:45 d2.evaluation.evaluator]: [0mInference done 189/500. Dataloading: 0.0047 s/iter. Inference: 0.4604 s/iter. Eval: 0.5946 s/iter. Total: 1.0598 s/iter. ETA=0:05:29
[32m[05/27 15:42:51 d2.evaluation.evaluator]: [0mInference done 193/500. Dataloading: 0.0047 s/iter. Inference: 0.4606 s/iter. Eval: 0.6016 s/iter. Total: 1.0669 s/iter. ETA=0:05:27
[32m[05/27 15:42:56 d2.evaluation.evaluator]: [0mInference done 197/500. Dataloading: 0.0047 s/iter. Inference: 0.4614 s/iter. Eval: 0.6079 s/iter. Total: 1.0741 s/iter. ETA=0:05:25
[32m[05/27 15:43:02 d2.evaluation.evaluator]: [0mInference done 201/500. Dataloading: 0.0047 s/iter. Inference: 0.4621 s/iter. Eval: 0.6124 s/iter. Total: 1.0792 s/iter. ETA=0:05:22
[32m[05/27 15:43:07 d2.evaluation.evaluator]: [0mInference done 206/500. Dataloading: 0.0047 s/iter. Inference: 0.4613 s/iter. Eval: 0.6113 s/iter. Total: 1.0774 s/iter. ETA=0:05:16
[32m[05/27 15:43:12 d2.evaluation.evaluator]: [0mInference done 211/500. Dataloading: 0.0046 s/iter. Inference: 0.4618 s/iter. Eval: 0.6115 s/iter. Total: 1.0781 s/iter. ETA=0:05:11
[32m[05/27 15:43:18 d2.evaluation.evaluator]: [0mInference done 217/500. Dataloading: 0.0046 s/iter. Inference: 0.4615 s/iter. Eval: 0.6085 s/iter. Total: 1.0747 s/iter. ETA=0:05:04
[32m[05/27 15:43:23 d2.evaluation.evaluator]: [0mInference done 222/500. Dataloading: 0.0046 s/iter. Inference: 0.4616 s/iter. Eval: 0.6093 s/iter. Total: 1.0756 s/iter. ETA=0:04:59
[32m[05/27 15:43:29 d2.evaluation.evaluator]: [0mInference done 227/500. Dataloading: 0.0046 s/iter. Inference: 0.4610 s/iter. Eval: 0.6103 s/iter. Total: 1.0760 s/iter. ETA=0:04:53
[32m[05/27 15:43:35 d2.evaluation.evaluator]: [0mInference done 233/500. Dataloading: 0.0046 s/iter. Inference: 0.4603 s/iter. Eval: 0.6089 s/iter. Total: 1.0740 s/iter. ETA=0:04:46
[32m[05/27 15:43:41 d2.evaluation.evaluator]: [0mInference done 238/500. Dataloading: 0.0047 s/iter. Inference: 0.4602 s/iter. Eval: 0.6101 s/iter. Total: 1.0750 s/iter. ETA=0:04:41
[32m[05/27 15:43:46 d2.evaluation.evaluator]: [0mInference done 243/500. Dataloading: 0.0047 s/iter. Inference: 0.4606 s/iter. Eval: 0.6114 s/iter. Total: 1.0767 s/iter. ETA=0:04:36
[32m[05/27 15:43:52 d2.evaluation.evaluator]: [0mInference done 249/500. Dataloading: 0.0046 s/iter. Inference: 0.4608 s/iter. Eval: 0.6091 s/iter. Total: 1.0747 s/iter. ETA=0:04:29
[32m[05/27 15:43:58 d2.evaluation.evaluator]: [0mInference done 254/500. Dataloading: 0.0046 s/iter. Inference: 0.4610 s/iter. Eval: 0.6107 s/iter. Total: 1.0764 s/iter. ETA=0:04:24
[32m[05/27 15:44:03 d2.evaluation.evaluator]: [0mInference done 259/500. Dataloading: 0.0046 s/iter. Inference: 0.4606 s/iter. Eval: 0.6098 s/iter. Total: 1.0752 s/iter. ETA=0:04:19
[32m[05/27 15:44:08 d2.evaluation.evaluator]: [0mInference done 264/500. Dataloading: 0.0046 s/iter. Inference: 0.4608 s/iter. Eval: 0.6082 s/iter. Total: 1.0737 s/iter. ETA=0:04:13
[32m[05/27 15:44:14 d2.evaluation.evaluator]: [0mInference done 270/500. Dataloading: 0.0046 s/iter. Inference: 0.4601 s/iter. Eval: 0.6052 s/iter. Total: 1.0700 s/iter. ETA=0:04:06
[32m[05/27 15:44:19 d2.evaluation.evaluator]: [0mInference done 276/500. Dataloading: 0.0046 s/iter. Inference: 0.4605 s/iter. Eval: 0.6014 s/iter. Total: 1.0666 s/iter. ETA=0:03:58
[32m[05/27 15:44:24 d2.evaluation.evaluator]: [0mInference done 282/500. Dataloading: 0.0046 s/iter. Inference: 0.4604 s/iter. Eval: 0.5967 s/iter. Total: 1.0617 s/iter. ETA=0:03:51
[32m[05/27 15:44:30 d2.evaluation.evaluator]: [0mInference done 289/500. Dataloading: 0.0047 s/iter. Inference: 0.4608 s/iter. Eval: 0.5890 s/iter. Total: 1.0546 s/iter. ETA=0:03:42
[32m[05/27 15:44:35 d2.evaluation.evaluator]: [0mInference done 295/500. Dataloading: 0.0047 s/iter. Inference: 0.4609 s/iter. Eval: 0.5851 s/iter. Total: 1.0508 s/iter. ETA=0:03:35
[32m[05/27 15:44:40 d2.evaluation.evaluator]: [0mInference done 302/500. Dataloading: 0.0047 s/iter. Inference: 0.4601 s/iter. Eval: 0.5790 s/iter. Total: 1.0438 s/iter. ETA=0:03:26
[32m[05/27 15:44:46 d2.evaluation.evaluator]: [0mInference done 309/500. Dataloading: 0.0047 s/iter. Inference: 0.4596 s/iter. Eval: 0.5741 s/iter. Total: 1.0385 s/iter. ETA=0:03:18
[32m[05/27 15:44:51 d2.evaluation.evaluator]: [0mInference done 317/500. Dataloading: 0.0047 s/iter. Inference: 0.4578 s/iter. Eval: 0.5671 s/iter. Total: 1.0297 s/iter. ETA=0:03:08
[32m[05/27 15:44:57 d2.evaluation.evaluator]: [0mInference done 324/500. Dataloading: 0.0047 s/iter. Inference: 0.4568 s/iter. Eval: 0.5624 s/iter. Total: 1.0240 s/iter. ETA=0:03:00
[32m[05/27 15:45:03 d2.evaluation.evaluator]: [0mInference done 330/500. Dataloading: 0.0047 s/iter. Inference: 0.4570 s/iter. Eval: 0.5620 s/iter. Total: 1.0238 s/iter. ETA=0:02:54
[32m[05/27 15:45:09 d2.evaluation.evaluator]: [0mInference done 336/500. Dataloading: 0.0047 s/iter. Inference: 0.4574 s/iter. Eval: 0.5606 s/iter. Total: 1.0228 s/iter. ETA=0:02:47
[32m[05/27 15:45:14 d2.evaluation.evaluator]: [0mInference done 340/500. Dataloading: 0.0047 s/iter. Inference: 0.4578 s/iter. Eval: 0.5639 s/iter. Total: 1.0265 s/iter. ETA=0:02:44
[32m[05/27 15:45:20 d2.evaluation.evaluator]: [0mInference done 345/500. Dataloading: 0.0047 s/iter. Inference: 0.4586 s/iter. Eval: 0.5655 s/iter. Total: 1.0290 s/iter. ETA=0:02:39
[32m[05/27 15:45:25 d2.evaluation.evaluator]: [0mInference done 350/500. Dataloading: 0.0047 s/iter. Inference: 0.4588 s/iter. Eval: 0.5663 s/iter. Total: 1.0299 s/iter. ETA=0:02:34
[32m[05/27 15:45:31 d2.evaluation.evaluator]: [0mInference done 355/500. Dataloading: 0.0047 s/iter. Inference: 0.4585 s/iter. Eval: 0.5671 s/iter. Total: 1.0305 s/iter. ETA=0:02:29
[32m[05/27 15:45:36 d2.evaluation.evaluator]: [0mInference done 360/500. Dataloading: 0.0047 s/iter. Inference: 0.4588 s/iter. Eval: 0.5677 s/iter. Total: 1.0313 s/iter. ETA=0:02:24
[32m[05/27 15:45:41 d2.evaluation.evaluator]: [0mInference done 365/500. Dataloading: 0.0047 s/iter. Inference: 0.4587 s/iter. Eval: 0.5674 s/iter. Total: 1.0309 s/iter. ETA=0:02:19
[32m[05/27 15:45:46 d2.evaluation.evaluator]: [0mInference done 369/500. Dataloading: 0.0047 s/iter. Inference: 0.4593 s/iter. Eval: 0.5700 s/iter. Total: 1.0341 s/iter. ETA=0:02:15
[32m[05/27 15:45:52 d2.evaluation.evaluator]: [0mInference done 374/500. Dataloading: 0.0047 s/iter. Inference: 0.4598 s/iter. Eval: 0.5711 s/iter. Total: 1.0357 s/iter. ETA=0:02:10
[32m[05/27 15:45:59 d2.evaluation.evaluator]: [0mInference done 379/500. Dataloading: 0.0047 s/iter. Inference: 0.4596 s/iter. Eval: 0.5748 s/iter. Total: 1.0392 s/iter. ETA=0:02:05
[32m[05/27 15:46:05 d2.evaluation.evaluator]: [0mInference done 384/500. Dataloading: 0.0047 s/iter. Inference: 0.4595 s/iter. Eval: 0.5767 s/iter. Total: 1.0409 s/iter. ETA=0:02:00
[32m[05/27 15:46:10 d2.evaluation.evaluator]: [0mInference done 389/500. Dataloading: 0.0047 s/iter. Inference: 0.4592 s/iter. Eval: 0.5786 s/iter. Total: 1.0426 s/iter. ETA=0:01:55
[32m[05/27 15:46:16 d2.evaluation.evaluator]: [0mInference done 394/500. Dataloading: 0.0047 s/iter. Inference: 0.4593 s/iter. Eval: 0.5789 s/iter. Total: 1.0430 s/iter. ETA=0:01:50
[32m[05/27 15:46:21 d2.evaluation.evaluator]: [0mInference done 398/500. Dataloading: 0.0047 s/iter. Inference: 0.4595 s/iter. Eval: 0.5812 s/iter. Total: 1.0455 s/iter. ETA=0:01:46
[32m[05/27 15:46:26 d2.evaluation.evaluator]: [0mInference done 403/500. Dataloading: 0.0047 s/iter. Inference: 0.4593 s/iter. Eval: 0.5817 s/iter. Total: 1.0458 s/iter. ETA=0:01:41
[32m[05/27 15:46:31 d2.evaluation.evaluator]: [0mInference done 408/500. Dataloading: 0.0047 s/iter. Inference: 0.4591 s/iter. Eval: 0.5817 s/iter. Total: 1.0456 s/iter. ETA=0:01:36
[32m[05/27 15:46:37 d2.evaluation.evaluator]: [0mInference done 413/500. Dataloading: 0.0047 s/iter. Inference: 0.4590 s/iter. Eval: 0.5820 s/iter. Total: 1.0459 s/iter. ETA=0:01:30
[32m[05/27 15:46:42 d2.evaluation.evaluator]: [0mInference done 418/500. Dataloading: 0.0047 s/iter. Inference: 0.4591 s/iter. Eval: 0.5828 s/iter. Total: 1.0467 s/iter. ETA=0:01:25
[32m[05/27 15:46:48 d2.evaluation.evaluator]: [0mInference done 423/500. Dataloading: 0.0047 s/iter. Inference: 0.4595 s/iter. Eval: 0.5835 s/iter. Total: 1.0478 s/iter. ETA=0:01:20
[32m[05/27 15:46:53 d2.evaluation.evaluator]: [0mInference done 428/500. Dataloading: 0.0047 s/iter. Inference: 0.4601 s/iter. Eval: 0.5827 s/iter. Total: 1.0476 s/iter. ETA=0:01:15
[32m[05/27 15:46:59 d2.evaluation.evaluator]: [0mInference done 433/500. Dataloading: 0.0047 s/iter. Inference: 0.4602 s/iter. Eval: 0.5829 s/iter. Total: 1.0480 s/iter. ETA=0:01:10
[32m[05/27 15:47:05 d2.evaluation.evaluator]: [0mInference done 439/500. Dataloading: 0.0047 s/iter. Inference: 0.4599 s/iter. Eval: 0.5823 s/iter. Total: 1.0471 s/iter. ETA=0:01:03
[32m[05/27 15:47:10 d2.evaluation.evaluator]: [0mInference done 445/500. Dataloading: 0.0047 s/iter. Inference: 0.4594 s/iter. Eval: 0.5800 s/iter. Total: 1.0442 s/iter. ETA=0:00:57
[32m[05/27 15:47:15 d2.evaluation.evaluator]: [0mInference done 451/500. Dataloading: 0.0047 s/iter. Inference: 0.4591 s/iter. Eval: 0.5784 s/iter. Total: 1.0423 s/iter. ETA=0:00:51
[32m[05/27 15:47:20 d2.evaluation.evaluator]: [0mInference done 456/500. Dataloading: 0.0047 s/iter. Inference: 0.4593 s/iter. Eval: 0.5782 s/iter. Total: 1.0423 s/iter. ETA=0:00:45
[32m[05/27 15:47:26 d2.evaluation.evaluator]: [0mInference done 462/500. Dataloading: 0.0047 s/iter. Inference: 0.4591 s/iter. Eval: 0.5765 s/iter. Total: 1.0404 s/iter. ETA=0:00:39
[32m[05/27 15:47:32 d2.evaluation.evaluator]: [0mInference done 467/500. Dataloading: 0.0047 s/iter. Inference: 0.4598 s/iter. Eval: 0.5776 s/iter. Total: 1.0422 s/iter. ETA=0:00:34
[32m[05/27 15:47:37 d2.evaluation.evaluator]: [0mInference done 471/500. Dataloading: 0.0047 s/iter. Inference: 0.4604 s/iter. Eval: 0.5802 s/iter. Total: 1.0454 s/iter. ETA=0:00:30
[32m[05/27 15:47:43 d2.evaluation.evaluator]: [0mInference done 475/500. Dataloading: 0.0047 s/iter. Inference: 0.4607 s/iter. Eval: 0.5828 s/iter. Total: 1.0483 s/iter. ETA=0:00:26
[32m[05/27 15:47:48 d2.evaluation.evaluator]: [0mInference done 480/500. Dataloading: 0.0047 s/iter. Inference: 0.4604 s/iter. Eval: 0.5836 s/iter. Total: 1.0488 s/iter. ETA=0:00:20
[32m[05/27 15:47:53 d2.evaluation.evaluator]: [0mInference done 485/500. Dataloading: 0.0047 s/iter. Inference: 0.4602 s/iter. Eval: 0.5836 s/iter. Total: 1.0486 s/iter. ETA=0:00:15
[32m[05/27 15:47:59 d2.evaluation.evaluator]: [0mInference done 492/500. Dataloading: 0.0047 s/iter. Inference: 0.4590 s/iter. Eval: 0.5815 s/iter. Total: 1.0454 s/iter. ETA=0:00:08
[32m[05/27 15:48:04 d2.evaluation.evaluator]: [0mInference done 497/500. Dataloading: 0.0047 s/iter. Inference: 0.4588 s/iter. Eval: 0.5813 s/iter. Total: 1.0449 s/iter. ETA=0:00:03
[32m[05/27 15:48:07 d2.evaluation.evaluator]: [0mTotal inference time: 0:08:36.847650 (1.044137 s / iter per device, on 1 devices)
[32m[05/27 15:48:07 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:03:47 (0.458651 s / iter per device, on 1 devices)
[32m[05/27 15:48:07 d2.evaluation.panoptic_evaluation]: [0mWriting all panoptic predictions to /tmp/panoptic_evalz3gxtz5j ...
[32m[05/27 15:49:14 d2.evaluation.panoptic_evaluation]: [0mPanoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 61.119 | 81.126 | 74.162 |      19       |
| Things | 51.410 | 79.421 | 64.487 |       8       |
| Stuff  | 68.180 | 82.366 | 81.198 |      11       |
[32m[05/27 15:49:14 d2.evaluation.cityscapes_evaluation]: [0mEvaluating results under /tmp/cityscapes_eval_k63r0up4 ...
Evaluating 500 pairs of images...
Images Processed: 1 Images Processed: 2 Images Processed: 3 Images Processed: 4 Images Processed: 5 Images Processed: 6 Images Processed: 7 Images Processed: 8 Images Processed: 9 Images Processed: 10 Images Processed: 11 Images Processed: 12 Images Processed: 13 Images Processed: 14 Images Processed: 15 Images Processed: 16 Images Processed: 17 Images Processed: 18 Images Processed: 19 Images Processed: 20 Images Processed: 21 Images Processed: 22 Images Processed: 23 Images Processed: 24 Images Processed: 25 Images Processed: 26 Images Processed: 27 Images Processed: 28 Images Processed: 29 Images Processed: 30 Images Processed: 31 Images Processed: 32 Images Processed: 33 Images Processed: 34 Images Processed: 35 Images Processed: 36 Images Processed: 37 Images Processed: 38 Images Processed: 39 Images Processed: 40 Images Processed: 41 Images Processed: 42 Images Processed: 43 Images Processed: 44 Images Processed: 45 Images Processed: 46 Images Processed: 47 Images Processed: 48 Images Processed: 49 Images Processed: 50 Images Processed: 51 Images Processed: 52 Images Processed: 53 Images Processed: 54 Images Processed: 55 Images Processed: 56 Images Processed: 57 Images Processed: 58 Images Processed: 59 Images Processed: 60 Images Processed: 61 Images Processed: 62 Images Processed: 63 Images Processed: 64 Images Processed: 65 Images Processed: 66 Images Processed: 67 Images Processed: 68 Images Processed: 69 Images Processed: 70 Images Processed: 71 Images Processed: 72 Images Processed: 73 Images Processed: 74 Images Processed: 75 Images Processed: 76 Images Processed: 77 Images Processed: 78 Images Processed: 79 Images Processed: 80 Images Processed: 81 Images Processed: 82 Images Processed: 83 Images Processed: 84 Images Processed: 85 Images Processed: 86 Images Processed: 87 Images Processed: 88 Images Processed: 89 Images Processed: 90 Images Processed: 91 Images Processed: 92 Images Processed: 93 Images Processed: 94 Images Processed: 95 Images Processed: 96 Images Processed: 97 Images Processed: 98 Images Processed: 99 Images Processed: 100 Images Processed: 101 Images Processed: 102 Images Processed: 103 Images Processed: 104 Images Processed: 105 Images Processed: 106 Images Processed: 107 Images Processed: 108 Images Processed: 109 Images Processed: 110 Images Processed: 111 Images Processed: 112 Images Processed: 113 Images Processed: 114 Images Processed: 115 Images Processed: 116 Images Processed: 117 Images Processed: 118 Images Processed: 119 Images Processed: 120 Images Processed: 121 Images Processed: 122 Images Processed: 123 Images Processed: 124 Images Processed: 125 Images Processed: 126 Images Processed: 127 Images Processed: 128 Images Processed: 129 Images Processed: 130 Images Processed: 131 Images Processed: 132 Images Processed: 133 Images Processed: 134 Images Processed: 135 Images Processed: 136 Images Processed: 137 Images Processed: 138 Images Processed: 139 Images Processed: 140 Images Processed: 141 Images Processed: 142 Images Processed: 143 Images Processed: 144 Images Processed: 145 Images Processed: 146 Images Processed: 147 Images Processed: 148 Images Processed: 149 Images Processed: 150 Images Processed: 151 Images Processed: 152 Images Processed: 153 Images Processed: 154 Images Processed: 155 Images Processed: 156 Images Processed: 157 Images Processed: 158 Images Processed: 159 Images Processed: 160 Images Processed: 161 Images Processed: 162 Images Processed: 163 Images Processed: 164 Images Processed: 165 Images Processed: 166 Images Processed: 167 Images Processed: 168 Images Processed: 169 Images Processed: 170 Images Processed: 171 Images Processed: 172 Images Processed: 173 Images Processed: 174 Images Processed: 175 Images Processed: 176 Images Processed: 177 Images Processed: 178 Images Processed: 179 Images Processed: 180 Images Processed: 181 Images Processed: 182 Images Processed: 183 Images Processed: 184 Images Processed: 185 Images Processed: 186 Images Processed: 187 Images Processed: 188 Images Processed: 189 Images Processed: 190 Images Processed: 191 Images Processed: 192 Images Processed: 193 Images Processed: 194 Images Processed: 195 Images Processed: 196 Images Processed: 197 Images Processed: 198 Images Processed: 199 Images Processed: 200 Images Processed: 201 Images Processed: 202 Images Processed: 203 Images Processed: 204 Images Processed: 205 Images Processed: 206 Images Processed: 207 Images Processed: 208 Images Processed: 209 Images Processed: 210 Images Processed: 211 Images Processed: 212 Images Processed: 213 Images Processed: 214 Images Processed: 215 Images Processed: 216 Images Processed: 217 Images Processed: 218 Images Processed: 219 Images Processed: 220 Images Processed: 221 Images Processed: 222 Images Processed: 223 Images Processed: 224 Images Processed: 225 Images Processed: 226 Images Processed: 227 Images Processed: 228 Images Processed: 229 Images Processed: 230 Images Processed: 231 Images Processed: 232 Images Processed: 233 Images Processed: 234 Images Processed: 235 Images Processed: 236 Images Processed: 237 Images Processed: 238 Images Processed: 239 Images Processed: 240 Images Processed: 241 Images Processed: 242 Images Processed: 243 Images Processed: 244 Images Processed: 245 Images Processed: 246 Images Processed: 247 Images Processed: 248 Images Processed: 249 Images Processed: 250 Images Processed: 251 Images Processed: 252 Images Processed: 253 Images Processed: 254 Images Processed: 255 Images Processed: 256 Images Processed: 257 Images Processed: 258 Images Processed: 259 Images Processed: 260 Images Processed: 261 Images Processed: 262 Images Processed: 263 Images Processed: 264 Images Processed: 265 Images Processed: 266 Images Processed: 267 Images Processed: 268 Images Processed: 269 Images Processed: 270 Images Processed: 271 Images Processed: 272 Images Processed: 273 Images Processed: 274 Images Processed: 275 Images Processed: 276 Images Processed: 277 Images Processed: 278 Images Processed: 279 Images Processed: 280 Images Processed: 281 Images Processed: 282 Images Processed: 283 Images Processed: 284 Images Processed: 285 Images Processed: 286 Images Processed: 287 Images Processed: 288 Images Processed: 289 Images Processed: 290 Images Processed: 291 Images Processed: 292 Images Processed: 293 Images Processed: 294 Images Processed: 295 Images Processed: 296 Images Processed: 297 Images Processed: 298 Images Processed: 299 Images Processed: 300 Images Processed: 301 Images Processed: 302 Images Processed: 303 Images Processed: 304 Images Processed: 305 Images Processed: 306 Images Processed: 307 Images Processed: 308 Images Processed: 309 Images Processed: 310 Images Processed: 311 Images Processed: 312 Images Processed: 313 Images Processed: 314 Images Processed: 315 Images Processed: 316 Images Processed: 317 Images Processed: 318 Images Processed: 319 Images Processed: 320 Images Processed: 321 Images Processed: 322 Images Processed: 323 Images Processed: 324 Images Processed: 325 Images Processed: 326 Images Processed: 327 Images Processed: 328 Images Processed: 329 Images Processed: 330 Images Processed: 331 Images Processed: 332 Images Processed: 333 Images Processed: 334 Images Processed: 335 Images Processed: 336 Images Processed: 337 Images Processed: 338 Images Processed: 339 Images Processed: 340 Images Processed: 341 Images Processed: 342 Images Processed: 343 Images Processed: 344 Images Processed: 345 Images Processed: 346 Images Processed: 347 Images Processed: 348 Images Processed: 349 Images Processed: 350 Images Processed: 351 Images Processed: 352 Images Processed: 353 Images Processed: 354 Images Processed: 355 Images Processed: 356 Images Processed: 357 Images Processed: 358 Images Processed: 359 Images Processed: 360 Images Processed: 361 Images Processed: 362 Images Processed: 363 Images Processed: 364 Images Processed: 365 Images Processed: 366 Images Processed: 367 Images Processed: 368 Images Processed: 369 Images Processed: 370 Images Processed: 371 Images Processed: 372 Images Processed: 373 Images Processed: 374 Images Processed: 375 Images Processed: 376 Images Processed: 377 Images Processed: 378 Images Processed: 379 Images Processed: 380 Images Processed: 381 Images Processed: 382 Images Processed: 383 Images Processed: 384 Images Processed: 385 Images Processed: 386 Images Processed: 387 Images Processed: 388 Images Processed: 389 Images Processed: 390 Images Processed: 391 Images Processed: 392 Images Processed: 393 Images Processed: 394 Images Processed: 395 Images Processed: 396 Images Processed: 397 Images Processed: 398 Images Processed: 399 Images Processed: 400 Images Processed: 401 Images Processed: 402 Images Processed: 403 Images Processed: 404 Images Processed: 405 Images Processed: 406 Images Processed: 407 Images Processed: 408 Images Processed: 409 Images Processed: 410 Images Processed: 411 Images Processed: 412 Images Processed: 413 Images Processed: 414 Images Processed: 415 Images Processed: 416 Images Processed: 417 Images Processed: 418 Images Processed: 419 Images Processed: 420 Images Processed: 421 Images Processed: 422 Images Processed: 423 Images Processed: 424 Images Processed: 425 Images Processed: 426 Images Processed: 427 Images Processed: 428 Images Processed: 429 Images Processed: 430 Images Processed: 431 Images Processed: 432 Images Processed: 433 Images Processed: 434 Images Processed: 435 Images Processed: 436 Images Processed: 437 Images Processed: 438 Images Processed: 439 Images Processed: 440 Images Processed: 441 Images Processed: 442 Images Processed: 443 Images Processed: 444 Images Processed: 445 Images Processed: 446 Images Processed: 447 Images Processed: 448 Images Processed: 449 Images Processed: 450 Images Processed: 451 Images Processed: 452 Images Processed: 453 Images Processed: 454 Images Processed: 455 Images Processed: 456 Images Processed: 457 Images Processed: 458 Images Processed: 459 Images Processed: 460 Images Processed: 461 Images Processed: 462 Images Processed: 463 Images Processed: 464 Images Processed: 465 Images Processed: 466 Images Processed: 467 Images Processed: 468 Images Processed: 469 Images Processed: 470 Images Processed: 471 Images Processed: 472 Images Processed: 473 Images Processed: 474 Images Processed: 475 Images Processed: 476 Images Processed: 477 Images Processed: 478 Images Processed: 479 Images Processed: 480 Images Processed: 481 Images Processed: 482 Images Processed: 483 Images Processed: 484 Images Processed: 485 Images Processed: 486 Images Processed: 487 Images Processed: 488 Images Processed: 489 Images Processed: 490 Images Processed: 491 Images Processed: 492 Images Processed: 493 Images Processed: 494 Images Processed: 495 Images Processed: 496 Images Processed: 497 Images Processed: 498 Images Processed: 499 Images Processed: 500 

--------------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------- 
              |   u   |   e   |   r   |   o   |   s   |   d   |   g   |   r   |   s   |   p   |   r   |   b   |   w   |   f   |   g   |   b   |   t   |   p   |   p   |   t   |   t   |   v   |   t   |   s   |   p   |   r   |   c   |   t   |   b   |   c   |   t   |   t   |   m   |   b   |  Prior |
--------------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------- 
    unlabeled |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.09    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.02    0.00    0.88    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0004 
  ego vehicle |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.95    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.01    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0490 
rectification |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.58    0.01    0.00    0.00    0.16    0.00    0.07    0.00    0.00    0.00    0.01    0.00    0.00    0.01    0.10    0.00    0.03    0.00    0.00    0.01    0.00    0.02    0.00    0.00    0.00    0.00    0.00   0.0189 
   out of roi |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.35    0.04    0.00    0.00    0.26    0.00    0.03    0.00    0.00    0.00    0.01    0.00    0.00    0.01    0.16    0.01    0.07    0.00    0.00    0.04    0.00    0.01    0.00    0.00    0.00    0.00    0.00   0.0151 
       static |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.04    0.00    0.00    0.51    0.04    0.04    0.00    0.00    0.00    0.09    0.00    0.01    0.05    0.12    0.01    0.01    0.02    0.00    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.02   0.0149 
      dynamic |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.03    0.07    0.00    0.00    0.52    0.01    0.04    0.00    0.00    0.00    0.03    0.00    0.00    0.01    0.05    0.00    0.01    0.12    0.01    0.03    0.02    0.00    0.00    0.00    0.00    0.01    0.05   0.0042 
       ground |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.59    0.35    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0178 
         road |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.99    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.3293 
     sidewalk |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.04    0.93    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0473 
      parking |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.59    0.33    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.06    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0040 
   rail track |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.73    0.21    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.04    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0006 
     building |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.97    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.1917 
         wall |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.04    0.00    0.00    0.26    0.55    0.06    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.06    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0064 
        fence |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.01    0.00    0.00    0.18    0.02    0.69    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.04    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01   0.0072 
   guard rail |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.03    0.00    0.00    0.00    0.14    0.29    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.03    0.48    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0000 
       bridge |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.38    0.00    0.05    0.00    0.00    0.00    0.10    0.00    0.01    0.01    0.37    0.00    0.07    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0003 
         pole |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.10    0.00    0.01    0.00    0.00    0.00    0.79    0.00    0.00    0.00    0.05    0.00    0.00    0.01    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.01   0.0129 
    polegroup |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.09    0.00    0.00    0.09    0.06    0.08    0.00    0.00    0.00    0.49    0.00    0.00    0.01    0.05    0.02    0.00    0.05    0.00    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.02   0.0001 
traffic light |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.06    0.00    0.00    0.00    0.00    0.00    0.03    0.00    0.83    0.00    0.06    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0017 
 traffic sign |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.05    0.00    0.01    0.00    0.00    0.00    0.02    0.00    0.00    0.88    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0058 
   vegetation |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.97    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.1515 
      terrain |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.02    0.11    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.12    0.73    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0073 
          sky |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.98    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0293 
       person |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.94    0.01    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.01   0.0114 
        rider |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.11    0.80    0.01    0.00    0.00    0.00    0.00    0.00    0.01    0.05   0.0019 
          car |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.98    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0570 
        truck |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.05    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.12    0.78    0.02    0.00    0.00    0.00    0.00    0.00   0.0026 
          bus |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.01    0.01    0.93    0.00    0.00    0.00    0.00    0.00   0.0034 
      caravan |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.02    0.00    0.00    0.01    0.00    0.03    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.28    0.62    0.00    0.00    0.00    0.00    0.01    0.00   0.0001 
      trailer |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.09    0.00    0.00    0.14    0.01    0.03    0.00    0.00    0.00    0.04    0.00    0.00    0.00    0.04    0.00    0.00    0.00    0.00    0.29    0.32    0.00    0.00    0.00    0.00    0.02    0.00   0.0002 
        train |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.05    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.02    0.00    0.01    0.00    0.00    0.01    0.00    0.09    0.00    0.00    0.80    0.00    0.00   0.0010 
   motorcycle |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.01    0.00    0.01    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.01    0.00    0.00    0.04    0.03    0.02    0.00    0.00    0.00    0.00    0.00    0.79    0.07   0.0007 
      bicycle |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.01    0.02    0.01    0.00    0.00    0.00    0.00    0.00    0.01    0.91   0.0062 
--------------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  -------  

classes          IoU      nIoU
--------------------------------
road          : 0.984      nan
sidewalk      : 0.862      nan
building      : 0.929      nan
wall          : 0.507      nan
fence         : 0.613      nan
pole          : 0.691      nan
traffic light : 0.734      nan
traffic sign  : 0.824      nan
vegetation    : 0.928      nan
terrain       : 0.635      nan
sky           : 0.955      nan
person        : 0.848    0.739
rider         : 0.684    0.545
car           : 0.957    0.910
truck         : 0.748    0.419
bus           : 0.880    0.659
train         : 0.778    0.545
motorcycle    : 0.682    0.510
bicycle       : 0.804    0.673
--------------------------------
Score Average : 0.792    0.625
--------------------------------


categories       IoU      nIoU
--------------------------------
flat          : 0.988      nan
construction  : 0.937      nan
object        : 0.753      nan
nature        : 0.931      nan
sky           : 0.955      nan
human         : 0.859    0.764
vehicle       : 0.947    0.886
--------------------------------
Score Average : 0.910    0.825
--------------------------------

[32m[05/27 15:50:16 d2.evaluation.cityscapes_evaluation]: [0mEvaluating results under /tmp/cityscapes_eval_6der8t1a ...
Creating ground truth instances from png files.
Processing 500 images...
Images Processed: 1 Images Processed: 2 Images Processed: 3 Images Processed: 4 Images Processed: 5 Images Processed: 6 Images Processed: 7 Images Processed: 8 Images Processed: 9 Images Processed: 10 Images Processed: 11 Images Processed: 12 Images Processed: 13 Images Processed: 14 Images Processed: 15 Images Processed: 16 Images Processed: 17 Images Processed: 18 Images Processed: 19 Images Processed: 20 Images Processed: 21 Images Processed: 22 Images Processed: 23 Images Processed: 24 Images Processed: 25 Images Processed: 26 Images Processed: 27 Images Processed: 28 Images Processed: 29 Images Processed: 30 Images Processed: 31 Images Processed: 32 Images Processed: 33 Images Processed: 34 Images Processed: 35 Images Processed: 36 Images Processed: 37 Images Processed: 38 Images Processed: 39 Images Processed: 40 Images Processed: 41 Images Processed: 42 Images Processed: 43 Images Processed: 44 Images Processed: 45 Images Processed: 46 Images Processed: 47 Images Processed: 48 Images Processed: 49 Images Processed: 50 Images Processed: 51 Images Processed: 52 Images Processed: 53 Images Processed: 54 Images Processed: 55 Images Processed: 56 Images Processed: 57 Images Processed: 58 Images Processed: 59 Images Processed: 60 Images Processed: 61 Images Processed: 62 Images Processed: 63 Images Processed: 64 Images Processed: 65 Images Processed: 66 Images Processed: 67 Images Processed: 68 Images Processed: 69 Images Processed: 70 Images Processed: 71 Images Processed: 72 Images Processed: 73 Images Processed: 74 Images Processed: 75 Images Processed: 76 Images Processed: 77 Images Processed: 78 Images Processed: 79 Images Processed: 80 Images Processed: 81 Images Processed: 82 Images Processed: 83 Images Processed: 84 Images Processed: 85 Images Processed: 86 Images Processed: 87 Images Processed: 88 Images Processed: 89 Images Processed: 90 Images Processed: 91 Images Processed: 92 Images Processed: 93 Images Processed: 94 Images Processed: 95 Images Processed: 96 Images Processed: 97 Images Processed: 98 Images Processed: 99 Images Processed: 100 Images Processed: 101 Images Processed: 102 Images Processed: 103 Images Processed: 104 Images Processed: 105 Images Processed: 106 Images Processed: 107 Images Processed: 108 Images Processed: 109 Images Processed: 110 Images Processed: 111 Images Processed: 112 Images Processed: 113 Images Processed: 114 Images Processed: 115 Images Processed: 116 Images Processed: 117 Images Processed: 118 Images Processed: 119 Images Processed: 120 Images Processed: 121 Images Processed: 122 Images Processed: 123 Images Processed: 124 Images Processed: 125 Images Processed: 126 Images Processed: 127 Images Processed: 128 Images Processed: 129 Images Processed: 130 Images Processed: 131 Images Processed: 132 Images Processed: 133 Images Processed: 134 Images Processed: 135 Images Processed: 136 Images Processed: 137 Images Processed: 138 Images Processed: 139 Images Processed: 140 Images Processed: 141 Images Processed: 142 Images Processed: 143 Images Processed: 144 Images Processed: 145 Images Processed: 146 Images Processed: 147 Images Processed: 148 Images Processed: 149 Images Processed: 150 Images Processed: 151 Images Processed: 152 Images Processed: 153 Images Processed: 154 Images Processed: 155 Images Processed: 156 Images Processed: 157 Images Processed: 158 Images Processed: 159 Images Processed: 160 Images Processed: 161 Images Processed: 162 Images Processed: 163 Images Processed: 164 Images Processed: 165 Images Processed: 166 Images Processed: 167 Images Processed: 168 Images Processed: 169 Images Processed: 170 Images Processed: 171 Images Processed: 172 Images Processed: 173 Images Processed: 174 Images Processed: 175 Images Processed: 176 Images Processed: 177 Images Processed: 178 Images Processed: 179 Images Processed: 180 Images Processed: 181 Images Processed: 182 Images Processed: 183 Images Processed: 184 Images Processed: 185 Images Processed: 186 Images Processed: 187 Images Processed: 188 Images Processed: 189 Images Processed: 190 Images Processed: 191 Images Processed: 192 Images Processed: 193 Images Processed: 194 Images Processed: 195 Images Processed: 196 Images Processed: 197 Images Processed: 198 Images Processed: 199 Images Processed: 200 Images Processed: 201 Images Processed: 202 Images Processed: 203 Images Processed: 204 Images Processed: 205 Images Processed: 206 Images Processed: 207 Images Processed: 208 Images Processed: 209 Images Processed: 210 Images Processed: 211 Images Processed: 212 Images Processed: 213 Images Processed: 214 Images Processed: 215 Images Processed: 216 Images Processed: 217 Images Processed: 218 Images Processed: 219 Images Processed: 220 Images Processed: 221 Images Processed: 222 Images Processed: 223 Images Processed: 224 Images Processed: 225 Images Processed: 226 Images Processed: 227 Images Processed: 228 Images Processed: 229 Images Processed: 230 Images Processed: 231 Images Processed: 232 Images Processed: 233 Images Processed: 234 Images Processed: 235 Images Processed: 236 Images Processed: 237 Images Processed: 238 Images Processed: 239 Images Processed: 240 Images Processed: 241 Images Processed: 242 Images Processed: 243 Images Processed: 244 Images Processed: 245 Images Processed: 246 Images Processed: 247 Images Processed: 248 Images Processed: 249 Images Processed: 250 Images Processed: 251 Images Processed: 252 Images Processed: 253 Images Processed: 254 Images Processed: 255 Images Processed: 256 Images Processed: 257 Images Processed: 258 Images Processed: 259 Images Processed: 260 Images Processed: 261 Images Processed: 262 Images Processed: 263 Images Processed: 264 Images Processed: 265 Images Processed: 266 Images Processed: 267 Images Processed: 268 Images Processed: 269 Images Processed: 270 Images Processed: 271 Images Processed: 272 Images Processed: 273 Images Processed: 274 Images Processed: 275 Images Processed: 276 Images Processed: 277 Images Processed: 278 Images Processed: 279 Images Processed: 280 Images Processed: 281 Images Processed: 282 Images Processed: 283 Images Processed: 284 Images Processed: 285 Images Processed: 286 Images Processed: 287 Images Processed: 288 Images Processed: 289 Images Processed: 290 Images Processed: 291 Images Processed: 292 Images Processed: 293 Images Processed: 294 Images Processed: 295 Images Processed: 296 Images Processed: 297 Images Processed: 298 Images Processed: 299 Images Processed: 300 Images Processed: 301 Images Processed: 302 Images Processed: 303 Images Processed: 304 Images Processed: 305 Images Processed: 306 Images Processed: 307 Images Processed: 308 Images Processed: 309 Images Processed: 310 Images Processed: 311 Images Processed: 312 Images Processed: 313 Images Processed: 314 Images Processed: 315 Images Processed: 316 Images Processed: 317 Images Processed: 318 Images Processed: 319 Images Processed: 320 Images Processed: 321 Images Processed: 322 Images Processed: 323 Images Processed: 324 Images Processed: 325 Images Processed: 326 Images Processed: 327 Images Processed: 328 Images Processed: 329 Images Processed: 330 Images Processed: 331 Images Processed: 332 Images Processed: 333 Images Processed: 334 Images Processed: 335 Images Processed: 336 Images Processed: 337 Images Processed: 338 Images Processed: 339 Images Processed: 340 Images Processed: 341 Images Processed: 342 Images Processed: 343 Images Processed: 344 Images Processed: 345 Images Processed: 346 Images Processed: 347 Images Processed: 348 Images Processed: 349 Images Processed: 350 Images Processed: 351 Images Processed: 352 Images Processed: 353 Images Processed: 354 Images Processed: 355 Images Processed: 356 Images Processed: 357 Images Processed: 358 Images Processed: 359 Images Processed: 360 Images Processed: 361 Images Processed: 362 Images Processed: 363 Images Processed: 364 Images Processed: 365 Images Processed: 366 Images Processed: 367 Images Processed: 368 Images Processed: 369 Images Processed: 370 Images Processed: 371 Images Processed: 372 Images Processed: 373 Images Processed: 374 Images Processed: 375 Images Processed: 376 Images Processed: 377 Images Processed: 378 Images Processed: 379 Images Processed: 380 Images Processed: 381 Images Processed: 382 Images Processed: 383 Images Processed: 384 Images Processed: 385 Images Processed: 386 Images Processed: 387 Images Processed: 388 Images Processed: 389 Images Processed: 390 Images Processed: 391 Images Processed: 392 Images Processed: 393 Images Processed: 394 Images Processed: 395 Images Processed: 396 Images Processed: 397 Images Processed: 398 Images Processed: 399 Images Processed: 400 Images Processed: 401 Images Processed: 402 Images Processed: 403 Images Processed: 404 Images Processed: 405 Images Processed: 406 Images Processed: 407 Images Processed: 408 Images Processed: 409 Images Processed: 410 Images Processed: 411 Images Processed: 412 Images Processed: 413 Images Processed: 414 Images Processed: 415 Images Processed: 416 Images Processed: 417 Images Processed: 418 Images Processed: 419 Images Processed: 420 Images Processed: 421 Images Processed: 422 Images Processed: 423 Images Processed: 424 Images Processed: 425 Images Processed: 426 Images Processed: 427 Images Processed: 428 Images Processed: 429 Images Processed: 430 Images Processed: 431 Images Processed: 432 Images Processed: 433 Images Processed: 434 Images Processed: 435 Images Processed: 436 Images Processed: 437 Images Processed: 438 Images Processed: 439 Images Processed: 440 Images Processed: 441 Images Processed: 442 Images Processed: 443 Images Processed: 444 Images Processed: 445 Images Processed: 446 Images Processed: 447 Images Processed: 448 Images Processed: 449 Images Processed: 450 Images Processed: 451 Images Processed: 452 Images Processed: 453 Images Processed: 454 Images Processed: 455 Images Processed: 456 Images Processed: 457 Images Processed: 458 Images Processed: 459 Images Processed: 460 Images Processed: 461 Images Processed: 462 Images Processed: 463 Images Processed: 464 Images Processed: 465 Images Processed: 466 Images Processed: 467 Images Processed: 468 Images Processed: 469 Images Processed: 470 Images Processed: 471 Images Processed: 472 Images Processed: 473 Images Processed: 474 Images Processed: 475 Images Processed: 476 Images Processed: 477 Images Processed: 478 Images Processed: 479 Images Processed: 480 Images Processed: 481 Images Processed: 482 Images Processed: 483 Images Processed: 484 Images Processed: 485 Images Processed: 486 Images Processed: 487 Images Processed: 488 Images Processed: 489 Images Processed: 490 Images Processed: 491 Images Processed: 492 Images Processed: 493 Images Processed: 494 Images Processed: 495 Images Processed: 496 Images Processed: 497 Images Processed: 498 Images Processed: 499 Images Processed: 500 
Matching 500 pairs of images...
Images Processed: 1 Images Processed: 2 Images Processed: 3 Images Processed: 4 Images Processed: 5 Images Processed: 6 Images Processed: 7 Images Processed: 8 Images Processed: 9 Images Processed: 10 Images Processed: 11 Images Processed: 12 Images Processed: 13 Images Processed: 14 Images Processed: 15 Images Processed: 16 Images Processed: 17 Images Processed: 18 Images Processed: 19 Images Processed: 20 Images Processed: 21 Images Processed: 22 Images Processed: 23 Images Processed: 24 Images Processed: 25 Images Processed: 26 Images Processed: 27 Images Processed: 28 Images Processed: 29 Images Processed: 30 Images Processed: 31 Images Processed: 32 Images Processed: 33 Images Processed: 34 Images Processed: 35 Images Processed: 36 Images Processed: 37 Images Processed: 38 Images Processed: 39 Images Processed: 40 Images Processed: 41 Images Processed: 42 Images Processed: 43 Images Processed: 44 Images Processed: 45 Images Processed: 46 Images Processed: 47 Images Processed: 48 Images Processed: 49 Images Processed: 50 Images Processed: 51 Images Processed: 52 Images Processed: 53 Images Processed: 54 Images Processed: 55 Images Processed: 56 Images Processed: 57 Images Processed: 58 Images Processed: 59 Images Processed: 60 Images Processed: 61 Images Processed: 62 Images Processed: 63 Images Processed: 64 Images Processed: 65 Images Processed: 66 Images Processed: 67 Images Processed: 68 Images Processed: 69 Images Processed: 70 Images Processed: 71 Images Processed: 72 Images Processed: 73 Images Processed: 74 Images Processed: 75 Images Processed: 76 Images Processed: 77 Images Processed: 78 Images Processed: 79 Images Processed: 80 Images Processed: 81 Images Processed: 82 Images Processed: 83 Images Processed: 84 Images Processed: 85 Images Processed: 86 Images Processed: 87 Images Processed: 88 Images Processed: 89 Images Processed: 90 Images Processed: 91 Images Processed: 92 Images Processed: 93 Images Processed: 94 Images Processed: 95 Images Processed: 96 Images Processed: 97 Images Processed: 98 Images Processed: 99 Images Processed: 100 Images Processed: 101 Images Processed: 102 Images Processed: 103 Images Processed: 104 Images Processed: 105 Images Processed: 106 Images Processed: 107 Images Processed: 108 Images Processed: 109 Images Processed: 110 Images Processed: 111 Images Processed: 112 Images Processed: 113 Images Processed: 114 Images Processed: 115 Images Processed: 116 Images Processed: 117 Images Processed: 118 Images Processed: 119 Images Processed: 120 Images Processed: 121 Images Processed: 122 Images Processed: 123 Images Processed: 124 Images Processed: 125 Images Processed: 126 Images Processed: 127 Images Processed: 128 Images Processed: 129 Images Processed: 130 Images Processed: 131 Images Processed: 132 Images Processed: 133 Images Processed: 134 Images Processed: 135 Images Processed: 136 Images Processed: 137 Images Processed: 138 Images Processed: 139 Images Processed: 140 Images Processed: 141 Images Processed: 142 Images Processed: 143 Images Processed: 144 Images Processed: 145 Images Processed: 146 Images Processed: 147 Images Processed: 148 Images Processed: 149 Images Processed: 150 Images Processed: 151 Images Processed: 152 Images Processed: 153 Images Processed: 154 Images Processed: 155 Images Processed: 156 Images Processed: 157 Images Processed: 158 Images Processed: 159 Images Processed: 160 Images Processed: 161 Images Processed: 162 Images Processed: 163 Images Processed: 164 Images Processed: 165 Images Processed: 166 Images Processed: 167 Images Processed: 168 Images Processed: 169 Images Processed: 170 Images Processed: 171 Images Processed: 172 Images Processed: 173 Images Processed: 174 Images Processed: 175 Images Processed: 176 Images Processed: 177 Images Processed: 178 Images Processed: 179 Images Processed: 180 Images Processed: 181 Images Processed: 182 Images Processed: 183 Images Processed: 184 Images Processed: 185 Images Processed: 186 Images Processed: 187 Images Processed: 188 Images Processed: 189 Images Processed: 190 Images Processed: 191 Images Processed: 192 Images Processed: 193 Images Processed: 194 Images Processed: 195 Images Processed: 196 Images Processed: 197 Images Processed: 198 Images Processed: 199 Images Processed: 200 Images Processed: 201 Images Processed: 202 Images Processed: 203 Images Processed: 204 Images Processed: 205 Images Processed: 206 Images Processed: 207 Images Processed: 208 Images Processed: 209 Images Processed: 210 Images Processed: 211 Images Processed: 212 Images Processed: 213 Images Processed: 214 Images Processed: 215 Images Processed: 216 Images Processed: 217 Images Processed: 218 Images Processed: 219 Images Processed: 220 Images Processed: 221 Images Processed: 222 Images Processed: 223 Images Processed: 224 Images Processed: 225 Images Processed: 226 Images Processed: 227 Images Processed: 228 Images Processed: 229 Images Processed: 230 Images Processed: 231 Images Processed: 232 Images Processed: 233 Images Processed: 234 Images Processed: 235 Images Processed: 236 Images Processed: 237 Images Processed: 238 Images Processed: 239 Images Processed: 240 Images Processed: 241 Images Processed: 242 Images Processed: 243 Images Processed: 244 Images Processed: 245 Images Processed: 246 Images Processed: 247 Images Processed: 248 Images Processed: 249 Images Processed: 250 Images Processed: 251 Images Processed: 252 Images Processed: 253 Images Processed: 254 Images Processed: 255 Images Processed: 256 Images Processed: 257 Images Processed: 258 Images Processed: 259 Images Processed: 260 Images Processed: 261 Images Processed: 262 Images Processed: 263 Images Processed: 264 Images Processed: 265 Images Processed: 266 Images Processed: 267 Images Processed: 268 Images Processed: 269 Images Processed: 270 Images Processed: 271 Images Processed: 272 Images Processed: 273 Images Processed: 274 Images Processed: 275 Images Processed: 276 Images Processed: 277 Images Processed: 278 Images Processed: 279 Images Processed: 280 Images Processed: 281 Images Processed: 282 Images Processed: 283 Images Processed: 284 Images Processed: 285 Images Processed: 286 Images Processed: 287 Images Processed: 288 Images Processed: 289 Images Processed: 290 Images Processed: 291 Images Processed: 292 Images Processed: 293 Images Processed: 294 Images Processed: 295 Images Processed: 296 Images Processed: 297 Images Processed: 298 Images Processed: 299 Images Processed: 300 Images Processed: 301 Images Processed: 302 Images Processed: 303 Images Processed: 304 Images Processed: 305 Images Processed: 306 Images Processed: 307 Images Processed: 308 Images Processed: 309 Images Processed: 310 Images Processed: 311 Images Processed: 312 Images Processed: 313 Images Processed: 314 Images Processed: 315 Images Processed: 316 Images Processed: 317 Images Processed: 318 Images Processed: 319 Images Processed: 320 Images Processed: 321 Images Processed: 322 Images Processed: 323 Images Processed: 324 Images Processed: 325 Images Processed: 326 Images Processed: 327 Images Processed: 328 Images Processed: 329 Images Processed: 330 Images Processed: 331 Images Processed: 332 Images Processed: 333 Images Processed: 334 Images Processed: 335 Images Processed: 336 Images Processed: 337 Images Processed: 338 Images Processed: 339 Images Processed: 340 Images Processed: 341 Images Processed: 342 Images Processed: 343 Images Processed: 344 Images Processed: 345 Images Processed: 346 Images Processed: 347 Images Processed: 348 Images Processed: 349 Images Processed: 350 Images Processed: 351 Images Processed: 352 Images Processed: 353 Images Processed: 354 Images Processed: 355 Images Processed: 356 Images Processed: 357 Images Processed: 358 Images Processed: 359 Images Processed: 360 Images Processed: 361 Images Processed: 362 Images Processed: 363 Images Processed: 364 Images Processed: 365 Images Processed: 366 Images Processed: 367 Images Processed: 368 Images Processed: 369 Images Processed: 370 Images Processed: 371 Images Processed: 372 Images Processed: 373 Images Processed: 374 Images Processed: 375 Images Processed: 376 Images Processed: 377 Images Processed: 378 Images Processed: 379 Images Processed: 380 Images Processed: 381 Images Processed: 382 Images Processed: 383 Images Processed: 384 Images Processed: 385 Images Processed: 386 Images Processed: 387 Images Processed: 388 Images Processed: 389 Images Processed: 390 Images Processed: 391 Images Processed: 392 Images Processed: 393 Images Processed: 394 Images Processed: 395 Images Processed: 396 Images Processed: 397 Images Processed: 398 Images Processed: 399 Images Processed: 400 Images Processed: 401 Images Processed: 402 Images Processed: 403 Images Processed: 404 Images Processed: 405 Images Processed: 406 Images Processed: 407 Images Processed: 408 Images Processed: 409 Images Processed: 410 Images Processed: 411 Images Processed: 412 Images Processed: 413 Images Processed: 414 Images Processed: 415 Images Processed: 416 Images Processed: 417 Images Processed: 418 Images Processed: 419 Images Processed: 420 Images Processed: 421 Images Processed: 422 Images Processed: 423 Images Processed: 424 Images Processed: 425 Images Processed: 426 Images Processed: 427 Images Processed: 428 Images Processed: 429 Images Processed: 430 Images Processed: 431 Images Processed: 432 Images Processed: 433 Images Processed: 434 Images Processed: 435 Images Processed: 436 Images Processed: 437 Images Processed: 438 Images Processed: 439 Images Processed: 440 Images Processed: 441 Images Processed: 442 Images Processed: 443 Images Processed: 444 Images Processed: 445 Images Processed: 446 Images Processed: 447 Images Processed: 448 Images Processed: 449 Images Processed: 450 Images Processed: 451 Images Processed: 452 Images Processed: 453 Images Processed: 454 Images Processed: 455 Images Processed: 456 Images Processed: 457 Images Processed: 458 Images Processed: 459 Images Processed: 460 Images Processed: 461 Images Processed: 462 Images Processed: 463 Images Processed: 464 Images Processed: 465 Images Processed: 466 Images Processed: 467 Images Processed: 468 Images Processed: 469 Images Processed: 470 Images Processed: 471 Images Processed: 472 Images Processed: 473 Images Processed: 474 Images Processed: 475 Images Processed: 476 Images Processed: 477 Images Processed: 478 Images Processed: 479 Images Processed: 480 Images Processed: 481 Images Processed: 482 Images Processed: 483 Images Processed: 484 Images Processed: 485 Images Processed: 486 Images Processed: 487 Images Processed: 488 Images Processed: 489 Images Processed: 490 Images Processed: 491 Images Processed: 492 Images Processed: 493 Images Processed: 494 Images Processed: 495 Images Processed: 496 Images Processed: 497 Images Processed: 498 Images Processed: 499 Images Processed: 500 

##################################################
what           :             AP         AP_50%
##################################################
person         :          0.266          0.559
rider          :          0.196          0.518
car            :          0.492          0.744
truck          :          0.325          0.426
bus            :          0.590          0.696
train          :          0.352          0.502
motorcycle     :          0.171          0.421
bicycle        :          0.189          0.504
--------------------------------------------------
average        :          0.323          0.546

[32m[05/27 15:54:09 d2.engine.defaults]: [0mEvaluation results for cityscapes_fine_panoptic_val in csv format:
[32m[05/27 15:54:09 d2.evaluation.testing]: [0mcopypaste: Task: panoptic_seg
[32m[05/27 15:54:09 d2.evaluation.testing]: [0mcopypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[32m[05/27 15:54:09 d2.evaluation.testing]: [0mcopypaste: 61.1192,81.1262,74.1617,51.4101,79.4213,64.4867,68.1803,82.3661,81.1981
[32m[05/27 15:54:09 d2.evaluation.testing]: [0mcopypaste: Task: sem_seg
[32m[05/27 15:54:09 d2.evaluation.testing]: [0mcopypaste: IoU,iIoU,IoU_sup,iIoU_sup
[32m[05/27 15:54:09 d2.evaluation.testing]: [0mcopypaste: 79.1630,62.5009,90.9910,82.4740
[32m[05/27 15:54:09 d2.evaluation.testing]: [0mcopypaste: Task: segm
[32m[05/27 15:54:09 d2.evaluation.testing]: [0mcopypaste: AP,AP50
[32m[05/27 15:54:09 d2.evaluation.testing]: [0mcopypaste: 32.2553,54.6293
