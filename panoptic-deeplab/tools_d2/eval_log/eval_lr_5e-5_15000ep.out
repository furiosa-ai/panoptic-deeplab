nohup: ignoring input
Command Line Args: Namespace(config_file='configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', 'output/xception65_dsconv_61218_lr5e-5/model_0014999.pth'], resume=False)
[32m[05/29 18:23:04 detectron2]: [0mRank of current process: 0. World size: 1
[32m[05/29 18:23:06 detectron2]: [0mEnvironment info:
----------------------  -------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.12 | packaged by conda-forge | (default, Oct 12 2021, 21:59:51) [GCC 9.4.0]
numpy                   1.22.4
detectron2              0.6 @/pvc/ljh726/detectron2/detectron2
Compiler                GCC 9.3
CUDA compiler           CUDA 11.6
detectron2 arch flags   5.2, 6.0, 6.1, 7.0, 7.5, 8.0, 8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.9.1+cu111 @/opt/conda/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA A100-SXM4-80GB (arch=8.0)
Driver version          470.82.01
CUDA_HOME               /usr/local/cuda
TORCH_CUDA_ARCH_LIST    5.2 6.0 6.1 7.0 7.5 8.0 8.6+PTX
Pillow                  8.2.0
torchvision             0.10.1+cu111 @/opt/conda/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     3.4.11
----------------------  -------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[32m[05/29 18:23:06 detectron2]: [0mCommand line arguments: Namespace(config_file='configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', 'output/xception65_dsconv_61218_lr5e-5/model_0014999.pth'], resume=False)
[32m[05/29 18:23:06 detectron2]: [0mContents of args.config_file=configs/Cityscapes-PanopticSegmentation/panoptic_deeplab_X_65_os16_mg124_poly_90k_bs32_crop_512_1024_dsconv.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39mBase-PanopticDeepLab-OS16.yaml
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./pretrained/x65.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m128[39m,[38;5;15m [39m[38;5;15m128[39m,[38;5;15m [39m[38;5;15m128[39m]
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m128[39m,[38;5;15m [39m[38;5;15m128[39m,[38;5;15m [39m[38;5;15m128[39m]
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186md2_xception_65[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBN[39m[38;5;186m"[39m[38;5;15m [39m[38;5;242m#SyncBN: Multi-GPU[39m
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mADAM[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.00005
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m60000
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mWarmupPolyLR[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mabsolute[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m(513, 1025)
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/xception65_dsconv_61218_lr5e-5/[39m[38;5;186m"[39m
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m1

[32m[05/29 18:23:06 detectron2]: [0mRunning with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcityscapes_fine_panoptic_val
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcityscapes_fine_panoptic_train
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m513
[38;5;15m    [39m-[38;5;15m [39m1025
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mabsolute
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mRGB
[38;5;15m  [39m[38;5;197mGAUSSIAN_SIGMA[39m[38;5;15m:[39m[38;5;15m [39m10
[38;5;15m  [39m[38;5;197mIGNORE_CROWD_IN_SEMANTIC[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mIGNORE_STUFF_IN_OFFSET[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m512
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m832
[38;5;15m  [39m-[38;5;15m [39m896
[38;5;15m  [39m-[38;5;15m [39m1024
[38;5;15m  [39m-[38;5;15m [39m1152
[38;5;15m  [39m-[38;5;15m [39m1216
[38;5;15m  [39m-[38;5;15m [39m1344
[38;5;15m  [39m-[38;5;15m [39m1408
[38;5;15m  [39m-[38;5;15m [39m1536
[38;5;15m  [39m-[38;5;15m [39m1664
[38;5;15m  [39m-[38;5;15m [39m1728
[38;5;15m  [39m-[38;5;15m [39m1856
[38;5;15m  [39m-[38;5;15m [39m1920
[38;5;15m  [39m-[38;5;15m [39m2048
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m3
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m      [39m-[38;5;15m [39m64
[38;5;15m      [39m-[38;5;15m [39m128
[38;5;15m      [39m-[38;5;15m [39m256
[38;5;15m      [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39md2_xception_65
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mINS_EMBED_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCENTER_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m200.0
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabInsEmbedHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mBN
[38;5;15m    [39m[38;5;197mOFFSET_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLab
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBENCHMARK_NETWORK_SPEED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCENTER_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mNMS_KERNEL[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPREDICT_INSTANCES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mSTUFF_AREA[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m    [39m[38;5;197mTOP_K_INSTANCE[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m-[38;5;15m [39m128
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m-[38;5;15m [39m2
[38;5;15m    [39m-[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39mdeeplab
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRes5ROIHeads
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mMaskRCNNConvUpsampleHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m6000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m12000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mLOSS_TOP_K[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39mhard_pixel_mining
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabSemSegHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mBN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m19
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39moutput/xception65_dsconv_61218_lr5e-5/model_0014999.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m./output/xception65_dsconv_61218_lr5e-5/
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m5.0e-05
[38;5;15m  [39m[38;5;197mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m5000
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupPolyLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m60000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39mADAM
[38;5;15m  [39m[38;5;197mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m30000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m100
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[32m[05/29 18:23:06 detectron2]: [0mFull config saved to ./output/xception65_dsconv_61218_lr5e-5/config.yaml
[32m[05/29 18:23:06 d2.utils.env]: [0mUsing a generated random seed 7791278
[32m[05/29 18:23:17 d2.engine.defaults]: [0mModel:
PanopticDeepLab(
  (backbone): d2_xception_65(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (block1): XceptionBlock(
      (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
          (bn_depth): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn_depth): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block2): XceptionBlock(
      (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn_depth): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (bn_depth): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block3): XceptionBlock(
      (conv): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn_depth): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block4): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block5): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block6): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block7): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block8): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block9): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block10): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block11): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block12): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block13): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block14): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block15): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block16): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block17): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block18): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block19): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block20): XceptionBlock(
      (conv): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=728, bias=False)
          (bn_depth): BatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (relu): ReLU()
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1024, bias=False)
          (bn_depth): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (block21): XceptionBlock(
      (sep_conv1): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1024, bias=False)
          (bn_depth): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv2): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
      (sep_conv3): SeparableConv2d(
        (block): Sequential(
          (depthwise): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=1536, bias=False)
          (bn_depth): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn_point): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False
            (norm): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            288, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AdaptiveAvgPool2d(output_size=1)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=256, bias=False
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False
            (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          728, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AdaptiveAvgPool2d(output_size=1)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128, bias=False
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[32m[05/29 18:23:17 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from output/xception65_dsconv_61218_lr5e-5/model_0014999.pth ...
[32m[05/29 18:23:21 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with model:
| Names in Model                                               | Names in Checkpoint                                                                                                                                   | Shapes                                          |
|:-------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------|
| backbone.block1.bn.*                                         | backbone.block1.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                         | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.conv.weight                                  | backbone.block1.conv.weight                                                                                                                           | (128, 64, 1, 1)                                 |
| backbone.block1.sep_conv1.block.bn_depth.*                   | backbone.block1.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (64,) () (64,) (64,) (64,)                      |
| backbone.block1.sep_conv1.block.bn_point.*                   | backbone.block1.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv1.block.depthwise.weight             | backbone.block1.sep_conv1.block.depthwise.weight                                                                                                      | (64, 1, 3, 3)                                   |
| backbone.block1.sep_conv1.block.pointwise.weight             | backbone.block1.sep_conv1.block.pointwise.weight                                                                                                      | (128, 64, 1, 1)                                 |
| backbone.block1.sep_conv2.block.bn_depth.*                   | backbone.block1.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv2.block.bn_point.*                   | backbone.block1.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv2.block.depthwise.weight             | backbone.block1.sep_conv2.block.depthwise.weight                                                                                                      | (128, 1, 3, 3)                                  |
| backbone.block1.sep_conv2.block.pointwise.weight             | backbone.block1.sep_conv2.block.pointwise.weight                                                                                                      | (128, 128, 1, 1)                                |
| backbone.block1.sep_conv3.block.bn_depth.*                   | backbone.block1.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv3.block.bn_point.*                   | backbone.block1.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block1.sep_conv3.block.depthwise.weight             | backbone.block1.sep_conv3.block.depthwise.weight                                                                                                      | (128, 1, 3, 3)                                  |
| backbone.block1.sep_conv3.block.pointwise.weight             | backbone.block1.sep_conv3.block.pointwise.weight                                                                                                      | (128, 128, 1, 1)                                |
| backbone.block10.sep_conv1.block.bn_depth.*                  | backbone.block10.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv1.block.bn_point.*                  | backbone.block10.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv1.block.depthwise.weight            | backbone.block10.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block10.sep_conv1.block.pointwise.weight            | backbone.block10.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block10.sep_conv2.block.bn_depth.*                  | backbone.block10.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv2.block.bn_point.*                  | backbone.block10.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv2.block.depthwise.weight            | backbone.block10.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block10.sep_conv2.block.pointwise.weight            | backbone.block10.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block10.sep_conv3.block.bn_depth.*                  | backbone.block10.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv3.block.bn_point.*                  | backbone.block10.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block10.sep_conv3.block.depthwise.weight            | backbone.block10.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block10.sep_conv3.block.pointwise.weight            | backbone.block10.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block11.sep_conv1.block.bn_depth.*                  | backbone.block11.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv1.block.bn_point.*                  | backbone.block11.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv1.block.depthwise.weight            | backbone.block11.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block11.sep_conv1.block.pointwise.weight            | backbone.block11.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block11.sep_conv2.block.bn_depth.*                  | backbone.block11.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv2.block.bn_point.*                  | backbone.block11.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv2.block.depthwise.weight            | backbone.block11.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block11.sep_conv2.block.pointwise.weight            | backbone.block11.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block11.sep_conv3.block.bn_depth.*                  | backbone.block11.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv3.block.bn_point.*                  | backbone.block11.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block11.sep_conv3.block.depthwise.weight            | backbone.block11.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block11.sep_conv3.block.pointwise.weight            | backbone.block11.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block12.sep_conv1.block.bn_depth.*                  | backbone.block12.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv1.block.bn_point.*                  | backbone.block12.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv1.block.depthwise.weight            | backbone.block12.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block12.sep_conv1.block.pointwise.weight            | backbone.block12.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block12.sep_conv2.block.bn_depth.*                  | backbone.block12.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv2.block.bn_point.*                  | backbone.block12.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv2.block.depthwise.weight            | backbone.block12.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block12.sep_conv2.block.pointwise.weight            | backbone.block12.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block12.sep_conv3.block.bn_depth.*                  | backbone.block12.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv3.block.bn_point.*                  | backbone.block12.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block12.sep_conv3.block.depthwise.weight            | backbone.block12.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block12.sep_conv3.block.pointwise.weight            | backbone.block12.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block13.sep_conv1.block.bn_depth.*                  | backbone.block13.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv1.block.bn_point.*                  | backbone.block13.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv1.block.depthwise.weight            | backbone.block13.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block13.sep_conv1.block.pointwise.weight            | backbone.block13.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block13.sep_conv2.block.bn_depth.*                  | backbone.block13.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv2.block.bn_point.*                  | backbone.block13.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv2.block.depthwise.weight            | backbone.block13.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block13.sep_conv2.block.pointwise.weight            | backbone.block13.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block13.sep_conv3.block.bn_depth.*                  | backbone.block13.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv3.block.bn_point.*                  | backbone.block13.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block13.sep_conv3.block.depthwise.weight            | backbone.block13.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block13.sep_conv3.block.pointwise.weight            | backbone.block13.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block14.sep_conv1.block.bn_depth.*                  | backbone.block14.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv1.block.bn_point.*                  | backbone.block14.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv1.block.depthwise.weight            | backbone.block14.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block14.sep_conv1.block.pointwise.weight            | backbone.block14.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block14.sep_conv2.block.bn_depth.*                  | backbone.block14.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv2.block.bn_point.*                  | backbone.block14.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv2.block.depthwise.weight            | backbone.block14.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block14.sep_conv2.block.pointwise.weight            | backbone.block14.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block14.sep_conv3.block.bn_depth.*                  | backbone.block14.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv3.block.bn_point.*                  | backbone.block14.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block14.sep_conv3.block.depthwise.weight            | backbone.block14.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block14.sep_conv3.block.pointwise.weight            | backbone.block14.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block15.sep_conv1.block.bn_depth.*                  | backbone.block15.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv1.block.bn_point.*                  | backbone.block15.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv1.block.depthwise.weight            | backbone.block15.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block15.sep_conv1.block.pointwise.weight            | backbone.block15.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block15.sep_conv2.block.bn_depth.*                  | backbone.block15.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv2.block.bn_point.*                  | backbone.block15.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv2.block.depthwise.weight            | backbone.block15.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block15.sep_conv2.block.pointwise.weight            | backbone.block15.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block15.sep_conv3.block.bn_depth.*                  | backbone.block15.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv3.block.bn_point.*                  | backbone.block15.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block15.sep_conv3.block.depthwise.weight            | backbone.block15.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block15.sep_conv3.block.pointwise.weight            | backbone.block15.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block16.sep_conv1.block.bn_depth.*                  | backbone.block16.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv1.block.bn_point.*                  | backbone.block16.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv1.block.depthwise.weight            | backbone.block16.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block16.sep_conv1.block.pointwise.weight            | backbone.block16.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block16.sep_conv2.block.bn_depth.*                  | backbone.block16.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv2.block.bn_point.*                  | backbone.block16.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv2.block.depthwise.weight            | backbone.block16.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block16.sep_conv2.block.pointwise.weight            | backbone.block16.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block16.sep_conv3.block.bn_depth.*                  | backbone.block16.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv3.block.bn_point.*                  | backbone.block16.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block16.sep_conv3.block.depthwise.weight            | backbone.block16.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block16.sep_conv3.block.pointwise.weight            | backbone.block16.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block17.sep_conv1.block.bn_depth.*                  | backbone.block17.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv1.block.bn_point.*                  | backbone.block17.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv1.block.depthwise.weight            | backbone.block17.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block17.sep_conv1.block.pointwise.weight            | backbone.block17.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block17.sep_conv2.block.bn_depth.*                  | backbone.block17.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv2.block.bn_point.*                  | backbone.block17.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv2.block.depthwise.weight            | backbone.block17.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block17.sep_conv2.block.pointwise.weight            | backbone.block17.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block17.sep_conv3.block.bn_depth.*                  | backbone.block17.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv3.block.bn_point.*                  | backbone.block17.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block17.sep_conv3.block.depthwise.weight            | backbone.block17.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block17.sep_conv3.block.pointwise.weight            | backbone.block17.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block18.sep_conv1.block.bn_depth.*                  | backbone.block18.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv1.block.bn_point.*                  | backbone.block18.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv1.block.depthwise.weight            | backbone.block18.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block18.sep_conv1.block.pointwise.weight            | backbone.block18.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block18.sep_conv2.block.bn_depth.*                  | backbone.block18.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv2.block.bn_point.*                  | backbone.block18.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv2.block.depthwise.weight            | backbone.block18.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block18.sep_conv2.block.pointwise.weight            | backbone.block18.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block18.sep_conv3.block.bn_depth.*                  | backbone.block18.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv3.block.bn_point.*                  | backbone.block18.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block18.sep_conv3.block.depthwise.weight            | backbone.block18.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block18.sep_conv3.block.pointwise.weight            | backbone.block18.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block19.sep_conv1.block.bn_depth.*                  | backbone.block19.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv1.block.bn_point.*                  | backbone.block19.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv1.block.depthwise.weight            | backbone.block19.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block19.sep_conv1.block.pointwise.weight            | backbone.block19.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block19.sep_conv2.block.bn_depth.*                  | backbone.block19.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv2.block.bn_point.*                  | backbone.block19.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv2.block.depthwise.weight            | backbone.block19.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block19.sep_conv2.block.pointwise.weight            | backbone.block19.sep_conv2.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block19.sep_conv3.block.bn_depth.*                  | backbone.block19.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv3.block.bn_point.*                  | backbone.block19.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block19.sep_conv3.block.depthwise.weight            | backbone.block19.sep_conv3.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block19.sep_conv3.block.pointwise.weight            | backbone.block19.sep_conv3.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block2.bn.*                                         | backbone.block2.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                         | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.conv.weight                                  | backbone.block2.conv.weight                                                                                                                           | (256, 128, 1, 1)                                |
| backbone.block2.sep_conv1.block.bn_depth.*                   | backbone.block2.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (128,) () (128,) (128,) (128,)                  |
| backbone.block2.sep_conv1.block.bn_point.*                   | backbone.block2.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv1.block.depthwise.weight             | backbone.block2.sep_conv1.block.depthwise.weight                                                                                                      | (128, 1, 3, 3)                                  |
| backbone.block2.sep_conv1.block.pointwise.weight             | backbone.block2.sep_conv1.block.pointwise.weight                                                                                                      | (256, 128, 1, 1)                                |
| backbone.block2.sep_conv2.block.bn_depth.*                   | backbone.block2.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv2.block.bn_point.*                   | backbone.block2.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv2.block.depthwise.weight             | backbone.block2.sep_conv2.block.depthwise.weight                                                                                                      | (256, 1, 3, 3)                                  |
| backbone.block2.sep_conv2.block.pointwise.weight             | backbone.block2.sep_conv2.block.pointwise.weight                                                                                                      | (256, 256, 1, 1)                                |
| backbone.block2.sep_conv3.block.bn_depth.*                   | backbone.block2.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv3.block.bn_point.*                   | backbone.block2.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block2.sep_conv3.block.depthwise.weight             | backbone.block2.sep_conv3.block.depthwise.weight                                                                                                      | (256, 1, 3, 3)                                  |
| backbone.block2.sep_conv3.block.pointwise.weight             | backbone.block2.sep_conv3.block.pointwise.weight                                                                                                      | (256, 256, 1, 1)                                |
| backbone.block20.bn.*                                        | backbone.block20.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                        | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block20.conv.weight                                 | backbone.block20.conv.weight                                                                                                                          | (1024, 728, 1, 1)                               |
| backbone.block20.sep_conv1.block.bn_depth.*                  | backbone.block20.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block20.sep_conv1.block.bn_point.*                  | backbone.block20.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block20.sep_conv1.block.depthwise.weight            | backbone.block20.sep_conv1.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block20.sep_conv1.block.pointwise.weight            | backbone.block20.sep_conv1.block.pointwise.weight                                                                                                     | (728, 728, 1, 1)                                |
| backbone.block20.sep_conv2.block.bn_depth.*                  | backbone.block20.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (728,) () (728,) (728,) (728,)                  |
| backbone.block20.sep_conv2.block.bn_point.*                  | backbone.block20.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block20.sep_conv2.block.depthwise.weight            | backbone.block20.sep_conv2.block.depthwise.weight                                                                                                     | (728, 1, 3, 3)                                  |
| backbone.block20.sep_conv2.block.pointwise.weight            | backbone.block20.sep_conv2.block.pointwise.weight                                                                                                     | (1024, 728, 1, 1)                               |
| backbone.block20.sep_conv3.block.bn_depth.*                  | backbone.block20.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block20.sep_conv3.block.bn_point.*                  | backbone.block20.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block20.sep_conv3.block.depthwise.weight            | backbone.block20.sep_conv3.block.depthwise.weight                                                                                                     | (1024, 1, 3, 3)                                 |
| backbone.block20.sep_conv3.block.pointwise.weight            | backbone.block20.sep_conv3.block.pointwise.weight                                                                                                     | (1024, 1024, 1, 1)                              |
| backbone.block21.sep_conv1.block.bn_depth.*                  | backbone.block21.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1024,) () (1024,) (1024,) (1024,)              |
| backbone.block21.sep_conv1.block.bn_point.*                  | backbone.block21.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1536,) () (1536,) (1536,) (1536,)              |
| backbone.block21.sep_conv1.block.depthwise.weight            | backbone.block21.sep_conv1.block.depthwise.weight                                                                                                     | (1024, 1, 3, 3)                                 |
| backbone.block21.sep_conv1.block.pointwise.weight            | backbone.block21.sep_conv1.block.pointwise.weight                                                                                                     | (1536, 1024, 1, 1)                              |
| backbone.block21.sep_conv2.block.bn_depth.*                  | backbone.block21.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1536,) () (1536,) (1536,) (1536,)              |
| backbone.block21.sep_conv2.block.bn_point.*                  | backbone.block21.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1536,) () (1536,) (1536,) (1536,)              |
| backbone.block21.sep_conv2.block.depthwise.weight            | backbone.block21.sep_conv2.block.depthwise.weight                                                                                                     | (1536, 1, 3, 3)                                 |
| backbone.block21.sep_conv2.block.pointwise.weight            | backbone.block21.sep_conv2.block.pointwise.weight                                                                                                     | (1536, 1536, 1, 1)                              |
| backbone.block21.sep_conv3.block.bn_depth.*                  | backbone.block21.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (1536,) () (1536,) (1536,) (1536,)              |
| backbone.block21.sep_conv3.block.bn_point.*                  | backbone.block21.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                  | (2048,) () (2048,) (2048,) (2048,)              |
| backbone.block21.sep_conv3.block.depthwise.weight            | backbone.block21.sep_conv3.block.depthwise.weight                                                                                                     | (1536, 1, 3, 3)                                 |
| backbone.block21.sep_conv3.block.pointwise.weight            | backbone.block21.sep_conv3.block.pointwise.weight                                                                                                     | (2048, 1536, 1, 1)                              |
| backbone.block3.bn.*                                         | backbone.block3.bn.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                         | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.conv.weight                                  | backbone.block3.conv.weight                                                                                                                           | (728, 256, 1, 1)                                |
| backbone.block3.sep_conv1.block.bn_depth.*                   | backbone.block3.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (256,) () (256,) (256,) (256,)                  |
| backbone.block3.sep_conv1.block.bn_point.*                   | backbone.block3.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv1.block.depthwise.weight             | backbone.block3.sep_conv1.block.depthwise.weight                                                                                                      | (256, 1, 3, 3)                                  |
| backbone.block3.sep_conv1.block.pointwise.weight             | backbone.block3.sep_conv1.block.pointwise.weight                                                                                                      | (728, 256, 1, 1)                                |
| backbone.block3.sep_conv2.block.bn_depth.*                   | backbone.block3.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv2.block.bn_point.*                   | backbone.block3.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv2.block.depthwise.weight             | backbone.block3.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block3.sep_conv2.block.pointwise.weight             | backbone.block3.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block3.sep_conv3.block.bn_depth.*                   | backbone.block3.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv3.block.bn_point.*                   | backbone.block3.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block3.sep_conv3.block.depthwise.weight             | backbone.block3.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block3.sep_conv3.block.pointwise.weight             | backbone.block3.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block4.sep_conv1.block.bn_depth.*                   | backbone.block4.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv1.block.bn_point.*                   | backbone.block4.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv1.block.depthwise.weight             | backbone.block4.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block4.sep_conv1.block.pointwise.weight             | backbone.block4.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block4.sep_conv2.block.bn_depth.*                   | backbone.block4.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv2.block.bn_point.*                   | backbone.block4.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv2.block.depthwise.weight             | backbone.block4.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block4.sep_conv2.block.pointwise.weight             | backbone.block4.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block4.sep_conv3.block.bn_depth.*                   | backbone.block4.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv3.block.bn_point.*                   | backbone.block4.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block4.sep_conv3.block.depthwise.weight             | backbone.block4.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block4.sep_conv3.block.pointwise.weight             | backbone.block4.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block5.sep_conv1.block.bn_depth.*                   | backbone.block5.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv1.block.bn_point.*                   | backbone.block5.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv1.block.depthwise.weight             | backbone.block5.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block5.sep_conv1.block.pointwise.weight             | backbone.block5.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block5.sep_conv2.block.bn_depth.*                   | backbone.block5.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv2.block.bn_point.*                   | backbone.block5.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv2.block.depthwise.weight             | backbone.block5.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block5.sep_conv2.block.pointwise.weight             | backbone.block5.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block5.sep_conv3.block.bn_depth.*                   | backbone.block5.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv3.block.bn_point.*                   | backbone.block5.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block5.sep_conv3.block.depthwise.weight             | backbone.block5.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block5.sep_conv3.block.pointwise.weight             | backbone.block5.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block6.sep_conv1.block.bn_depth.*                   | backbone.block6.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv1.block.bn_point.*                   | backbone.block6.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv1.block.depthwise.weight             | backbone.block6.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block6.sep_conv1.block.pointwise.weight             | backbone.block6.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block6.sep_conv2.block.bn_depth.*                   | backbone.block6.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv2.block.bn_point.*                   | backbone.block6.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv2.block.depthwise.weight             | backbone.block6.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block6.sep_conv2.block.pointwise.weight             | backbone.block6.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block6.sep_conv3.block.bn_depth.*                   | backbone.block6.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv3.block.bn_point.*                   | backbone.block6.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block6.sep_conv3.block.depthwise.weight             | backbone.block6.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block6.sep_conv3.block.pointwise.weight             | backbone.block6.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block7.sep_conv1.block.bn_depth.*                   | backbone.block7.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv1.block.bn_point.*                   | backbone.block7.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv1.block.depthwise.weight             | backbone.block7.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block7.sep_conv1.block.pointwise.weight             | backbone.block7.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block7.sep_conv2.block.bn_depth.*                   | backbone.block7.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv2.block.bn_point.*                   | backbone.block7.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv2.block.depthwise.weight             | backbone.block7.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block7.sep_conv2.block.pointwise.weight             | backbone.block7.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block7.sep_conv3.block.bn_depth.*                   | backbone.block7.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv3.block.bn_point.*                   | backbone.block7.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block7.sep_conv3.block.depthwise.weight             | backbone.block7.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block7.sep_conv3.block.pointwise.weight             | backbone.block7.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block8.sep_conv1.block.bn_depth.*                   | backbone.block8.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv1.block.bn_point.*                   | backbone.block8.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv1.block.depthwise.weight             | backbone.block8.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block8.sep_conv1.block.pointwise.weight             | backbone.block8.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block8.sep_conv2.block.bn_depth.*                   | backbone.block8.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv2.block.bn_point.*                   | backbone.block8.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv2.block.depthwise.weight             | backbone.block8.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block8.sep_conv2.block.pointwise.weight             | backbone.block8.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block8.sep_conv3.block.bn_depth.*                   | backbone.block8.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv3.block.bn_point.*                   | backbone.block8.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block8.sep_conv3.block.depthwise.weight             | backbone.block8.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block8.sep_conv3.block.pointwise.weight             | backbone.block8.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block9.sep_conv1.block.bn_depth.*                   | backbone.block9.sep_conv1.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv1.block.bn_point.*                   | backbone.block9.sep_conv1.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv1.block.depthwise.weight             | backbone.block9.sep_conv1.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block9.sep_conv1.block.pointwise.weight             | backbone.block9.sep_conv1.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block9.sep_conv2.block.bn_depth.*                   | backbone.block9.sep_conv2.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv2.block.bn_point.*                   | backbone.block9.sep_conv2.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv2.block.depthwise.weight             | backbone.block9.sep_conv2.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block9.sep_conv2.block.pointwise.weight             | backbone.block9.sep_conv2.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.block9.sep_conv3.block.bn_depth.*                   | backbone.block9.sep_conv3.block.bn_depth.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv3.block.bn_point.*                   | backbone.block9.sep_conv3.block.bn_point.{bias,num_batches_tracked,running_mean,running_var,weight}                                                   | (728,) () (728,) (728,) (728,)                  |
| backbone.block9.sep_conv3.block.depthwise.weight             | backbone.block9.sep_conv3.block.depthwise.weight                                                                                                      | (728, 1, 3, 3)                                  |
| backbone.block9.sep_conv3.block.pointwise.weight             | backbone.block9.sep_conv3.block.pointwise.weight                                                                                                      | (728, 728, 1, 1)                                |
| backbone.bn1.*                                               | backbone.bn1.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                               | (32,) () (32,) (32,) (32,)                      |
| backbone.bn2.*                                               | backbone.bn2.{bias,num_batches_tracked,running_mean,running_var,weight}                                                                               | (64,) () (64,) (64,) (64,)                      |
| backbone.conv1.weight                                        | backbone.conv1.weight                                                                                                                                 | (32, 3, 3, 3)                                   |
| backbone.conv2.weight                                        | backbone.conv2.weight                                                                                                                                 | (64, 32, 3, 3)                                  |
| ins_embed_head.center_head.0.*                               | ins_embed_head.center_head.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                               | (128,) () (128,) (128,) (128,) (128,128,3,3)    |
| ins_embed_head.center_head.1.*                               | ins_embed_head.center_head.1.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                               | (32,) () (32,) (32,) (32,) (32,128,3,3)         |
| ins_embed_head.center_predictor.*                            | ins_embed_head.center_predictor.{bias,weight}                                                                                                         | (1,) (1,32,1,1)                                 |
| ins_embed_head.decoder.res2.fuse_conv.depthwise.*            | ins_embed_head.decoder.res2.fuse_conv.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (160,) () (160,) (160,) (160,) (160,1,5,5)      |
| ins_embed_head.decoder.res2.fuse_conv.pointwise.*            | ins_embed_head.decoder.res2.fuse_conv.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (128,) () (128,) (128,) (128,) (128,160,1,1)    |
| ins_embed_head.decoder.res2.project_conv.*                   | ins_embed_head.decoder.res2.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                   | (32,) () (32,) (32,) (32,) (32,256,1,1)         |
| ins_embed_head.decoder.res3.fuse_conv.depthwise.*            | ins_embed_head.decoder.res3.fuse_conv.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (320,) () (320,) (320,) (320,) (320,1,5,5)      |
| ins_embed_head.decoder.res3.fuse_conv.pointwise.*            | ins_embed_head.decoder.res3.fuse_conv.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}            | (128,) () (128,) (128,) (128,) (128,320,1,1)    |
| ins_embed_head.decoder.res3.project_conv.*                   | ins_embed_head.decoder.res3.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                   | (64,) () (64,) (64,) (64,) (64,728,1,1)         |
| ins_embed_head.decoder.res5.project_conv.convs.0.*           | ins_embed_head.decoder.res5.project_conv.convs.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}           | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| ins_embed_head.decoder.res5.project_conv.convs.1.depthwise.* | ins_embed_head.decoder.res5.project_conv.convs.1.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| ins_embed_head.decoder.res5.project_conv.convs.1.pointwise.* | ins_embed_head.decoder.res5.project_conv.convs.1.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| ins_embed_head.decoder.res5.project_conv.convs.2.depthwise.* | ins_embed_head.decoder.res5.project_conv.convs.2.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| ins_embed_head.decoder.res5.project_conv.convs.2.pointwise.* | ins_embed_head.decoder.res5.project_conv.convs.2.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| ins_embed_head.decoder.res5.project_conv.convs.3.depthwise.* | ins_embed_head.decoder.res5.project_conv.convs.3.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| ins_embed_head.decoder.res5.project_conv.convs.3.pointwise.* | ins_embed_head.decoder.res5.project_conv.convs.3.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| ins_embed_head.decoder.res5.project_conv.convs.4.1.*         | ins_embed_head.decoder.res5.project_conv.convs.4.1.{bias,weight}                                                                                      | (256,) (256,2048,1,1)                           |
| ins_embed_head.decoder.res5.project_conv.project.*           | ins_embed_head.decoder.res5.project_conv.project.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}           | (256,) () (256,) (256,) (256,) (256,1280,1,1)   |
| ins_embed_head.offset_head.depthwise.*                       | ins_embed_head.offset_head.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                       | (128,) () (128,) (128,) (128,) (128,1,5,5)      |
| ins_embed_head.offset_head.pointwise.*                       | ins_embed_head.offset_head.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                       | (32,) () (32,) (32,) (32,) (32,128,1,1)         |
| ins_embed_head.offset_predictor.*                            | ins_embed_head.offset_predictor.{bias,weight}                                                                                                         | (2,) (2,32,1,1)                                 |
| sem_seg_head.decoder.res2.fuse_conv.depthwise.*              | sem_seg_head.decoder.res2.fuse_conv.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}              | (288,) () (288,) (288,) (288,) (288,1,5,5)      |
| sem_seg_head.decoder.res2.fuse_conv.pointwise.*              | sem_seg_head.decoder.res2.fuse_conv.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}              | (256,) () (256,) (256,) (256,) (256,288,1,1)    |
| sem_seg_head.decoder.res2.project_conv.*                     | sem_seg_head.decoder.res2.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                     | (32,) () (32,) (32,) (32,) (32,256,1,1)         |
| sem_seg_head.decoder.res3.fuse_conv.depthwise.*              | sem_seg_head.decoder.res3.fuse_conv.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}              | (320,) () (320,) (320,) (320,) (320,1,5,5)      |
| sem_seg_head.decoder.res3.fuse_conv.pointwise.*              | sem_seg_head.decoder.res3.fuse_conv.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}              | (256,) () (256,) (256,) (256,) (256,320,1,1)    |
| sem_seg_head.decoder.res3.project_conv.*                     | sem_seg_head.decoder.res3.project_conv.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                     | (64,) () (64,) (64,) (64,) (64,728,1,1)         |
| sem_seg_head.decoder.res5.project_conv.convs.0.*             | sem_seg_head.decoder.res5.project_conv.convs.0.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}             | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| sem_seg_head.decoder.res5.project_conv.convs.1.depthwise.*   | sem_seg_head.decoder.res5.project_conv.convs.1.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| sem_seg_head.decoder.res5.project_conv.convs.1.pointwise.*   | sem_seg_head.decoder.res5.project_conv.convs.1.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| sem_seg_head.decoder.res5.project_conv.convs.2.depthwise.*   | sem_seg_head.decoder.res5.project_conv.convs.2.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| sem_seg_head.decoder.res5.project_conv.convs.2.pointwise.*   | sem_seg_head.decoder.res5.project_conv.convs.2.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| sem_seg_head.decoder.res5.project_conv.convs.3.depthwise.*   | sem_seg_head.decoder.res5.project_conv.convs.3.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (2048,) () (2048,) (2048,) (2048,) (2048,1,3,3) |
| sem_seg_head.decoder.res5.project_conv.convs.3.pointwise.*   | sem_seg_head.decoder.res5.project_conv.convs.3.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) () (256,) (256,) (256,) (256,2048,1,1)   |
| sem_seg_head.decoder.res5.project_conv.convs.4.1.*           | sem_seg_head.decoder.res5.project_conv.convs.4.1.{bias,weight}                                                                                        | (256,) (256,2048,1,1)                           |
| sem_seg_head.decoder.res5.project_conv.project.*             | sem_seg_head.decoder.res5.project_conv.project.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}             | (256,) () (256,) (256,) (256,) (256,1280,1,1)   |
| sem_seg_head.head.depthwise.*                                | sem_seg_head.head.depthwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                                | (256,) () (256,) (256,) (256,) (256,1,5,5)      |
| sem_seg_head.head.pointwise.*                                | sem_seg_head.head.pointwise.{norm.bias,norm.num_batches_tracked,norm.running_mean,norm.running_var,norm.weight,weight}                                | (256,) () (256,) (256,) (256,) (256,256,1,1)    |
| sem_seg_head.predictor.*                                     | sem_seg_head.predictor.{bias,weight}                                                                                                                  | (19,) (19,256,1,1)                              |
[32m[05/29 18:23:22 d2.data.datasets.cityscapes_panoptic]: [0m3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[32m[05/29 18:23:22 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2048, sample_style='choice')]
[32m[05/29 18:23:22 d2.data.common]: [0mSerializing 500 elements to byte tensors and concatenating them all ...
[32m[05/29 18:23:22 d2.data.common]: [0mSerialized dataset takes 0.74 MiB
[32m[05/29 18:23:22 d2.evaluation.evaluator]: [0mStart inference on 500 batches
[32m[05/29 18:23:22 d2.evaluation.cityscapes_evaluation]: [0mWriting cityscapes results to temporary directory /tmp/cityscapes_eval_si_pkx13 ...
[32m[05/29 18:23:22 d2.evaluation.cityscapes_evaluation]: [0mWriting cityscapes results to temporary directory /tmp/cityscapes_eval_bqnwj8sx ...
[32m[05/29 18:23:43 d2.evaluation.evaluator]: [0mInference done 11/500. Dataloading: 0.0055 s/iter. Inference: 0.7965 s/iter. Eval: 0.8949 s/iter. Total: 1.6969 s/iter. ETA=0:13:49
[32m[05/29 18:23:48 d2.evaluation.evaluator]: [0mInference done 15/500. Dataloading: 0.0058 s/iter. Inference: 0.7335 s/iter. Eval: 0.8477 s/iter. Total: 1.5871 s/iter. ETA=0:12:49
[32m[05/29 18:23:53 d2.evaluation.evaluator]: [0mInference done 18/500. Dataloading: 0.0059 s/iter. Inference: 0.7056 s/iter. Eval: 0.9086 s/iter. Total: 1.6201 s/iter. ETA=0:13:00
[32m[05/29 18:23:59 d2.evaluation.evaluator]: [0mInference done 22/500. Dataloading: 0.0060 s/iter. Inference: 0.6563 s/iter. Eval: 0.8800 s/iter. Total: 1.5424 s/iter. ETA=0:12:17
[32m[05/29 18:24:06 d2.evaluation.evaluator]: [0mInference done 26/500. Dataloading: 0.0062 s/iter. Inference: 0.6979 s/iter. Eval: 0.8854 s/iter. Total: 1.5896 s/iter. ETA=0:12:33
[32m[05/29 18:24:12 d2.evaluation.evaluator]: [0mInference done 30/500. Dataloading: 0.0062 s/iter. Inference: 0.6687 s/iter. Eval: 0.8990 s/iter. Total: 1.5740 s/iter. ETA=0:12:19
[32m[05/29 18:24:17 d2.evaluation.evaluator]: [0mInference done 34/500. Dataloading: 0.0063 s/iter. Inference: 0.6597 s/iter. Eval: 0.8856 s/iter. Total: 1.5517 s/iter. ETA=0:12:03
[32m[05/29 18:24:25 d2.evaluation.evaluator]: [0mInference done 38/500. Dataloading: 0.0063 s/iter. Inference: 0.6444 s/iter. Eval: 0.9300 s/iter. Total: 1.5808 s/iter. ETA=0:12:10
[32m[05/29 18:24:30 d2.evaluation.evaluator]: [0mInference done 41/500. Dataloading: 0.0063 s/iter. Inference: 0.6339 s/iter. Eval: 0.9503 s/iter. Total: 1.5906 s/iter. ETA=0:12:10
[32m[05/29 18:24:35 d2.evaluation.evaluator]: [0mInference done 44/500. Dataloading: 0.0064 s/iter. Inference: 0.6302 s/iter. Eval: 0.9719 s/iter. Total: 1.6087 s/iter. ETA=0:12:13
[32m[05/29 18:24:41 d2.evaluation.evaluator]: [0mInference done 47/500. Dataloading: 0.0065 s/iter. Inference: 0.6236 s/iter. Eval: 0.9954 s/iter. Total: 1.6256 s/iter. ETA=0:12:16
[32m[05/29 18:24:47 d2.evaluation.evaluator]: [0mInference done 51/500. Dataloading: 0.0065 s/iter. Inference: 0.6152 s/iter. Eval: 0.9919 s/iter. Total: 1.6137 s/iter. ETA=0:12:04
[32m[05/29 18:24:54 d2.evaluation.evaluator]: [0mInference done 54/500. Dataloading: 0.0145 s/iter. Inference: 0.6413 s/iter. Eval: 1.0114 s/iter. Total: 1.6673 s/iter. ETA=0:12:23
[32m[05/29 18:25:00 d2.evaluation.evaluator]: [0mInference done 57/500. Dataloading: 0.0140 s/iter. Inference: 0.6760 s/iter. Eval: 0.9932 s/iter. Total: 1.6833 s/iter. ETA=0:12:25
[32m[05/29 18:25:06 d2.evaluation.evaluator]: [0mInference done 61/500. Dataloading: 0.0134 s/iter. Inference: 0.6647 s/iter. Eval: 0.9931 s/iter. Total: 1.6712 s/iter. ETA=0:12:13
[32m[05/29 18:25:13 d2.evaluation.evaluator]: [0mInference done 63/500. Dataloading: 0.0131 s/iter. Inference: 0.7029 s/iter. Eval: 1.0119 s/iter. Total: 1.7281 s/iter. ETA=0:12:35
[32m[05/29 18:25:19 d2.evaluation.evaluator]: [0mInference done 67/500. Dataloading: 0.0127 s/iter. Inference: 0.6903 s/iter. Eval: 1.0102 s/iter. Total: 1.7133 s/iter. ETA=0:12:21
[32m[05/29 18:25:24 d2.evaluation.evaluator]: [0mInference done 70/500. Dataloading: 0.0124 s/iter. Inference: 0.6823 s/iter. Eval: 1.0214 s/iter. Total: 1.7163 s/iter. ETA=0:12:17
[32m[05/29 18:25:30 d2.evaluation.evaluator]: [0mInference done 74/500. Dataloading: 0.0121 s/iter. Inference: 0.6743 s/iter. Eval: 1.0172 s/iter. Total: 1.7037 s/iter. ETA=0:12:05
[32m[05/29 18:25:37 d2.evaluation.evaluator]: [0mInference done 77/500. Dataloading: 0.0119 s/iter. Inference: 0.6681 s/iter. Eval: 1.0439 s/iter. Total: 1.7240 s/iter. ETA=0:12:09
[32m[05/29 18:25:42 d2.evaluation.evaluator]: [0mInference done 80/500. Dataloading: 0.0117 s/iter. Inference: 0.6635 s/iter. Eval: 1.0574 s/iter. Total: 1.7327 s/iter. ETA=0:12:07
[32m[05/29 18:25:48 d2.evaluation.evaluator]: [0mInference done 83/500. Dataloading: 0.0115 s/iter. Inference: 0.6597 s/iter. Eval: 1.0620 s/iter. Total: 1.7333 s/iter. ETA=0:12:02
[32m[05/29 18:25:55 d2.evaluation.evaluator]: [0mInference done 86/500. Dataloading: 0.0113 s/iter. Inference: 0.6922 s/iter. Eval: 1.0618 s/iter. Total: 1.7654 s/iter. ETA=0:12:10
[32m[05/29 18:26:01 d2.evaluation.evaluator]: [0mInference done 89/500. Dataloading: 0.0112 s/iter. Inference: 0.6892 s/iter. Eval: 1.0696 s/iter. Total: 1.7701 s/iter. ETA=0:12:07
[32m[05/29 18:26:06 d2.evaluation.evaluator]: [0mInference done 92/500. Dataloading: 0.0110 s/iter. Inference: 0.6828 s/iter. Eval: 1.0749 s/iter. Total: 1.7688 s/iter. ETA=0:12:01
[32m[05/29 18:26:14 d2.evaluation.evaluator]: [0mInference done 95/500. Dataloading: 0.0109 s/iter. Inference: 0.7038 s/iter. Eval: 1.0772 s/iter. Total: 1.7920 s/iter. ETA=0:12:05
[32m[05/29 18:26:20 d2.evaluation.evaluator]: [0mInference done 99/500. Dataloading: 0.0107 s/iter. Inference: 0.6997 s/iter. Eval: 1.0748 s/iter. Total: 1.7853 s/iter. ETA=0:11:55
[32m[05/29 18:26:26 d2.evaluation.evaluator]: [0mInference done 102/500. Dataloading: 0.0106 s/iter. Inference: 0.6951 s/iter. Eval: 1.0803 s/iter. Total: 1.7861 s/iter. ETA=0:11:50
[32m[05/29 18:26:31 d2.evaluation.evaluator]: [0mInference done 106/500. Dataloading: 0.0104 s/iter. Inference: 0.7074 s/iter. Eval: 1.0535 s/iter. Total: 1.7714 s/iter. ETA=0:11:37
[32m[05/29 18:26:37 d2.evaluation.evaluator]: [0mInference done 110/500. Dataloading: 0.0103 s/iter. Inference: 0.7164 s/iter. Eval: 1.0331 s/iter. Total: 1.7599 s/iter. ETA=0:11:26
[32m[05/29 18:26:42 d2.evaluation.evaluator]: [0mInference done 113/500. Dataloading: 0.0135 s/iter. Inference: 0.7272 s/iter. Eval: 1.0168 s/iter. Total: 1.7576 s/iter. ETA=0:11:20
[32m[05/29 18:26:48 d2.evaluation.evaluator]: [0mInference done 116/500. Dataloading: 0.0133 s/iter. Inference: 0.7216 s/iter. Eval: 1.0232 s/iter. Total: 1.7583 s/iter. ETA=0:11:15
[32m[05/29 18:26:54 d2.evaluation.evaluator]: [0mInference done 119/500. Dataloading: 0.0139 s/iter. Inference: 0.7287 s/iter. Eval: 1.0230 s/iter. Total: 1.7657 s/iter. ETA=0:11:12
[32m[05/29 18:27:00 d2.evaluation.evaluator]: [0mInference done 123/500. Dataloading: 0.0136 s/iter. Inference: 0.7226 s/iter. Eval: 1.0195 s/iter. Total: 1.7558 s/iter. ETA=0:11:01
[32m[05/29 18:27:05 d2.evaluation.evaluator]: [0mInference done 127/500. Dataloading: 0.0134 s/iter. Inference: 0.7169 s/iter. Eval: 1.0147 s/iter. Total: 1.7451 s/iter. ETA=0:10:50
[32m[05/29 18:27:12 d2.evaluation.evaluator]: [0mInference done 131/500. Dataloading: 0.0132 s/iter. Inference: 0.7105 s/iter. Eval: 1.0213 s/iter. Total: 1.7451 s/iter. ETA=0:10:43
[32m[05/29 18:27:18 d2.evaluation.evaluator]: [0mInference done 134/500. Dataloading: 0.0131 s/iter. Inference: 0.7223 s/iter. Eval: 1.0139 s/iter. Total: 1.7493 s/iter. ETA=0:10:40
[32m[05/29 18:27:23 d2.evaluation.evaluator]: [0mInference done 137/500. Dataloading: 0.0129 s/iter. Inference: 0.7185 s/iter. Eval: 1.0188 s/iter. Total: 1.7504 s/iter. ETA=0:10:35
[32m[05/29 18:27:30 d2.evaluation.evaluator]: [0mInference done 141/500. Dataloading: 0.0127 s/iter. Inference: 0.7149 s/iter. Eval: 1.0223 s/iter. Total: 1.7500 s/iter. ETA=0:10:28
[32m[05/29 18:27:37 d2.evaluation.evaluator]: [0mInference done 144/500. Dataloading: 0.0126 s/iter. Inference: 0.7275 s/iter. Eval: 1.0164 s/iter. Total: 1.7566 s/iter. ETA=0:10:25
[32m[05/29 18:27:42 d2.evaluation.evaluator]: [0mInference done 148/500. Dataloading: 0.0124 s/iter. Inference: 0.7219 s/iter. Eval: 1.0131 s/iter. Total: 1.7476 s/iter. ETA=0:10:15
[32m[05/29 18:27:48 d2.evaluation.evaluator]: [0mInference done 152/500. Dataloading: 0.0123 s/iter. Inference: 0.7288 s/iter. Eval: 0.9962 s/iter. Total: 1.7373 s/iter. ETA=0:10:04
[32m[05/29 18:27:53 d2.evaluation.evaluator]: [0mInference done 156/500. Dataloading: 0.0121 s/iter. Inference: 0.7231 s/iter. Eval: 0.9920 s/iter. Total: 1.7274 s/iter. ETA=0:09:54
[32m[05/29 18:28:00 d2.evaluation.evaluator]: [0mInference done 161/500. Dataloading: 0.0119 s/iter. Inference: 0.7159 s/iter. Eval: 0.9906 s/iter. Total: 1.7186 s/iter. ETA=0:09:42
[32m[05/29 18:28:06 d2.evaluation.evaluator]: [0mInference done 164/500. Dataloading: 0.0118 s/iter. Inference: 0.7135 s/iter. Eval: 0.9926 s/iter. Total: 1.7181 s/iter. ETA=0:09:37
[32m[05/29 18:28:11 d2.evaluation.evaluator]: [0mInference done 167/500. Dataloading: 0.0117 s/iter. Inference: 0.7106 s/iter. Eval: 0.9950 s/iter. Total: 1.7174 s/iter. ETA=0:09:31
[32m[05/29 18:28:16 d2.evaluation.evaluator]: [0mInference done 171/500. Dataloading: 0.0116 s/iter. Inference: 0.7056 s/iter. Eval: 0.9913 s/iter. Total: 1.7086 s/iter. ETA=0:09:22
[32m[05/29 18:28:22 d2.evaluation.evaluator]: [0mInference done 175/500. Dataloading: 0.0115 s/iter. Inference: 0.7006 s/iter. Eval: 0.9900 s/iter. Total: 1.7021 s/iter. ETA=0:09:13
[32m[05/29 18:28:28 d2.evaluation.evaluator]: [0mInference done 178/500. Dataloading: 0.0114 s/iter. Inference: 0.6975 s/iter. Eval: 1.0003 s/iter. Total: 1.7093 s/iter. ETA=0:09:10
[32m[05/29 18:28:34 d2.evaluation.evaluator]: [0mInference done 182/500. Dataloading: 0.0113 s/iter. Inference: 0.7046 s/iter. Eval: 0.9900 s/iter. Total: 1.7060 s/iter. ETA=0:09:02
[32m[05/29 18:28:40 d2.evaluation.evaluator]: [0mInference done 185/500. Dataloading: 0.0112 s/iter. Inference: 0.7021 s/iter. Eval: 0.9932 s/iter. Total: 1.7066 s/iter. ETA=0:08:57
[32m[05/29 18:28:47 d2.evaluation.evaluator]: [0mInference done 188/500. Dataloading: 0.0125 s/iter. Inference: 0.7090 s/iter. Eval: 0.9972 s/iter. Total: 1.7189 s/iter. ETA=0:08:56
[32m[05/29 18:28:52 d2.evaluation.evaluator]: [0mInference done 190/500. Dataloading: 0.0140 s/iter. Inference: 0.7090 s/iter. Eval: 1.0046 s/iter. Total: 1.7278 s/iter. ETA=0:08:55
[32m[05/29 18:28:58 d2.evaluation.evaluator]: [0mInference done 194/500. Dataloading: 0.0139 s/iter. Inference: 0.7050 s/iter. Eval: 1.0047 s/iter. Total: 1.7236 s/iter. ETA=0:08:47
[32m[05/29 18:29:04 d2.evaluation.evaluator]: [0mInference done 196/500. Dataloading: 0.0143 s/iter. Inference: 0.7143 s/iter. Eval: 1.0072 s/iter. Total: 1.7359 s/iter. ETA=0:08:47
[32m[05/29 18:29:11 d2.evaluation.evaluator]: [0mInference done 199/500. Dataloading: 0.0142 s/iter. Inference: 0.7126 s/iter. Eval: 1.0165 s/iter. Total: 1.7434 s/iter. ETA=0:08:44
[32m[05/29 18:29:16 d2.evaluation.evaluator]: [0mInference done 202/500. Dataloading: 0.0140 s/iter. Inference: 0.7102 s/iter. Eval: 1.0210 s/iter. Total: 1.7454 s/iter. ETA=0:08:40
[32m[05/29 18:29:21 d2.evaluation.evaluator]: [0mInference done 205/500. Dataloading: 0.0139 s/iter. Inference: 0.7078 s/iter. Eval: 1.0233 s/iter. Total: 1.7451 s/iter. ETA=0:08:34
[32m[05/29 18:29:28 d2.evaluation.evaluator]: [0mInference done 209/500. Dataloading: 0.0138 s/iter. Inference: 0.7051 s/iter. Eval: 1.0227 s/iter. Total: 1.7416 s/iter. ETA=0:08:26
[32m[05/29 18:29:33 d2.evaluation.evaluator]: [0mInference done 212/500. Dataloading: 0.0137 s/iter. Inference: 0.7044 s/iter. Eval: 1.0232 s/iter. Total: 1.7415 s/iter. ETA=0:08:21
[32m[05/29 18:29:39 d2.evaluation.evaluator]: [0mInference done 216/500. Dataloading: 0.0135 s/iter. Inference: 0.7011 s/iter. Eval: 1.0231 s/iter. Total: 1.7379 s/iter. ETA=0:08:13
[32m[05/29 18:29:45 d2.evaluation.evaluator]: [0mInference done 219/500. Dataloading: 0.0134 s/iter. Inference: 0.7064 s/iter. Eval: 1.0229 s/iter. Total: 1.7428 s/iter. ETA=0:08:09
[32m[05/29 18:29:51 d2.evaluation.evaluator]: [0mInference done 222/500. Dataloading: 0.0133 s/iter. Inference: 0.7042 s/iter. Eval: 1.0251 s/iter. Total: 1.7428 s/iter. ETA=0:08:04
[32m[05/29 18:29:57 d2.evaluation.evaluator]: [0mInference done 226/500. Dataloading: 0.0132 s/iter. Inference: 0.7013 s/iter. Eval: 1.0237 s/iter. Total: 1.7384 s/iter. ETA=0:07:56
[32m[05/29 18:30:02 d2.evaluation.evaluator]: [0mInference done 230/500. Dataloading: 0.0131 s/iter. Inference: 0.6980 s/iter. Eval: 1.0209 s/iter. Total: 1.7321 s/iter. ETA=0:07:47
[32m[05/29 18:30:09 d2.evaluation.evaluator]: [0mInference done 233/500. Dataloading: 0.0130 s/iter. Inference: 0.6970 s/iter. Eval: 1.0273 s/iter. Total: 1.7374 s/iter. ETA=0:07:43
[32m[05/29 18:30:14 d2.evaluation.evaluator]: [0mInference done 236/500. Dataloading: 0.0129 s/iter. Inference: 0.6957 s/iter. Eval: 1.0293 s/iter. Total: 1.7380 s/iter. ETA=0:07:38
[32m[05/29 18:30:20 d2.evaluation.evaluator]: [0mInference done 240/500. Dataloading: 0.0128 s/iter. Inference: 0.6923 s/iter. Eval: 1.0285 s/iter. Total: 1.7337 s/iter. ETA=0:07:30
[32m[05/29 18:30:25 d2.evaluation.evaluator]: [0mInference done 243/500. Dataloading: 0.0127 s/iter. Inference: 0.6903 s/iter. Eval: 1.0306 s/iter. Total: 1.7338 s/iter. ETA=0:07:25
[32m[05/29 18:30:30 d2.evaluation.evaluator]: [0mInference done 247/500. Dataloading: 0.0126 s/iter. Inference: 0.6879 s/iter. Eval: 1.0269 s/iter. Total: 1.7275 s/iter. ETA=0:07:17
[32m[05/29 18:30:38 d2.evaluation.evaluator]: [0mInference done 251/500. Dataloading: 0.0125 s/iter. Inference: 0.6854 s/iter. Eval: 1.0309 s/iter. Total: 1.7289 s/iter. ETA=0:07:10
[32m[05/29 18:30:43 d2.evaluation.evaluator]: [0mInference done 254/500. Dataloading: 0.0124 s/iter. Inference: 0.6841 s/iter. Eval: 1.0331 s/iter. Total: 1.7297 s/iter. ETA=0:07:05
[32m[05/29 18:30:49 d2.evaluation.evaluator]: [0mInference done 258/500. Dataloading: 0.0124 s/iter. Inference: 0.6807 s/iter. Eval: 1.0316 s/iter. Total: 1.7248 s/iter. ETA=0:06:57
[32m[05/29 18:30:54 d2.evaluation.evaluator]: [0mInference done 261/500. Dataloading: 0.0127 s/iter. Inference: 0.6830 s/iter. Eval: 1.0295 s/iter. Total: 1.7252 s/iter. ETA=0:06:52
[32m[05/29 18:30:59 d2.evaluation.evaluator]: [0mInference done 264/500. Dataloading: 0.0126 s/iter. Inference: 0.6872 s/iter. Eval: 1.0258 s/iter. Total: 1.7257 s/iter. ETA=0:06:47
[32m[05/29 18:31:06 d2.evaluation.evaluator]: [0mInference done 268/500. Dataloading: 0.0125 s/iter. Inference: 0.6851 s/iter. Eval: 1.0280 s/iter. Total: 1.7257 s/iter. ETA=0:06:40
[32m[05/29 18:31:12 d2.evaluation.evaluator]: [0mInference done 272/500. Dataloading: 0.0135 s/iter. Inference: 0.6846 s/iter. Eval: 1.0231 s/iter. Total: 1.7212 s/iter. ETA=0:06:32
[32m[05/29 18:31:17 d2.evaluation.evaluator]: [0mInference done 276/500. Dataloading: 0.0134 s/iter. Inference: 0.6826 s/iter. Eval: 1.0199 s/iter. Total: 1.7160 s/iter. ETA=0:06:24
[32m[05/29 18:31:23 d2.evaluation.evaluator]: [0mInference done 281/500. Dataloading: 0.0132 s/iter. Inference: 0.6793 s/iter. Eval: 1.0141 s/iter. Total: 1.7068 s/iter. ETA=0:06:13
[32m[05/29 18:31:29 d2.evaluation.evaluator]: [0mInference done 285/500. Dataloading: 0.0131 s/iter. Inference: 0.6774 s/iter. Eval: 1.0107 s/iter. Total: 1.7014 s/iter. ETA=0:06:05
[32m[05/29 18:31:34 d2.evaluation.evaluator]: [0mInference done 290/500. Dataloading: 0.0130 s/iter. Inference: 0.6744 s/iter. Eval: 1.0025 s/iter. Total: 1.6901 s/iter. ETA=0:05:54
[32m[05/29 18:31:39 d2.evaluation.evaluator]: [0mInference done 294/500. Dataloading: 0.0129 s/iter. Inference: 0.6737 s/iter. Eval: 0.9986 s/iter. Total: 1.6854 s/iter. ETA=0:05:47
[32m[05/29 18:31:45 d2.evaluation.evaluator]: [0mInference done 299/500. Dataloading: 0.0128 s/iter. Inference: 0.6711 s/iter. Eval: 0.9929 s/iter. Total: 1.6770 s/iter. ETA=0:05:37
[32m[05/29 18:31:51 d2.evaluation.evaluator]: [0mInference done 303/500. Dataloading: 0.0127 s/iter. Inference: 0.6743 s/iter. Eval: 0.9867 s/iter. Total: 1.6739 s/iter. ETA=0:05:29
[32m[05/29 18:31:56 d2.evaluation.evaluator]: [0mInference done 307/500. Dataloading: 0.0126 s/iter. Inference: 0.6720 s/iter. Eval: 0.9844 s/iter. Total: 1.6692 s/iter. ETA=0:05:22
[32m[05/29 18:32:02 d2.evaluation.evaluator]: [0mInference done 312/500. Dataloading: 0.0125 s/iter. Inference: 0.6691 s/iter. Eval: 0.9785 s/iter. Total: 1.6603 s/iter. ETA=0:05:12
[32m[05/29 18:32:08 d2.evaluation.evaluator]: [0mInference done 316/500. Dataloading: 0.0125 s/iter. Inference: 0.6737 s/iter. Eval: 0.9703 s/iter. Total: 1.6565 s/iter. ETA=0:05:04
[32m[05/29 18:32:13 d2.evaluation.evaluator]: [0mInference done 321/500. Dataloading: 0.0124 s/iter. Inference: 0.6740 s/iter. Eval: 0.9625 s/iter. Total: 1.6491 s/iter. ETA=0:04:55
[32m[05/29 18:32:19 d2.evaluation.evaluator]: [0mInference done 325/500. Dataloading: 0.0123 s/iter. Inference: 0.6720 s/iter. Eval: 0.9603 s/iter. Total: 1.6447 s/iter. ETA=0:04:47
[32m[05/29 18:32:24 d2.evaluation.evaluator]: [0mInference done 329/500. Dataloading: 0.0122 s/iter. Inference: 0.6706 s/iter. Eval: 0.9580 s/iter. Total: 1.6410 s/iter. ETA=0:04:40
[32m[05/29 18:32:29 d2.evaluation.evaluator]: [0mInference done 333/500. Dataloading: 0.0122 s/iter. Inference: 0.6688 s/iter. Eval: 0.9562 s/iter. Total: 1.6373 s/iter. ETA=0:04:33
[32m[05/29 18:32:37 d2.evaluation.evaluator]: [0mInference done 337/500. Dataloading: 0.0121 s/iter. Inference: 0.6669 s/iter. Eval: 0.9627 s/iter. Total: 1.6418 s/iter. ETA=0:04:27
[32m[05/29 18:32:43 d2.evaluation.evaluator]: [0mInference done 340/500. Dataloading: 0.0120 s/iter. Inference: 0.6660 s/iter. Eval: 0.9649 s/iter. Total: 1.6430 s/iter. ETA=0:04:22
[32m[05/29 18:32:48 d2.evaluation.evaluator]: [0mInference done 343/500. Dataloading: 0.0120 s/iter. Inference: 0.6647 s/iter. Eval: 0.9675 s/iter. Total: 1.6443 s/iter. ETA=0:04:18
[32m[05/29 18:32:55 d2.evaluation.evaluator]: [0mInference done 346/500. Dataloading: 0.0119 s/iter. Inference: 0.6637 s/iter. Eval: 0.9728 s/iter. Total: 1.6485 s/iter. ETA=0:04:13
[32m[05/29 18:33:00 d2.evaluation.evaluator]: [0mInference done 349/500. Dataloading: 0.0119 s/iter. Inference: 0.6629 s/iter. Eval: 0.9740 s/iter. Total: 1.6489 s/iter. ETA=0:04:08
[32m[05/29 18:33:06 d2.evaluation.evaluator]: [0mInference done 353/500. Dataloading: 0.0118 s/iter. Inference: 0.6626 s/iter. Eval: 0.9734 s/iter. Total: 1.6480 s/iter. ETA=0:04:02
[32m[05/29 18:33:12 d2.evaluation.evaluator]: [0mInference done 356/500. Dataloading: 0.0118 s/iter. Inference: 0.6675 s/iter. Eval: 0.9708 s/iter. Total: 1.6503 s/iter. ETA=0:03:57
[32m[05/29 18:33:18 d2.evaluation.evaluator]: [0mInference done 359/500. Dataloading: 0.0117 s/iter. Inference: 0.6726 s/iter. Eval: 0.9706 s/iter. Total: 1.6550 s/iter. ETA=0:03:53
[32m[05/29 18:33:24 d2.evaluation.evaluator]: [0mInference done 362/500. Dataloading: 0.0119 s/iter. Inference: 0.6759 s/iter. Eval: 0.9704 s/iter. Total: 1.6584 s/iter. ETA=0:03:48
[32m[05/29 18:33:31 d2.evaluation.evaluator]: [0mInference done 366/500. Dataloading: 0.0119 s/iter. Inference: 0.6743 s/iter. Eval: 0.9707 s/iter. Total: 1.6570 s/iter. ETA=0:03:42
[32m[05/29 18:33:38 d2.evaluation.evaluator]: [0mInference done 369/500. Dataloading: 0.0118 s/iter. Inference: 0.6744 s/iter. Eval: 0.9779 s/iter. Total: 1.6642 s/iter. ETA=0:03:38
[32m[05/29 18:33:44 d2.evaluation.evaluator]: [0mInference done 373/500. Dataloading: 0.0118 s/iter. Inference: 0.6727 s/iter. Eval: 0.9778 s/iter. Total: 1.6624 s/iter. ETA=0:03:31
[32m[05/29 18:33:51 d2.evaluation.evaluator]: [0mInference done 376/500. Dataloading: 0.0117 s/iter. Inference: 0.6718 s/iter. Eval: 0.9844 s/iter. Total: 1.6681 s/iter. ETA=0:03:26
[32m[05/29 18:33:57 d2.evaluation.evaluator]: [0mInference done 379/500. Dataloading: 0.0117 s/iter. Inference: 0.6709 s/iter. Eval: 0.9876 s/iter. Total: 1.6703 s/iter. ETA=0:03:22
[32m[05/29 18:34:03 d2.evaluation.evaluator]: [0mInference done 382/500. Dataloading: 0.0116 s/iter. Inference: 0.6700 s/iter. Eval: 0.9903 s/iter. Total: 1.6720 s/iter. ETA=0:03:17
[32m[05/29 18:34:09 d2.evaluation.evaluator]: [0mInference done 384/500. Dataloading: 0.0116 s/iter. Inference: 0.6741 s/iter. Eval: 0.9932 s/iter. Total: 1.6791 s/iter. ETA=0:03:14
[32m[05/29 18:34:14 d2.evaluation.evaluator]: [0mInference done 387/500. Dataloading: 0.0116 s/iter. Inference: 0.6733 s/iter. Eval: 0.9947 s/iter. Total: 1.6797 s/iter. ETA=0:03:09
[32m[05/29 18:34:19 d2.evaluation.evaluator]: [0mInference done 390/500. Dataloading: 0.0115 s/iter. Inference: 0.6724 s/iter. Eval: 0.9963 s/iter. Total: 1.6804 s/iter. ETA=0:03:04
[32m[05/29 18:34:25 d2.evaluation.evaluator]: [0mInference done 394/500. Dataloading: 0.0115 s/iter. Inference: 0.6711 s/iter. Eval: 0.9947 s/iter. Total: 1.6774 s/iter. ETA=0:02:57
[32m[05/29 18:34:31 d2.evaluation.evaluator]: [0mInference done 397/500. Dataloading: 0.0114 s/iter. Inference: 0.6706 s/iter. Eval: 0.9991 s/iter. Total: 1.6812 s/iter. ETA=0:02:53
[32m[05/29 18:34:37 d2.evaluation.evaluator]: [0mInference done 400/500. Dataloading: 0.0114 s/iter. Inference: 0.6698 s/iter. Eval: 1.0005 s/iter. Total: 1.6818 s/iter. ETA=0:02:48
[32m[05/29 18:34:42 d2.evaluation.evaluator]: [0mInference done 404/500. Dataloading: 0.0114 s/iter. Inference: 0.6678 s/iter. Eval: 0.9993 s/iter. Total: 1.6786 s/iter. ETA=0:02:41
[32m[05/29 18:34:49 d2.evaluation.evaluator]: [0mInference done 408/500. Dataloading: 0.0113 s/iter. Inference: 0.6663 s/iter. Eval: 1.0018 s/iter. Total: 1.6795 s/iter. ETA=0:02:34
[32m[05/29 18:34:55 d2.evaluation.evaluator]: [0mInference done 412/500. Dataloading: 0.0113 s/iter. Inference: 0.6655 s/iter. Eval: 1.0005 s/iter. Total: 1.6773 s/iter. ETA=0:02:27
[32m[05/29 18:35:01 d2.evaluation.evaluator]: [0mInference done 416/500. Dataloading: 0.0112 s/iter. Inference: 0.6643 s/iter. Eval: 1.0002 s/iter. Total: 1.6758 s/iter. ETA=0:02:20
[32m[05/29 18:35:08 d2.evaluation.evaluator]: [0mInference done 419/500. Dataloading: 0.0112 s/iter. Inference: 0.6651 s/iter. Eval: 1.0040 s/iter. Total: 1.6805 s/iter. ETA=0:02:16
[32m[05/29 18:35:14 d2.evaluation.evaluator]: [0mInference done 423/500. Dataloading: 0.0111 s/iter. Inference: 0.6637 s/iter. Eval: 1.0029 s/iter. Total: 1.6779 s/iter. ETA=0:02:09
[32m[05/29 18:35:19 d2.evaluation.evaluator]: [0mInference done 426/500. Dataloading: 0.0113 s/iter. Inference: 0.6678 s/iter. Eval: 1.0004 s/iter. Total: 1.6796 s/iter. ETA=0:02:04
[32m[05/29 18:35:25 d2.evaluation.evaluator]: [0mInference done 430/500. Dataloading: 0.0113 s/iter. Inference: 0.6663 s/iter. Eval: 0.9985 s/iter. Total: 1.6762 s/iter. ETA=0:01:57
[32m[05/29 18:35:30 d2.evaluation.evaluator]: [0mInference done 434/500. Dataloading: 0.0112 s/iter. Inference: 0.6645 s/iter. Eval: 0.9978 s/iter. Total: 1.6737 s/iter. ETA=0:01:50
[32m[05/29 18:35:36 d2.evaluation.evaluator]: [0mInference done 438/500. Dataloading: 0.0112 s/iter. Inference: 0.6632 s/iter. Eval: 0.9963 s/iter. Total: 1.6708 s/iter. ETA=0:01:43
[32m[05/29 18:35:41 d2.evaluation.evaluator]: [0mInference done 442/500. Dataloading: 0.0111 s/iter. Inference: 0.6619 s/iter. Eval: 0.9940 s/iter. Total: 1.6672 s/iter. ETA=0:01:36
[32m[05/29 18:35:47 d2.evaluation.evaluator]: [0mInference done 446/500. Dataloading: 0.0111 s/iter. Inference: 0.6611 s/iter. Eval: 0.9925 s/iter. Total: 1.6648 s/iter. ETA=0:01:29
[32m[05/29 18:35:53 d2.evaluation.evaluator]: [0mInference done 450/500. Dataloading: 0.0111 s/iter. Inference: 0.6639 s/iter. Eval: 0.9900 s/iter. Total: 1.6651 s/iter. ETA=0:01:23
[32m[05/29 18:35:59 d2.evaluation.evaluator]: [0mInference done 454/500. Dataloading: 0.0110 s/iter. Inference: 0.6670 s/iter. Eval: 0.9853 s/iter. Total: 1.6635 s/iter. ETA=0:01:16
[32m[05/29 18:36:05 d2.evaluation.evaluator]: [0mInference done 458/500. Dataloading: 0.0110 s/iter. Inference: 0.6660 s/iter. Eval: 0.9840 s/iter. Total: 1.6611 s/iter. ETA=0:01:09
[32m[05/29 18:36:10 d2.evaluation.evaluator]: [0mInference done 462/500. Dataloading: 0.0109 s/iter. Inference: 0.6650 s/iter. Eval: 0.9819 s/iter. Total: 1.6580 s/iter. ETA=0:01:03
[32m[05/29 18:36:18 d2.evaluation.evaluator]: [0mInference done 466/500. Dataloading: 0.0109 s/iter. Inference: 0.6639 s/iter. Eval: 0.9851 s/iter. Total: 1.6600 s/iter. ETA=0:00:56
[32m[05/29 18:36:23 d2.evaluation.evaluator]: [0mInference done 469/500. Dataloading: 0.0109 s/iter. Inference: 0.6634 s/iter. Eval: 0.9873 s/iter. Total: 1.6617 s/iter. ETA=0:00:51
[32m[05/29 18:36:30 d2.evaluation.evaluator]: [0mInference done 472/500. Dataloading: 0.0108 s/iter. Inference: 0.6628 s/iter. Eval: 0.9922 s/iter. Total: 1.6659 s/iter. ETA=0:00:46
[32m[05/29 18:36:36 d2.evaluation.evaluator]: [0mInference done 475/500. Dataloading: 0.0108 s/iter. Inference: 0.6620 s/iter. Eval: 0.9941 s/iter. Total: 1.6670 s/iter. ETA=0:00:41
[32m[05/29 18:36:41 d2.evaluation.evaluator]: [0mInference done 478/500. Dataloading: 0.0108 s/iter. Inference: 0.6619 s/iter. Eval: 0.9950 s/iter. Total: 1.6678 s/iter. ETA=0:00:36
[32m[05/29 18:36:47 d2.evaluation.evaluator]: [0mInference done 481/500. Dataloading: 0.0109 s/iter. Inference: 0.6656 s/iter. Eval: 0.9929 s/iter. Total: 1.6696 s/iter. ETA=0:00:31
[32m[05/29 18:36:54 d2.evaluation.evaluator]: [0mInference done 485/500. Dataloading: 0.0109 s/iter. Inference: 0.6645 s/iter. Eval: 0.9951 s/iter. Total: 1.6706 s/iter. ETA=0:00:25
[32m[05/29 18:37:00 d2.evaluation.evaluator]: [0mInference done 490/500. Dataloading: 0.0108 s/iter. Inference: 0.6626 s/iter. Eval: 0.9916 s/iter. Total: 1.6652 s/iter. ETA=0:00:16
[32m[05/29 18:37:07 d2.evaluation.evaluator]: [0mInference done 494/500. Dataloading: 0.0108 s/iter. Inference: 0.6619 s/iter. Eval: 0.9926 s/iter. Total: 1.6653 s/iter. ETA=0:00:09
[32m[05/29 18:37:14 d2.evaluation.evaluator]: [0mInference done 498/500. Dataloading: 0.0112 s/iter. Inference: 0.6634 s/iter. Eval: 0.9917 s/iter. Total: 1.6664 s/iter. ETA=0:00:03
[32m[05/29 18:37:16 d2.evaluation.evaluator]: [0mTotal inference time: 0:13:43.569617 (1.663777 s / iter per device, on 1 devices)
[32m[05/29 18:37:16 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:05:28 (0.662767 s / iter per device, on 1 devices)
[32m[05/29 18:37:16 d2.evaluation.panoptic_evaluation]: [0mWriting all panoptic predictions to /tmp/panoptic_evalbwpvr62h ...
[32m[05/29 18:38:44 d2.evaluation.panoptic_evaluation]: [0mPanoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 53.884 | 77.992 | 67.377 |      19       |
| Things | 41.387 | 75.666 | 54.299 |       8       |
| Stuff  | 62.973 | 79.683 | 76.888 |      11       |
[32m[05/29 18:38:44 d2.evaluation.cityscapes_evaluation]: [0mEvaluating results under /tmp/cityscapes_eval_si_pkx13 ...
Evaluating 500 pairs of images...
Images Processed: 1 Images Processed: 2 Images Processed: 3 Images Processed: 4 Images Processed: 5 Images Processed: 6 Images Processed: 7 Images Processed: 8 Images Processed: 9 Images Processed: 10 Images Processed: 11 Images Processed: 12 Images Processed: 13 Images Processed: 14 Images Processed: 15 Images Processed: 16 Images Processed: 17 Images Processed: 18 Images Processed: 19 Images Processed: 20 Images Processed: 21 Images Processed: 22 Images Processed: 23 Images Processed: 24 Images Processed: 25 Images Processed: 26 Images Processed: 27 Images Processed: 28 Images Processed: 29 Images Processed: 30 Images Processed: 31 Images Processed: 32 Images Processed: 33 Images Processed: 34 Images Processed: 35 Images Processed: 36 Images Processed: 37 Images Processed: 38 Images Processed: 39 Images Processed: 40 Images Processed: 41 Images Processed: 42 Images Processed: 43 Images Processed: 44 Images Processed: 45 Images Processed: 46 Images Processed: 47 Images Processed: 48 Images Processed: 49 Images Processed: 50 Images Processed: 51 Images Processed: 52 Images Processed: 53 Images Processed: 54 Images Processed: 55 Images Processed: 56 Images Processed: 57 Images Processed: 58 Images Processed: 59 Images Processed: 60 Images Processed: 61 Images Processed: 62 Images Processed: 63 Images Processed: 64 Images Processed: 65 Images Processed: 66 Images Processed: 67 Images Processed: 68 Images Processed: 69 Images Processed: 70 Images Processed: 71 Images Processed: 72 Images Processed: 73 Images Processed: 74 Images Processed: 75 Images Processed: 76 Images Processed: 77 Images Processed: 78 Images Processed: 79 Images Processed: 80 Images Processed: 81 Images Processed: 82 Images Processed: 83 Images Processed: 84 Images Processed: 85 Images Processed: 86 Images Processed: 87 Images Processed: 88 Images Processed: 89 Images Processed: 90 Images Processed: 91 Images Processed: 92 Images Processed: 93 Images Processed: 94 Images Processed: 95 Images Processed: 96 Images Processed: 97 Images Processed: 98 Images Processed: 99 Images Processed: 100 Images Processed: 101 Images Processed: 102 Images Processed: 103 Images Processed: 104 Images Processed: 105 Images Processed: 106 Images Processed: 107 Images Processed: 108 Images Processed: 109 Images Processed: 110 Images Processed: 111 Images Processed: 112 Images Processed: 113 Images Processed: 114 Images Processed: 115 Images Processed: 116 Images Processed: 117 Images Processed: 118 Images Processed: 119 Images Processed: 120 Images Processed: 121 Images Processed: 122 Images Processed: 123 Images Processed: 124 Images Processed: 125 Images Processed: 126 Images Processed: 127 Images Processed: 128 Images Processed: 129 Images Processed: 130 Images Processed: 131 Images Processed: 132 Images Processed: 133 Images Processed: 134 Images Processed: 135 Images Processed: 136 Images Processed: 137 Images Processed: 138 Images Processed: 139 Images Processed: 140 Images Processed: 141 Images Processed: 142 Images Processed: 143 Images Processed: 144 Images Processed: 145 Images Processed: 146 Images Processed: 147 Images Processed: 148 Images Processed: 149 Images Processed: 150 Images Processed: 151 Images Processed: 152 Images Processed: 153 Images Processed: 154 Images Processed: 155 Images Processed: 156 Images Processed: 157 Images Processed: 158 Images Processed: 159 Images Processed: 160 Images Processed: 161 Images Processed: 162 Images Processed: 163 Images Processed: 164 Images Processed: 165 Images Processed: 166 Images Processed: 167 Images Processed: 168 Images Processed: 169 Images Processed: 170 Images Processed: 171 Images Processed: 172 Images Processed: 173 Images Processed: 174 Images Processed: 175 Images Processed: 176 Images Processed: 177 Images Processed: 178 Images Processed: 179 Images Processed: 180 Images Processed: 181 Images Processed: 182 Images Processed: 183 Images Processed: 184 Images Processed: 185 Images Processed: 186 Images Processed: 187 Images Processed: 188 Images Processed: 189 Images Processed: 190 Images Processed: 191 Images Processed: 192 Images Processed: 193 Images Processed: 194 Images Processed: 195 Images Processed: 196 Images Processed: 197 Images Processed: 198 Images Processed: 199 Images Processed: 200 Images Processed: 201 Images Processed: 202 Images Processed: 203 Images Processed: 204 Images Processed: 205 Images Processed: 206 Images Processed: 207 Images Processed: 208 Images Processed: 209 Images Processed: 210 Images Processed: 211 Images Processed: 212 Images Processed: 213 Images Processed: 214 Images Processed: 215 Images Processed: 216 Images Processed: 217 Images Processed: 218 Images Processed: 219 Images Processed: 220 Images Processed: 221 Images Processed: 222 Images Processed: 223 Images Processed: 224 Images Processed: 225 Images Processed: 226 Images Processed: 227 Images Processed: 228 Images Processed: 229 Images Processed: 230 Images Processed: 231 Images Processed: 232 Images Processed: 233 Images Processed: 234 Images Processed: 235 Images Processed: 236 Images Processed: 237 Images Processed: 238 Images Processed: 239 Images Processed: 240 Images Processed: 241 Images Processed: 242 Images Processed: 243 Images Processed: 244 Images Processed: 245 Images Processed: 246 Images Processed: 247 Images Processed: 248 Images Processed: 249 Images Processed: 250 Images Processed: 251 Images Processed: 252 Images Processed: 253 Images Processed: 254 Images Processed: 255 Images Processed: 256 Images Processed: 257 Images Processed: 258 Images Processed: 259 Images Processed: 260 Images Processed: 261 Images Processed: 262 Images Processed: 263 Images Processed: 264 Images Processed: 265 Images Processed: 266 Images Processed: 267 Images Processed: 268 Images Processed: 269 Images Processed: 270 Images Processed: 271 Images Processed: 272 Images Processed: 273 Images Processed: 274 Images Processed: 275 Images Processed: 276 Images Processed: 277 Images Processed: 278 Images Processed: 279 Images Processed: 280 Images Processed: 281 Images Processed: 282 Images Processed: 283 Images Processed: 284 Images Processed: 285 Images Processed: 286 Images Processed: 287 Images Processed: 288 Images Processed: 289 Images Processed: 290 Images Processed: 291 Images Processed: 292 Images Processed: 293 Images Processed: 294 Images Processed: 295 Images Processed: 296 Images Processed: 297 Images Processed: 298 Images Processed: 299 Images Processed: 300 Images Processed: 301 Images Processed: 302 Images Processed: 303 Images Processed: 304 Images Processed: 305 Images Processed: 306 Images Processed: 307 Images Processed: 308 Images Processed: 309 Images Processed: 310 Images Processed: 311 Images Processed: 312 Images Processed: 313 Images Processed: 314 Images Processed: 315 Images Processed: 316 Images Processed: 317 Images Processed: 318 Images Processed: 319 Images Processed: 320 Images Processed: 321 Images Processed: 322 Images Processed: 323 Images Processed: 324 Images Processed: 325 Images Processed: 326 Images Processed: 327 Images Processed: 328 Images Processed: 329 Images Processed: 330 Images Processed: 331 Images Processed: 332 Images Processed: 333 Images Processed: 334 Images Processed: 335 Images Processed: 336 Images Processed: 337 Images Processed: 338 Images Processed: 339 Images Processed: 340 Images Processed: 341 Images Processed: 342 Images Processed: 343 Images Processed: 344 Images Processed: 345 Images Processed: 346 Images Processed: 347 Images Processed: 348 Images Processed: 349 Images Processed: 350 Images Processed: 351 Images Processed: 352 Images Processed: 353 Images Processed: 354 Images Processed: 355 Images Processed: 356 Images Processed: 357 Images Processed: 358 Images Processed: 359 Images Processed: 360 Images Processed: 361 Images Processed: 362 Images Processed: 363 Images Processed: 364 Images Processed: 365 Images Processed: 366 Images Processed: 367 Images Processed: 368 Images Processed: 369 Images Processed: 370 Images Processed: 371 Images Processed: 372 Images Processed: 373 Images Processed: 374 Images Processed: 375 Images Processed: 376 Images Processed: 377 Images Processed: 378 Images Processed: 379 Images Processed: 380 Images Processed: 381 Images Processed: 382 Images Processed: 383 Images Processed: 384 Images Processed: 385 Images Processed: 386 Images Processed: 387 Images Processed: 388 Images Processed: 389 Images Processed: 390 Images Processed: 391 Images Processed: 392 Images Processed: 393 Images Processed: 394 Images Processed: 395 Images Processed: 396 Images Processed: 397 Images Processed: 398 Images Processed: 399 Images Processed: 400 Images Processed: 401 Images Processed: 402 Images Processed: 403 Images Processed: 404 Images Processed: 405 Images Processed: 406 Images Processed: 407 Images Processed: 408 Images Processed: 409 Images Processed: 410 Images Processed: 411 Images Processed: 412 Images Processed: 413 Images Processed: 414 Images Processed: 415 Images Processed: 416 Images Processed: 417 Images Processed: 418 Images Processed: 419 Images Processed: 420 Images Processed: 421 Images Processed: 422 Images Processed: 423 Images Processed: 424 Images Processed: 425 Images Processed: 426 Images Processed: 427 Images Processed: 428 Images Processed: 429 Images Processed: 430 Images Processed: 431 Images Processed: 432 Images Processed: 433 Images Processed: 434 Images Processed: 435 Images Processed: 436 Images Processed: 437 Images Processed: 438 Images Processed: 439 Images Processed: 440 Images Processed: 441 Images Processed: 442 Images Processed: 443 Images Processed: 444 Images Processed: 445 Images Processed: 446 Images Processed: 447 Images Processed: 448 Images Processed: 449 Images Processed: 450 Images Processed: 451 Images Processed: 452 Images Processed: 453 Images Processed: 454 Images Processed: 455 Images Processed: 456 Images Processed: 457 Images Processed: 458 Images Processed: 459 Images Processed: 460 Images Processed: 461 Images Processed: 462 Images Processed: 463 Images Processed: 464 Images Processed: 465 Images Processed: 466 Images Processed: 467 Images Processed: 468 Images Processed: 469 Images Processed: 470 Images Processed: 471 Images Processed: 472 Images Processed: 473 Images Processed: 474 Images Processed: 475 Images Processed: 476 Images Processed: 477 Images Processed: 478 Images Processed: 479 Images Processed: 480 Images Processed: 481 Images Processed: 482 Images Processed: 483 Images Processed: 484 Images Processed: 485 Images Processed: 486 Images Processed: 487 Images Processed: 488 Images Processed: 489 Images Processed: 490 Images Processed: 491 Images Processed: 492 Images Processed: 493 Images Processed: 494 Images Processed: 495 Images Processed: 496 Images Processed: 497 Images Processed: 498 Images Processed: 499 Images Processed: 500 

--------------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------- 
              |   u   |   e   |   r   |   o   |   s   |   d   |   g   |   r   |   s   |   p   |   r   |   b   |   w   |   f   |   g   |   b   |   t   |   p   |   p   |   t   |   t   |   v   |   t   |   s   |   p   |   r   |   c   |   t   |   b   |   c   |   t   |   t   |   m   |   b   |  Prior |
--------------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------- 
    unlabeled |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.08    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.02    0.00    0.88    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0004 
  ego vehicle |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.36    0.01    0.00    0.00    0.26    0.05    0.18    0.00    0.00    0.00    0.01    0.00    0.00    0.01    0.07    0.00    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.01    0.00    0.00   0.0490 
rectification |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.10    0.01    0.00    0.00    0.28    0.03    0.45    0.00    0.00    0.00    0.01    0.00    0.00    0.01    0.07    0.00    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00   0.0189 
   out of roi |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.17    0.03    0.00    0.00    0.37    0.02    0.10    0.00    0.00    0.00    0.01    0.00    0.00    0.01    0.17    0.00    0.07    0.00    0.00    0.04    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0151 
       static |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.04    0.00    0.00    0.46    0.08    0.06    0.00    0.00    0.00    0.08    0.00    0.01    0.08    0.10    0.00    0.01    0.02    0.00    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.02   0.0149 
      dynamic |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.06    0.00    0.00    0.47    0.06    0.05    0.00    0.00    0.00    0.03    0.00    0.00    0.02    0.05    0.00    0.01    0.14    0.00    0.04    0.01    0.00    0.00    0.00    0.00    0.01    0.05   0.0042 
       ground |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.47    0.45    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.02    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0178 
         road |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.99    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.3293 
     sidewalk |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.07    0.90    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0473 
      parking |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.55    0.40    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0040 
   rail track |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.79    0.16    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0006 
     building |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.95    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.1917 
         wall |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.03    0.00    0.00    0.17    0.62    0.04    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.11    0.00    0.00    0.01    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0064 
        fence |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.01    0.00    0.00    0.12    0.09    0.67    0.00    0.00    0.00    0.02    0.00    0.00    0.01    0.05    0.00    0.00    0.01    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.01   0.0072 
   guard rail |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.06    0.00    0.00    0.00    0.00    0.00    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.59    0.25    0.00    0.00    0.00    0.07    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0000 
       bridge |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.83    0.00    0.01    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.13    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0003 
         pole |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.02    0.00    0.00    0.12    0.00    0.01    0.00    0.00    0.00    0.70    0.00    0.01    0.01    0.08    0.00    0.01    0.01    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.01   0.0129 
    polegroup |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.08    0.00    0.00    0.17    0.01    0.19    0.00    0.00    0.00    0.35    0.00    0.00    0.00    0.05    0.02    0.00    0.04    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.06   0.0001 
traffic light |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.12    0.00    0.00    0.00    0.00    0.00    0.05    0.00    0.70    0.01    0.10    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0017 
 traffic sign |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.08    0.00    0.02    0.00    0.00    0.00    0.01    0.00    0.00    0.84    0.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0058 
   vegetation |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.97    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.1515 
      terrain |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.02    0.08    0.00    0.00    0.00    0.01    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.16    0.70    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0073 
          sky |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.97    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   0.0293 
       person |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.01    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.93    0.01    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.01   0.0114 
        rider |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.10    0.74    0.02    0.00    0.00    0.00    0.00    0.00    0.01    0.10   0.0019 
          car |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.96    0.01    0.00    0.00    0.00    0.00    0.00    0.00   0.0570 
        truck |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.04    0.91    0.00    0.00    0.00    0.00    0.00    0.00   0.0026 
          bus |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.00    0.01    0.03    0.90    0.00    0.00    0.02    0.00    0.00   0.0034 
      caravan |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.01    0.00    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.03    0.00    0.00    0.00    0.00    0.18    0.75    0.00    0.00    0.00    0.00    0.01    0.00   0.0001 
      trailer |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.15    0.01    0.00    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.34    0.41    0.00    0.00    0.00    0.00    0.03    0.01   0.0002 
        train |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.06    0.00    0.01    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.03    0.00    0.01    0.00    0.00    0.00    0.00    0.07    0.00    0.00    0.81    0.00    0.00   0.0010 
   motorcycle |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.02    0.00    0.02    0.00    0.00    0.00    0.01    0.00    0.00    0.00    0.01    0.00    0.00    0.04    0.03    0.05    0.00    0.00    0.00    0.00    0.00    0.71    0.11   0.0007 
      bicycle |  0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.01    0.00    0.00    0.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.01    0.00    0.00    0.02    0.02    0.01    0.00    0.00    0.00    0.00    0.00    0.00    0.89   0.0062 
--------------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  ------  -------  

classes          IoU      nIoU
--------------------------------
road          : 0.977      nan
sidewalk      : 0.826      nan
building      : 0.918      nan
wall          : 0.504      nan
fence         : 0.584      nan
pole          : 0.605      nan
traffic light : 0.626      nan
traffic sign  : 0.748      nan
vegetation    : 0.915      nan
terrain       : 0.622      nan
sky           : 0.943      nan
person        : 0.813    0.695
rider         : 0.617    0.436
car           : 0.937    0.902
truck         : 0.685    0.346
bus           : 0.829    0.625
train         : 0.718    0.542
motorcycle    : 0.622    0.396
bicycle       : 0.752    0.636
--------------------------------
Score Average : 0.749    0.572
--------------------------------


categories       IoU      nIoU
--------------------------------
flat          : 0.986      nan
construction  : 0.921      nan
object        : 0.673      nan
nature        : 0.919      nan
sky           : 0.943      nan
human         : 0.819    0.710
vehicle       : 0.933    0.881
--------------------------------
Score Average : 0.885    0.796
--------------------------------

[32m[05/29 18:40:34 d2.evaluation.cityscapes_evaluation]: [0mEvaluating results under /tmp/cityscapes_eval_bqnwj8sx ...
Creating ground truth instances from png files.
Processing 500 images...
Images Processed: 1 Images Processed: 2 Images Processed: 3 Images Processed: 4 Images Processed: 5 Images Processed: 6 Images Processed: 7 Images Processed: 8 Images Processed: 9 Images Processed: 10 Images Processed: 11 Images Processed: 12 Images Processed: 13 Images Processed: 14 Images Processed: 15 Images Processed: 16 Images Processed: 17 Images Processed: 18 Images Processed: 19 Images Processed: 20 Images Processed: 21 Images Processed: 22 Images Processed: 23 Images Processed: 24 Images Processed: 25 Images Processed: 26 Images Processed: 27 Images Processed: 28 Images Processed: 29 Images Processed: 30 Images Processed: 31 Images Processed: 32 Images Processed: 33 Images Processed: 34 Images Processed: 35 Images Processed: 36 Images Processed: 37 Images Processed: 38 Images Processed: 39 Images Processed: 40 Images Processed: 41 Images Processed: 42 Images Processed: 43 Images Processed: 44 Images Processed: 45 Images Processed: 46 Images Processed: 47 Images Processed: 48 Images Processed: 49 Images Processed: 50 Images Processed: 51 Images Processed: 52 Images Processed: 53 Images Processed: 54 Images Processed: 55 Images Processed: 56 Images Processed: 57 Images Processed: 58 Images Processed: 59 Images Processed: 60 Images Processed: 61 Images Processed: 62 Images Processed: 63 Images Processed: 64 Images Processed: 65 Images Processed: 66 Images Processed: 67 Images Processed: 68 Images Processed: 69 Images Processed: 70 Images Processed: 71 Images Processed: 72 Images Processed: 73 Images Processed: 74 Images Processed: 75 Images Processed: 76 Images Processed: 77 Images Processed: 78 Images Processed: 79 Images Processed: 80 Images Processed: 81 Images Processed: 82 Images Processed: 83 Images Processed: 84 Images Processed: 85 Images Processed: 86 Images Processed: 87 Images Processed: 88 Images Processed: 89 Images Processed: 90 Images Processed: 91 Images Processed: 92 Images Processed: 93 Images Processed: 94 Images Processed: 95 Images Processed: 96 Images Processed: 97 Images Processed: 98 Images Processed: 99 Images Processed: 100 Images Processed: 101 Images Processed: 102 Images Processed: 103 Images Processed: 104 Images Processed: 105 Images Processed: 106 Images Processed: 107 Images Processed: 108 Images Processed: 109 Images Processed: 110 Images Processed: 111 Images Processed: 112 Images Processed: 113 Images Processed: 114 Images Processed: 115 Images Processed: 116 Images Processed: 117 Images Processed: 118 Images Processed: 119 Images Processed: 120 Images Processed: 121 Images Processed: 122 Images Processed: 123 Images Processed: 124 Images Processed: 125 Images Processed: 126 Images Processed: 127 Images Processed: 128 Images Processed: 129 Images Processed: 130 Images Processed: 131 Images Processed: 132 Images Processed: 133 Images Processed: 134 Images Processed: 135 Images Processed: 136 Images Processed: 137 Images Processed: 138 Images Processed: 139 Images Processed: 140 Images Processed: 141 Images Processed: 142 Images Processed: 143 Images Processed: 144 Images Processed: 145 Images Processed: 146 Images Processed: 147 Images Processed: 148 Images Processed: 149 Images Processed: 150 Images Processed: 151 Images Processed: 152 Images Processed: 153 Images Processed: 154 Images Processed: 155 Images Processed: 156 Images Processed: 157 Images Processed: 158 Images Processed: 159 Images Processed: 160 Images Processed: 161 Images Processed: 162 Images Processed: 163 Images Processed: 164 Images Processed: 165 Images Processed: 166 Images Processed: 167 Images Processed: 168 Images Processed: 169 Images Processed: 170 Images Processed: 171 Images Processed: 172 Images Processed: 173 Images Processed: 174 Images Processed: 175 Images Processed: 176 Images Processed: 177 Images Processed: 178 Images Processed: 179 Images Processed: 180 Images Processed: 181 Images Processed: 182 Images Processed: 183 Images Processed: 184 Images Processed: 185 Images Processed: 186 Images Processed: 187 Images Processed: 188 Images Processed: 189 Images Processed: 190 Images Processed: 191 Images Processed: 192 Images Processed: 193 Images Processed: 194 Images Processed: 195 Images Processed: 196 Images Processed: 197 Images Processed: 198 Images Processed: 199 Images Processed: 200 Images Processed: 201 Images Processed: 202 Images Processed: 203 Images Processed: 204 Images Processed: 205 Images Processed: 206 Images Processed: 207 Images Processed: 208 Images Processed: 209 Images Processed: 210 Images Processed: 211 Images Processed: 212 Images Processed: 213 Images Processed: 214 Images Processed: 215 Images Processed: 216 Images Processed: 217 Images Processed: 218 Images Processed: 219 Images Processed: 220 Images Processed: 221 Images Processed: 222 Images Processed: 223 Images Processed: 224 Images Processed: 225 Images Processed: 226 Images Processed: 227 Images Processed: 228 Images Processed: 229 Images Processed: 230 Images Processed: 231 Images Processed: 232 Images Processed: 233 Images Processed: 234 Images Processed: 235 Images Processed: 236 Images Processed: 237 Images Processed: 238 Images Processed: 239 Images Processed: 240 Images Processed: 241 Images Processed: 242 Images Processed: 243 Images Processed: 244 Images Processed: 245 Images Processed: 246 Images Processed: 247 Images Processed: 248 Images Processed: 249 Images Processed: 250 Images Processed: 251 Images Processed: 252 Images Processed: 253 Images Processed: 254 Images Processed: 255 Images Processed: 256 Images Processed: 257 Images Processed: 258 Images Processed: 259 Images Processed: 260 Images Processed: 261 Images Processed: 262 Images Processed: 263 Images Processed: 264 Images Processed: 265 Images Processed: 266 Images Processed: 267 Images Processed: 268 Images Processed: 269 Images Processed: 270 Images Processed: 271 Images Processed: 272 Images Processed: 273 Images Processed: 274 Images Processed: 275 Images Processed: 276 Images Processed: 277 Images Processed: 278 Images Processed: 279 Images Processed: 280 Images Processed: 281 Images Processed: 282 Images Processed: 283 Images Processed: 284 Images Processed: 285 Images Processed: 286 Images Processed: 287 Images Processed: 288 Images Processed: 289 Images Processed: 290 Images Processed: 291 Images Processed: 292 Images Processed: 293 Images Processed: 294 Images Processed: 295 Images Processed: 296 Images Processed: 297 Images Processed: 298 Images Processed: 299 Images Processed: 300 Images Processed: 301 Images Processed: 302 Images Processed: 303 Images Processed: 304 Images Processed: 305 Images Processed: 306 Images Processed: 307 Images Processed: 308 Images Processed: 309 Images Processed: 310 Images Processed: 311 Images Processed: 312 Images Processed: 313 Images Processed: 314 Images Processed: 315 Images Processed: 316 Images Processed: 317 Images Processed: 318 Images Processed: 319 Images Processed: 320 Images Processed: 321 Images Processed: 322 Images Processed: 323 Images Processed: 324 Images Processed: 325 Images Processed: 326 Images Processed: 327 Images Processed: 328 Images Processed: 329 Images Processed: 330 Images Processed: 331 Images Processed: 332 Images Processed: 333 Images Processed: 334 Images Processed: 335 Images Processed: 336 Images Processed: 337 Images Processed: 338 Images Processed: 339 Images Processed: 340 Images Processed: 341 Images Processed: 342 Images Processed: 343 Images Processed: 344 Images Processed: 345 Images Processed: 346 Images Processed: 347 Images Processed: 348 Images Processed: 349 Images Processed: 350 Images Processed: 351 Images Processed: 352 Images Processed: 353 Images Processed: 354 Images Processed: 355 Images Processed: 356 Images Processed: 357 Images Processed: 358 Images Processed: 359 Images Processed: 360 Images Processed: 361 Images Processed: 362 Images Processed: 363 Images Processed: 364 Images Processed: 365 Images Processed: 366 Images Processed: 367 Images Processed: 368 Images Processed: 369 Images Processed: 370 Images Processed: 371 Images Processed: 372 Images Processed: 373 Images Processed: 374 Images Processed: 375 Images Processed: 376 Images Processed: 377 Images Processed: 378 Images Processed: 379 Images Processed: 380 Images Processed: 381 Images Processed: 382 Images Processed: 383 Images Processed: 384 Images Processed: 385 Images Processed: 386 Images Processed: 387 Images Processed: 388 Images Processed: 389 Images Processed: 390 Images Processed: 391 Images Processed: 392 Images Processed: 393 Images Processed: 394 Images Processed: 395 Images Processed: 396 Images Processed: 397 Images Processed: 398 Images Processed: 399 Images Processed: 400 Images Processed: 401 Images Processed: 402 Images Processed: 403 Images Processed: 404 Images Processed: 405 Images Processed: 406 Images Processed: 407 Images Processed: 408 Images Processed: 409 Images Processed: 410 Images Processed: 411 Images Processed: 412 Images Processed: 413 Images Processed: 414 Images Processed: 415 Images Processed: 416 Images Processed: 417 Images Processed: 418 Images Processed: 419 Images Processed: 420 Images Processed: 421 Images Processed: 422 Images Processed: 423 Images Processed: 424 Images Processed: 425 Images Processed: 426 Images Processed: 427 Images Processed: 428 Images Processed: 429 Images Processed: 430 Images Processed: 431 Images Processed: 432 Images Processed: 433 Images Processed: 434 Images Processed: 435 Images Processed: 436 Images Processed: 437 Images Processed: 438 Images Processed: 439 Images Processed: 440 Images Processed: 441 Images Processed: 442 Images Processed: 443 Images Processed: 444 Images Processed: 445 Images Processed: 446 Images Processed: 447 Images Processed: 448 Images Processed: 449 Images Processed: 450 Images Processed: 451 Images Processed: 452 Images Processed: 453 Images Processed: 454 Images Processed: 455 Images Processed: 456 Images Processed: 457 Images Processed: 458 Images Processed: 459 Images Processed: 460 Images Processed: 461 Images Processed: 462 Images Processed: 463 Images Processed: 464 Images Processed: 465 Images Processed: 466 Images Processed: 467 Images Processed: 468 Images Processed: 469 Images Processed: 470 Images Processed: 471 Images Processed: 472 Images Processed: 473 Images Processed: 474 Images Processed: 475 Images Processed: 476 Images Processed: 477 Images Processed: 478 Images Processed: 479 Images Processed: 480 Images Processed: 481 Images Processed: 482 Images Processed: 483 Images Processed: 484 Images Processed: 485 Images Processed: 486 Images Processed: 487 Images Processed: 488 Images Processed: 489 Images Processed: 490 Images Processed: 491 Images Processed: 492 Images Processed: 493 Images Processed: 494 Images Processed: 495 Images Processed: 496 Images Processed: 497 Images Processed: 498 Images Processed: 499 Images Processed: 500 
Matching 500 pairs of images...
Images Processed: 1 Images Processed: 2 Images Processed: 3 Images Processed: 4 Images Processed: 5 Images Processed: 6 Images Processed: 7 Images Processed: 8 Images Processed: 9 Images Processed: 10 Images Processed: 11 Images Processed: 12 Images Processed: 13 Images Processed: 14 Images Processed: 15 Images Processed: 16 Images Processed: 17 Images Processed: 18 Images Processed: 19 Images Processed: 20 Images Processed: 21 Images Processed: 22 Images Processed: 23 Images Processed: 24 Images Processed: 25 Images Processed: 26 Images Processed: 27 Images Processed: 28 Images Processed: 29 Images Processed: 30 Images Processed: 31 Images Processed: 32 Images Processed: 33 Images Processed: 34 Images Processed: 35 Images Processed: 36 Images Processed: 37 Images Processed: 38 Images Processed: 39 Images Processed: 40 Images Processed: 41 Images Processed: 42 Images Processed: 43 Images Processed: 44 Images Processed: 45 Images Processed: 46 Images Processed: 47 Images Processed: 48 Images Processed: 49 Images Processed: 50 Images Processed: 51 Images Processed: 52 Images Processed: 53 Images Processed: 54 Images Processed: 55 Images Processed: 56 Images Processed: 57 Images Processed: 58 Images Processed: 59 Images Processed: 60 Images Processed: 61 Images Processed: 62 Images Processed: 63 Images Processed: 64 Images Processed: 65 Images Processed: 66 Images Processed: 67 Images Processed: 68 Images Processed: 69 Images Processed: 70 Images Processed: 71 Images Processed: 72 Images Processed: 73 Images Processed: 74 Images Processed: 75 Images Processed: 76 Images Processed: 77 Images Processed: 78 Images Processed: 79 Images Processed: 80 Images Processed: 81 Images Processed: 82 Images Processed: 83 Images Processed: 84 Images Processed: 85 Images Processed: 86 Images Processed: 87 Images Processed: 88 Images Processed: 89 Images Processed: 90 Images Processed: 91 Images Processed: 92 Images Processed: 93 Images Processed: 94 Images Processed: 95 Images Processed: 96 Images Processed: 97 Images Processed: 98 Images Processed: 99 Images Processed: 100 Images Processed: 101 Images Processed: 102 Images Processed: 103 Images Processed: 104 Images Processed: 105 Images Processed: 106 Images Processed: 107 Images Processed: 108 Images Processed: 109 Images Processed: 110 Images Processed: 111 Images Processed: 112 Images Processed: 113 Images Processed: 114 Images Processed: 115 Images Processed: 116 Images Processed: 117 Images Processed: 118 Images Processed: 119 Images Processed: 120 Images Processed: 121 Images Processed: 122 Images Processed: 123 Images Processed: 124 Images Processed: 125 Images Processed: 126 Images Processed: 127 Images Processed: 128 Images Processed: 129 Images Processed: 130 Images Processed: 131 Images Processed: 132 Images Processed: 133 Images Processed: 134 Images Processed: 135 Images Processed: 136 Images Processed: 137 Images Processed: 138 Images Processed: 139 Images Processed: 140 Images Processed: 141 Images Processed: 142 Images Processed: 143 Images Processed: 144 Images Processed: 145 Images Processed: 146 Images Processed: 147 Images Processed: 148 Images Processed: 149 Images Processed: 150 Images Processed: 151 Images Processed: 152 Images Processed: 153 Images Processed: 154 Images Processed: 155 Images Processed: 156 Images Processed: 157 Images Processed: 158 Images Processed: 159 Images Processed: 160 Images Processed: 161 Images Processed: 162 Images Processed: 163 Images Processed: 164 Images Processed: 165 Images Processed: 166 Images Processed: 167 Images Processed: 168 Images Processed: 169 Images Processed: 170 Images Processed: 171 Images Processed: 172 Images Processed: 173 Images Processed: 174 Images Processed: 175 Images Processed: 176 Images Processed: 177 Images Processed: 178 Images Processed: 179 Images Processed: 180 Images Processed: 181 Images Processed: 182 Images Processed: 183 Images Processed: 184 Images Processed: 185 Images Processed: 186 Images Processed: 187 Images Processed: 188 Images Processed: 189 Images Processed: 190 Images Processed: 191 Images Processed: 192 Images Processed: 193 Images Processed: 194 Images Processed: 195 Images Processed: 196 Images Processed: 197 Images Processed: 198 Images Processed: 199 Images Processed: 200 Images Processed: 201 Images Processed: 202 Images Processed: 203 Images Processed: 204 Images Processed: 205 Images Processed: 206 Images Processed: 207 Images Processed: 208 Images Processed: 209 Images Processed: 210 Images Processed: 211 Images Processed: 212 Images Processed: 213 Images Processed: 214 Images Processed: 215 Images Processed: 216 Images Processed: 217 Images Processed: 218 Images Processed: 219 Images Processed: 220 Images Processed: 221 Images Processed: 222 Images Processed: 223 Images Processed: 224 Images Processed: 225 Images Processed: 226 Images Processed: 227 Images Processed: 228 Images Processed: 229 Images Processed: 230 Images Processed: 231 Images Processed: 232 Images Processed: 233 Images Processed: 234 Images Processed: 235 Images Processed: 236 Images Processed: 237 Images Processed: 238 Images Processed: 239 Images Processed: 240 Images Processed: 241 Images Processed: 242 Images Processed: 243 Images Processed: 244 Images Processed: 245 Images Processed: 246 Images Processed: 247 Images Processed: 248 Images Processed: 249 Images Processed: 250 Images Processed: 251 Images Processed: 252 Images Processed: 253 Images Processed: 254 Images Processed: 255 Images Processed: 256 Images Processed: 257 Images Processed: 258 Images Processed: 259 Images Processed: 260 Images Processed: 261 Images Processed: 262 Images Processed: 263 Images Processed: 264 Images Processed: 265 Images Processed: 266 Images Processed: 267 Images Processed: 268 Images Processed: 269 Images Processed: 270 Images Processed: 271 Images Processed: 272 Images Processed: 273 Images Processed: 274 Images Processed: 275 Images Processed: 276 Images Processed: 277 Images Processed: 278 Images Processed: 279 Images Processed: 280 Images Processed: 281 Images Processed: 282 Images Processed: 283 Images Processed: 284 Images Processed: 285 Images Processed: 286 Images Processed: 287 Images Processed: 288 Images Processed: 289 Images Processed: 290 Images Processed: 291 Images Processed: 292 Images Processed: 293 Images Processed: 294 Images Processed: 295 Images Processed: 296 Images Processed: 297 Images Processed: 298 Images Processed: 299 Images Processed: 300 Images Processed: 301 Images Processed: 302 Images Processed: 303 Images Processed: 304 Images Processed: 305 Images Processed: 306 Images Processed: 307 Images Processed: 308 Images Processed: 309 Images Processed: 310 Images Processed: 311 Images Processed: 312 Images Processed: 313 Images Processed: 314 Images Processed: 315 Images Processed: 316 Images Processed: 317 Images Processed: 318 Images Processed: 319 Images Processed: 320 Images Processed: 321 Images Processed: 322 Images Processed: 323 Images Processed: 324 Images Processed: 325 Images Processed: 326 Images Processed: 327 Images Processed: 328 Images Processed: 329 Images Processed: 330 Images Processed: 331 Images Processed: 332 Images Processed: 333 Images Processed: 334 Images Processed: 335 Images Processed: 336 Images Processed: 337 Images Processed: 338 Images Processed: 339 Images Processed: 340 Images Processed: 341 Images Processed: 342 Images Processed: 343 Images Processed: 344 Images Processed: 345 Images Processed: 346 Images Processed: 347 Images Processed: 348 Images Processed: 349 Images Processed: 350 Images Processed: 351 Images Processed: 352 Images Processed: 353 Images Processed: 354 Images Processed: 355 Images Processed: 356 Images Processed: 357 Images Processed: 358 Images Processed: 359 Images Processed: 360 Images Processed: 361 Images Processed: 362 Images Processed: 363 Images Processed: 364 Images Processed: 365 Images Processed: 366 Images Processed: 367 Images Processed: 368 Images Processed: 369 Images Processed: 370 Images Processed: 371 Images Processed: 372 Images Processed: 373 Images Processed: 374 Images Processed: 375 Images Processed: 376 Images Processed: 377 Images Processed: 378 Images Processed: 379 Images Processed: 380 Images Processed: 381 Images Processed: 382 Images Processed: 383 Images Processed: 384 Images Processed: 385 Images Processed: 386 Images Processed: 387 Images Processed: 388 Images Processed: 389 Images Processed: 390 Images Processed: 391 Images Processed: 392 Images Processed: 393 Images Processed: 394 Images Processed: 395 Images Processed: 396 Images Processed: 397 Images Processed: 398 Images Processed: 399 Images Processed: 400 Images Processed: 401 Images Processed: 402 Images Processed: 403 Images Processed: 404 Images Processed: 405 Images Processed: 406 Images Processed: 407 Images Processed: 408 Images Processed: 409 Images Processed: 410 Images Processed: 411 Images Processed: 412 Images Processed: 413 Images Processed: 414 Images Processed: 415 Images Processed: 416 Images Processed: 417 Images Processed: 418 Images Processed: 419 Images Processed: 420 Images Processed: 421 Images Processed: 422 Images Processed: 423 Images Processed: 424 Images Processed: 425 Images Processed: 426 Images Processed: 427 Images Processed: 428 Images Processed: 429 Images Processed: 430 Images Processed: 431 Images Processed: 432 Images Processed: 433 Images Processed: 434 Images Processed: 435 Images Processed: 436 Images Processed: 437 Images Processed: 438 Images Processed: 439 Images Processed: 440 Images Processed: 441 Images Processed: 442 Images Processed: 443 Images Processed: 444 Images Processed: 445 Images Processed: 446 Images Processed: 447 Images Processed: 448 Images Processed: 449 Images Processed: 450 Images Processed: 451 Images Processed: 452 Images Processed: 453 Images Processed: 454 Images Processed: 455 Images Processed: 456 Images Processed: 457 Images Processed: 458 Images Processed: 459 Images Processed: 460 Images Processed: 461 Images Processed: 462 Images Processed: 463 Images Processed: 464 Images Processed: 465 Images Processed: 466 Images Processed: 467 Images Processed: 468 Images Processed: 469 Images Processed: 470 Images Processed: 471 Images Processed: 472 Images Processed: 473 Images Processed: 474 Images Processed: 475 Images Processed: 476 Images Processed: 477 Images Processed: 478 Images Processed: 479 Images Processed: 480 Images Processed: 481 Images Processed: 482 Images Processed: 483 Images Processed: 484 Images Processed: 485 Images Processed: 486 Images Processed: 487 Images Processed: 488 Images Processed: 489 Images Processed: 490 Images Processed: 491 Images Processed: 492 Images Processed: 493 Images Processed: 494 Images Processed: 495 Images Processed: 496 Images Processed: 497 Images Processed: 498 Images Processed: 499 Images Processed: 500 

##################################################
what           :             AP         AP_50%
##################################################
person         :          0.180          0.439
rider          :          0.091          0.375
car            :          0.367          0.627
truck          :          0.271          0.389
bus            :          0.464          0.640
train          :          0.259          0.432
motorcycle     :          0.101          0.294
bicycle        :          0.108          0.352
--------------------------------------------------
average        :          0.230          0.443

[32m[05/29 18:47:09 d2.engine.defaults]: [0mEvaluation results for cityscapes_fine_panoptic_val in csv format:
[32m[05/29 18:47:09 d2.evaluation.testing]: [0mcopypaste: Task: panoptic_seg
[32m[05/29 18:47:09 d2.evaluation.testing]: [0mcopypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[32m[05/29 18:47:09 d2.evaluation.testing]: [0mcopypaste: 53.8841,77.9915,67.3770,41.3873,75.6657,54.2993,62.9728,79.6830,76.8880
[32m[05/29 18:47:09 d2.evaluation.testing]: [0mcopypaste: Task: sem_seg
[32m[05/29 18:47:09 d2.evaluation.testing]: [0mcopypaste: IoU,iIoU,IoU_sup,iIoU_sup
[32m[05/29 18:47:09 d2.evaluation.testing]: [0mcopypaste: 74.9498,57.2418,88.4880,79.5822
[32m[05/29 18:47:09 d2.evaluation.testing]: [0mcopypaste: Task: segm
[32m[05/29 18:47:09 d2.evaluation.testing]: [0mcopypaste: AP,AP50
[32m[05/29 18:47:09 d2.evaluation.testing]: [0mcopypaste: 23.0047,44.3366
